"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/music-metadata";
exports.ids = ["vendor-chunks/music-metadata"];
exports.modules = {

/***/ "(rsc)/./node_modules/music-metadata/lib/ParseError.js":
/*!*******************************************************!*\
  !*** ./node_modules/music-metadata/lib/ParseError.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CouldNotDetermineFileTypeError: () => (/* binding */ CouldNotDetermineFileTypeError),\n/* harmony export */   FieldDecodingError: () => (/* binding */ FieldDecodingError),\n/* harmony export */   InternalParserError: () => (/* binding */ InternalParserError),\n/* harmony export */   UnsupportedFileTypeError: () => (/* binding */ UnsupportedFileTypeError),\n/* harmony export */   makeParseError: () => (/* binding */ makeParseError),\n/* harmony export */   makeUnexpectedFileContentError: () => (/* binding */ makeUnexpectedFileContentError)\n/* harmony export */ });\nconst makeParseError = (name) => {\n    return class ParseError extends Error {\n        constructor(message) {\n            super(message);\n            this.name = name;\n        }\n    };\n};\n// Concrete error class representing a file type determination failure.\nclass CouldNotDetermineFileTypeError extends makeParseError('CouldNotDetermineFileTypeError') {\n}\n// Concrete error class representing an unsupported file type.\nclass UnsupportedFileTypeError extends makeParseError('UnsupportedFileTypeError') {\n}\n// Concrete error class representing unexpected file content.\nclass UnexpectedFileContentError extends makeParseError('UnexpectedFileContentError') {\n    constructor(fileType, message) {\n        super(message);\n        this.fileType = fileType;\n    }\n    // Override toString to include file type information.\n    toString() {\n        return `${this.name} (FileType: ${this.fileType}): ${this.message}`;\n    }\n}\n// Concrete error class representing a field decoding error.\nclass FieldDecodingError extends makeParseError('FieldDecodingError') {\n}\nclass InternalParserError extends makeParseError('InternalParserError') {\n}\n// Factory function to create a specific type of UnexpectedFileContentError.\nconst makeUnexpectedFileContentError = (fileType) => {\n    return class extends UnexpectedFileContentError {\n        constructor(message) {\n            super(fileType, message);\n        }\n    };\n};\n//# sourceMappingURL=ParseError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL1BhcnNlRXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsV0FBVyxhQUFhLGNBQWMsS0FBSyxhQUFhO0FBQzFFO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9QYXJzZUVycm9yLmpzP2M5MWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IG1ha2VQYXJzZUVycm9yID0gKG5hbWUpID0+IHtcbiAgICByZXR1cm4gY2xhc3MgUGFyc2VFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICAgICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB9XG4gICAgfTtcbn07XG4vLyBDb25jcmV0ZSBlcnJvciBjbGFzcyByZXByZXNlbnRpbmcgYSBmaWxlIHR5cGUgZGV0ZXJtaW5hdGlvbiBmYWlsdXJlLlxuZXhwb3J0IGNsYXNzIENvdWxkTm90RGV0ZXJtaW5lRmlsZVR5cGVFcnJvciBleHRlbmRzIG1ha2VQYXJzZUVycm9yKCdDb3VsZE5vdERldGVybWluZUZpbGVUeXBlRXJyb3InKSB7XG59XG4vLyBDb25jcmV0ZSBlcnJvciBjbGFzcyByZXByZXNlbnRpbmcgYW4gdW5zdXBwb3J0ZWQgZmlsZSB0eXBlLlxuZXhwb3J0IGNsYXNzIFVuc3VwcG9ydGVkRmlsZVR5cGVFcnJvciBleHRlbmRzIG1ha2VQYXJzZUVycm9yKCdVbnN1cHBvcnRlZEZpbGVUeXBlRXJyb3InKSB7XG59XG4vLyBDb25jcmV0ZSBlcnJvciBjbGFzcyByZXByZXNlbnRpbmcgdW5leHBlY3RlZCBmaWxlIGNvbnRlbnQuXG5jbGFzcyBVbmV4cGVjdGVkRmlsZUNvbnRlbnRFcnJvciBleHRlbmRzIG1ha2VQYXJzZUVycm9yKCdVbmV4cGVjdGVkRmlsZUNvbnRlbnRFcnJvcicpIHtcbiAgICBjb25zdHJ1Y3RvcihmaWxlVHlwZSwgbWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5maWxlVHlwZSA9IGZpbGVUeXBlO1xuICAgIH1cbiAgICAvLyBPdmVycmlkZSB0b1N0cmluZyB0byBpbmNsdWRlIGZpbGUgdHlwZSBpbmZvcm1hdGlvbi5cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGAke3RoaXMubmFtZX0gKEZpbGVUeXBlOiAke3RoaXMuZmlsZVR5cGV9KTogJHt0aGlzLm1lc3NhZ2V9YDtcbiAgICB9XG59XG4vLyBDb25jcmV0ZSBlcnJvciBjbGFzcyByZXByZXNlbnRpbmcgYSBmaWVsZCBkZWNvZGluZyBlcnJvci5cbmV4cG9ydCBjbGFzcyBGaWVsZERlY29kaW5nRXJyb3IgZXh0ZW5kcyBtYWtlUGFyc2VFcnJvcignRmllbGREZWNvZGluZ0Vycm9yJykge1xufVxuZXhwb3J0IGNsYXNzIEludGVybmFsUGFyc2VyRXJyb3IgZXh0ZW5kcyBtYWtlUGFyc2VFcnJvcignSW50ZXJuYWxQYXJzZXJFcnJvcicpIHtcbn1cbi8vIEZhY3RvcnkgZnVuY3Rpb24gdG8gY3JlYXRlIGEgc3BlY2lmaWMgdHlwZSBvZiBVbmV4cGVjdGVkRmlsZUNvbnRlbnRFcnJvci5cbmV4cG9ydCBjb25zdCBtYWtlVW5leHBlY3RlZEZpbGVDb250ZW50RXJyb3IgPSAoZmlsZVR5cGUpID0+IHtcbiAgICByZXR1cm4gY2xhc3MgZXh0ZW5kcyBVbmV4cGVjdGVkRmlsZUNvbnRlbnRFcnJvciB7XG4gICAgICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgICAgIHN1cGVyKGZpbGVUeXBlLCBtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH07XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UGFyc2VFcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ParseError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/ParserFactory.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/ParserFactory.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ParserFactory: () => (/* binding */ ParserFactory),\n/* harmony export */   parseHttpContentType: () => (/* binding */ parseHttpContentType)\n/* harmony export */ });\n/* harmony import */ var file_type__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! file-type */ \"(rsc)/./node_modules/file-type/core.js\");\n/* harmony import */ var content_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! content-type */ \"(rsc)/./node_modules/content-type/index.js\");\n/* harmony import */ var media_typer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! media-typer */ \"(rsc)/./node_modules/media-typer/index.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _common_MetadataCollector_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/MetadataCollector.js */ \"(rsc)/./node_modules/music-metadata/lib/common/MetadataCollector.js\");\n/* harmony import */ var _mpeg_MpegLoader_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mpeg/MpegLoader.js */ \"(rsc)/./node_modules/music-metadata/lib/mpeg/MpegLoader.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n/* harmony import */ var _apev2_Apev2Loader_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./apev2/Apev2Loader.js */ \"(rsc)/./node_modules/music-metadata/lib/apev2/Apev2Loader.js\");\n/* harmony import */ var _asf_AsfLoader_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./asf/AsfLoader.js */ \"(rsc)/./node_modules/music-metadata/lib/asf/AsfLoader.js\");\n/* harmony import */ var _dsdiff_DsdiffLoader_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dsdiff/DsdiffLoader.js */ \"(rsc)/./node_modules/music-metadata/lib/dsdiff/DsdiffLoader.js\");\n/* harmony import */ var _aiff_AiffLoader_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./aiff/AiffLoader.js */ \"(rsc)/./node_modules/music-metadata/lib/aiff/AiffLoader.js\");\n/* harmony import */ var _dsf_DsfLoader_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dsf/DsfLoader.js */ \"(rsc)/./node_modules/music-metadata/lib/dsf/DsfLoader.js\");\n/* harmony import */ var _flac_FlacLoader_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./flac/FlacLoader.js */ \"(rsc)/./node_modules/music-metadata/lib/flac/FlacLoader.js\");\n/* harmony import */ var _matroska_MatroskaLoader_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./matroska/MatroskaLoader.js */ \"(rsc)/./node_modules/music-metadata/lib/matroska/MatroskaLoader.js\");\n/* harmony import */ var _mp4_Mp4Loader_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./mp4/Mp4Loader.js */ \"(rsc)/./node_modules/music-metadata/lib/mp4/Mp4Loader.js\");\n/* harmony import */ var _musepack_MusepackLoader_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./musepack/MusepackLoader.js */ \"(rsc)/./node_modules/music-metadata/lib/musepack/MusepackLoader.js\");\n/* harmony import */ var _ogg_OggLoader_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./ogg/OggLoader.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/OggLoader.js\");\n/* harmony import */ var _wavpack_WavPackLoader_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./wavpack/WavPackLoader.js */ \"(rsc)/./node_modules/music-metadata/lib/wavpack/WavPackLoader.js\");\n/* harmony import */ var _wav_WaveLoader_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./wav/WaveLoader.js */ \"(rsc)/./node_modules/music-metadata/lib/wav/WaveLoader.js\");\n/* harmony import */ var _amr_AmrLoader_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./amr/AmrLoader.js */ \"(rsc)/./node_modules/music-metadata/lib/amr/AmrLoader.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./core.js */ \"(rsc)/./node_modules/music-metadata/lib/core.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_2__('music-metadata:parser:factory');\nfunction parseHttpContentType(contentType) {\n    const type = content_type__WEBPACK_IMPORTED_MODULE_0__.parse(contentType);\n    const mime = (0,media_typer__WEBPACK_IMPORTED_MODULE_1__.parse)(type.type);\n    return {\n        type: mime.type,\n        subtype: mime.subtype,\n        suffix: mime.suffix,\n        parameters: type.parameters\n    };\n}\nclass ParserFactory {\n    constructor() {\n        this.parsers = [];\n        [\n            _flac_FlacLoader_js__WEBPACK_IMPORTED_MODULE_11__.flacParserLoader,\n            _mpeg_MpegLoader_js__WEBPACK_IMPORTED_MODULE_4__.mpegParserLoader,\n            _apev2_Apev2Loader_js__WEBPACK_IMPORTED_MODULE_6__.apeParserLoader,\n            _mp4_Mp4Loader_js__WEBPACK_IMPORTED_MODULE_13__.mp4ParserLoader,\n            _matroska_MatroskaLoader_js__WEBPACK_IMPORTED_MODULE_12__.matroskaParserLoader,\n            _wav_WaveLoader_js__WEBPACK_IMPORTED_MODULE_17__.riffParserLoader,\n            _ogg_OggLoader_js__WEBPACK_IMPORTED_MODULE_15__.oggParserLoader,\n            _asf_AsfLoader_js__WEBPACK_IMPORTED_MODULE_7__.asfParserLoader,\n            _aiff_AiffLoader_js__WEBPACK_IMPORTED_MODULE_9__.aiffParserLoader,\n            _wavpack_WavPackLoader_js__WEBPACK_IMPORTED_MODULE_16__.wavpackParserLoader,\n            _musepack_MusepackLoader_js__WEBPACK_IMPORTED_MODULE_14__.musepackParserLoader,\n            _dsf_DsfLoader_js__WEBPACK_IMPORTED_MODULE_10__.dsfParserLoader,\n            _dsdiff_DsdiffLoader_js__WEBPACK_IMPORTED_MODULE_8__.dsdiffParserLoader,\n            _amr_AmrLoader_js__WEBPACK_IMPORTED_MODULE_18__.amrParserLoader\n        ].forEach(parser => this.registerParser(parser));\n    }\n    registerParser(parser) {\n        this.parsers.push(parser);\n    }\n    async parse(tokenizer, parserLoader, opts) {\n        if (tokenizer.supportsRandomAccess()) {\n            debug('tokenizer supports random-access, scanning for appending headers');\n            await (0,_core_js__WEBPACK_IMPORTED_MODULE_19__.scanAppendingHeaders)(tokenizer, opts);\n        }\n        else {\n            debug('tokenizer does not support random-access, cannot scan for appending headers');\n        }\n        if (!parserLoader) {\n            const buf = new Uint8Array(4100);\n            if (tokenizer.fileInfo.mimeType) {\n                parserLoader = this.findLoaderForType(getParserIdForMimeType(tokenizer.fileInfo.mimeType));\n            }\n            if (!parserLoader && tokenizer.fileInfo.path) {\n                parserLoader = this.findLoaderForExtension(tokenizer.fileInfo.path);\n            }\n            if (!parserLoader) {\n                // Parser could not be determined on MIME-type or extension\n                debug('Guess parser on content...');\n                await tokenizer.peekBuffer(buf, { mayBeLess: true });\n                const guessedType = await (0,file_type__WEBPACK_IMPORTED_MODULE_20__.fileTypeFromBuffer)(buf);\n                if (!guessedType || !guessedType.mime) {\n                    throw new _ParseError_js__WEBPACK_IMPORTED_MODULE_5__.CouldNotDetermineFileTypeError('Failed to determine audio format');\n                }\n                debug(`Guessed file type is mime=${guessedType.mime}, extension=${guessedType.ext}`);\n                parserLoader = this.findLoaderForType(getParserIdForMimeType(guessedType.mime));\n                if (!parserLoader) {\n                    throw new _ParseError_js__WEBPACK_IMPORTED_MODULE_5__.UnsupportedFileTypeError(`Guessed MIME-type not supported: ${guessedType.mime}`);\n                }\n            }\n        }\n        // Parser found, execute parser\n        debug(`Loading ${parserLoader.parserType} parser...`);\n        const metadata = new _common_MetadataCollector_js__WEBPACK_IMPORTED_MODULE_3__.MetadataCollector(opts);\n        const parser = await parserLoader.load(metadata, tokenizer, opts ?? {});\n        debug(`Parser ${parserLoader.parserType} loaded`);\n        await parser.parse();\n        return metadata.toCommonMetadata();\n    }\n    /**\n     * @param filePath - Path, filename or extension to audio file\n     * @return Parser submodule name\n     */\n    findLoaderForExtension(filePath) {\n        if (!filePath)\n            return;\n        const extension = getExtension(filePath).toLocaleLowerCase() || filePath;\n        return this.parsers.find(parser => parser.extensions.indexOf(extension) !== -1);\n    }\n    findLoaderForType(moduleName) {\n        return moduleName ? this.parsers.find(parser => parser.parserType === moduleName) : undefined;\n    }\n}\nfunction getExtension(fname) {\n    const i = fname.lastIndexOf('.');\n    return i === -1 ? '' : fname.slice(i);\n}\n/**\n * @param httpContentType - HTTP Content-Type, extension, path or filename\n * @returns Parser submodule name\n */\nfunction getParserIdForMimeType(httpContentType) {\n    let mime;\n    if (!httpContentType)\n        return;\n    try {\n        mime = parseHttpContentType(httpContentType);\n    }\n    catch (err) {\n        debug(`Invalid HTTP Content-Type header value: ${httpContentType}`);\n        return;\n    }\n    const subType = mime.subtype.indexOf('x-') === 0 ? mime.subtype.substring(2) : mime.subtype;\n    switch (mime.type) {\n        case 'audio':\n            switch (subType) {\n                case 'mp3': // Incorrect MIME-type, Chrome, in Web API File object\n                case 'mpeg':\n                    return 'mpeg';\n                case 'aac':\n                case 'aacp':\n                    return 'mpeg'; // adts\n                case 'flac':\n                    return 'flac';\n                case 'ape':\n                case 'monkeys-audio':\n                    return 'apev2';\n                case 'mp4':\n                case 'm4a':\n                    return 'mp4';\n                case 'ogg': // RFC 7845\n                case 'opus': // RFC 6716\n                case 'speex': // RFC 5574\n                    return 'ogg';\n                case 'ms-wma':\n                case 'ms-wmv':\n                case 'ms-asf':\n                    return 'asf';\n                case 'aiff':\n                case 'aif':\n                case 'aifc':\n                    return 'aiff';\n                case 'vnd.wave':\n                case 'wav':\n                case 'wave':\n                    return 'riff';\n                case 'wavpack':\n                    return 'wavpack';\n                case 'musepack':\n                    return 'musepack';\n                case 'matroska':\n                case 'webm':\n                    return 'matroska';\n                case 'dsf':\n                    return 'dsf';\n                case 'amr':\n                    return 'amr';\n            }\n            break;\n        case 'video':\n            switch (subType) {\n                case 'ms-asf':\n                case 'ms-wmv':\n                    return 'asf';\n                case 'm4v':\n                case 'mp4':\n                    return 'mp4';\n                case 'ogg':\n                    return 'ogg';\n                case 'matroska':\n                case 'webm':\n                    return 'matroska';\n            }\n            break;\n        case 'application':\n            switch (subType) {\n                case 'vnd.ms-asf':\n                    return 'asf';\n                case 'ogg':\n                    return 'ogg';\n            }\n            break;\n    }\n}\n//# sourceMappingURL=ParserFactory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ParserFactory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/aiff/AiffLoader.js":
/*!************************************************************!*\
  !*** ./node_modules/music-metadata/lib/aiff/AiffLoader.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aiffParserLoader: () => (/* binding */ aiffParserLoader)\n/* harmony export */ });\nconst aiffParserLoader = {\n    parserType: 'aiff',\n    extensions: ['.aif', 'aiff', 'aifc'],\n    async load(metadata, tokenizer, options) {\n        return new (await __webpack_require__.e(/*! import() */ \"vendor-chunks/music-metadata\").then(__webpack_require__.bind(__webpack_require__, /*! ./AiffParser.js */ \"(rsc)/./node_modules/music-metadata/lib/aiff/AiffParser.js\"))).AIFFParser(metadata, tokenizer, options);\n    }\n};\n//# sourceMappingURL=AiffLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2FpZmYvQWlmZkxvYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsOE1BQXlCO0FBQ25EO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvYWlmZi9BaWZmTG9hZGVyLmpzP2NhMjMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGFpZmZQYXJzZXJMb2FkZXIgPSB7XG4gICAgcGFyc2VyVHlwZTogJ2FpZmYnLFxuICAgIGV4dGVuc2lvbnM6IFsnLmFpZicsICdhaWZmJywgJ2FpZmMnXSxcbiAgICBhc3luYyBsb2FkKG1ldGFkYXRhLCB0b2tlbml6ZXIsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyAoYXdhaXQgaW1wb3J0KCcuL0FpZmZQYXJzZXIuanMnKSkuQUlGRlBhcnNlcihtZXRhZGF0YSwgdG9rZW5pemVyLCBvcHRpb25zKTtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWlmZkxvYWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/aiff/AiffLoader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/aiff/AiffParser.js":
/*!************************************************************!*\
  !*** ./node_modules/music-metadata/lib/aiff/AiffParser.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AIFFParser: () => (/* binding */ AIFFParser)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var strtok3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! strtok3 */ \"(rsc)/./node_modules/strtok3/lib/index.js\");\n/* harmony import */ var _id3v2_ID3v2Parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../id3v2/ID3v2Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v2Parser.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/FourCC.js */ \"(rsc)/./node_modules/music-metadata/lib/common/FourCC.js\");\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/BasicParser.js */ \"(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js\");\n/* harmony import */ var _AiffToken_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./AiffToken.js */ \"(rsc)/./node_modules/music-metadata/lib/aiff/AiffToken.js\");\n/* harmony import */ var _iff_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../iff/index.js */ \"(rsc)/./node_modules/music-metadata/lib/iff/index.js\");\n\n\n\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_1__('music-metadata:parser:aiff');\n/**\n * AIFF - Audio Interchange File Format\n *\n * Ref:\n * - http://www-mmsp.ece.mcgill.ca/Documents/AudioFormats/AIFF/AIFF.html\n * - http://www-mmsp.ece.mcgill.ca/Documents/AudioFormats/AIFF/Docs/AIFF-1.3.pdf\n */\nclass AIFFParser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_5__.BasicParser {\n    constructor() {\n        super(...arguments);\n        this.isCompressed = null;\n    }\n    async parse() {\n        const header = await this.tokenizer.readToken(_iff_index_js__WEBPACK_IMPORTED_MODULE_7__.Header);\n        if (header.chunkID !== 'FORM')\n            throw new _AiffToken_js__WEBPACK_IMPORTED_MODULE_6__.AiffContentError('Invalid Chunk-ID, expected \\'FORM\\''); // Not AIFF format\n        const type = await this.tokenizer.readToken(_common_FourCC_js__WEBPACK_IMPORTED_MODULE_4__.FourCcToken);\n        switch (type) {\n            case 'AIFF':\n                this.metadata.setFormat('container', type);\n                this.isCompressed = false;\n                break;\n            case 'AIFC':\n                this.metadata.setFormat('container', 'AIFF-C');\n                this.isCompressed = true;\n                break;\n            default:\n                throw new _AiffToken_js__WEBPACK_IMPORTED_MODULE_6__.AiffContentError(`Unsupported AIFF type: ${type}`);\n        }\n        this.metadata.setFormat('lossless', !this.isCompressed);\n        try {\n            while (!this.tokenizer.fileInfo.size || this.tokenizer.fileInfo.size - this.tokenizer.position >= _iff_index_js__WEBPACK_IMPORTED_MODULE_7__.Header.len) {\n                debug(`Reading AIFF chunk at offset=${this.tokenizer.position}`);\n                const chunkHeader = await this.tokenizer.readToken(_iff_index_js__WEBPACK_IMPORTED_MODULE_7__.Header);\n                const nextChunk = 2 * Math.round(chunkHeader.chunkSize / 2);\n                const bytesRead = await this.readData(chunkHeader);\n                await this.tokenizer.ignore(nextChunk - bytesRead);\n            }\n        }\n        catch (err) {\n            if (err instanceof strtok3__WEBPACK_IMPORTED_MODULE_2__.EndOfStreamError) {\n                debug(\"End-of-stream\");\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    async readData(header) {\n        switch (header.chunkID) {\n            case 'COMM': { // The Common Chunk\n                if (this.isCompressed === null) {\n                    throw new _AiffToken_js__WEBPACK_IMPORTED_MODULE_6__.AiffContentError('Failed to parse AIFF.COMM chunk when compression type is unknown');\n                }\n                const common = await this.tokenizer.readToken(new _AiffToken_js__WEBPACK_IMPORTED_MODULE_6__.Common(header, this.isCompressed));\n                this.metadata.setFormat('bitsPerSample', common.sampleSize);\n                this.metadata.setFormat('sampleRate', common.sampleRate);\n                this.metadata.setFormat('numberOfChannels', common.numChannels);\n                this.metadata.setFormat('numberOfSamples', common.numSampleFrames);\n                this.metadata.setFormat('duration', common.numSampleFrames / common.sampleRate);\n                if (common.compressionName || common.compressionType) {\n                    this.metadata.setFormat('codec', common.compressionName ?? _AiffToken_js__WEBPACK_IMPORTED_MODULE_6__.compressionTypes[common.compressionType]);\n                }\n                return header.chunkSize;\n            }\n            case 'ID3 ': { // ID3-meta-data\n                const id3_data = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayType(header.chunkSize));\n                const rst = strtok3__WEBPACK_IMPORTED_MODULE_2__.fromBuffer(id3_data);\n                await new _id3v2_ID3v2Parser_js__WEBPACK_IMPORTED_MODULE_3__.ID3v2Parser().parse(this.metadata, rst, this.options);\n                return header.chunkSize;\n            }\n            case 'SSND': // Sound Data Chunk\n                if (this.metadata.format.duration) {\n                    this.metadata.setFormat('bitrate', 8 * header.chunkSize / this.metadata.format.duration);\n                }\n                return 0;\n            case 'NAME': // Sample name chunk\n            case 'AUTH': // Author chunk\n            case '(c) ': // Copyright chunk\n            case 'ANNO': // Annotation chunk\n                return this.readTextChunk(header);\n            default:\n                debug(`Ignore chunk id=${header.chunkID}, size=${header.chunkSize}`);\n                return 0;\n        }\n    }\n    async readTextChunk(header) {\n        const value = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(header.chunkSize, 'ascii'));\n        const values = value.split('\\0').map(v => v.trim()).filter(v => v?.length);\n        await Promise.all(values.map(v => this.metadata.addTag('AIFF', header.chunkID, v)));\n        return header.chunkSize;\n    }\n}\n//# sourceMappingURL=AiffParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/aiff/AiffParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/aiff/AiffTagMap.js":
/*!************************************************************!*\
  !*** ./node_modules/music-metadata/lib/aiff/AiffTagMap.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AiffTagMapper: () => (/* binding */ AiffTagMapper)\n/* harmony export */ });\n/* harmony import */ var _common_GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/GenericTagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/common/GenericTagMapper.js\");\n\n/**\n * ID3v1 tag mappings\n */\nconst tagMap = {\n    NAME: 'title',\n    AUTH: 'artist',\n    '(c) ': 'copyright',\n    ANNO: 'comment'\n};\nclass AiffTagMapper extends _common_GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_0__.CommonTagMapper {\n    constructor() {\n        super(['AIFF'], tagMap);\n    }\n}\n//# sourceMappingURL=AiffTagMap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2FpZmYvQWlmZlRhZ01hcC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0QkFBNEIsd0VBQWU7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvYWlmZi9BaWZmVGFnTWFwLmpzPzJmOWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uVGFnTWFwcGVyIH0gZnJvbSAnLi4vY29tbW9uL0dlbmVyaWNUYWdNYXBwZXIuanMnO1xuLyoqXG4gKiBJRDN2MSB0YWcgbWFwcGluZ3NcbiAqL1xuY29uc3QgdGFnTWFwID0ge1xuICAgIE5BTUU6ICd0aXRsZScsXG4gICAgQVVUSDogJ2FydGlzdCcsXG4gICAgJyhjKSAnOiAnY29weXJpZ2h0JyxcbiAgICBBTk5POiAnY29tbWVudCdcbn07XG5leHBvcnQgY2xhc3MgQWlmZlRhZ01hcHBlciBleHRlbmRzIENvbW1vblRhZ01hcHBlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKFsnQUlGRiddLCB0YWdNYXApO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFpZmZUYWdNYXAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/aiff/AiffTagMap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/aiff/AiffToken.js":
/*!***********************************************************!*\
  !*** ./node_modules/music-metadata/lib/aiff/AiffToken.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AiffContentError: () => (/* binding */ AiffContentError),\n/* harmony export */   Common: () => (/* binding */ Common),\n/* harmony export */   compressionTypes: () => (/* binding */ compressionTypes)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/FourCC.js */ \"(rsc)/./node_modules/music-metadata/lib/common/FourCC.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\n\nconst compressionTypes = {\n    NONE: 'not compressed\tPCM\tApple Computer',\n    sowt: 'PCM (byte swapped)',\n    fl32: '32-bit floating point IEEE 32-bit float',\n    fl64: '64-bit floating point IEEE 64-bit float\tApple Computer',\n    alaw: 'ALaw 2:1\t8-bit ITU-T G.711 A-law',\n    ulaw: 'µLaw 2:1\t8-bit ITU-T G.711 µ-law\tApple Computer',\n    ULAW: 'CCITT G.711 u-law 8-bit ITU-T G.711 µ-law',\n    ALAW: 'CCITT G.711 A-law 8-bit ITU-T G.711 A-law',\n    FL32: 'Float 32\tIEEE 32-bit float '\n};\nclass AiffContentError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_2__.makeUnexpectedFileContentError)('AIFF') {\n}\nclass Common {\n    constructor(header, isAifc) {\n        this.isAifc = isAifc;\n        const minimumChunkSize = isAifc ? 22 : 18;\n        if (header.chunkSize < minimumChunkSize)\n            throw new AiffContentError(`COMMON CHUNK size should always be at least ${minimumChunkSize}`);\n        this.len = header.chunkSize;\n    }\n    get(buf, off) {\n        // see: https://cycling74.com/forums/aiffs-80-bit-sample-rate-value\n        const shift = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 8) - 16398;\n        const baseSampleRate = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 8 + 2);\n        const res = {\n            numChannels: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off),\n            numSampleFrames: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 2),\n            sampleSize: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 6),\n            sampleRate: shift < 0 ? baseSampleRate >> Math.abs(shift) : baseSampleRate << shift\n        };\n        if (this.isAifc) {\n            res.compressionType = _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__.FourCcToken.get(buf, off + 18);\n            if (this.len > 22) {\n                const strLen = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off + 22);\n                if (strLen > 0) {\n                    const padding = (strLen + 1) % 2;\n                    if (23 + strLen + padding === this.len) {\n                        res.compressionName = new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(strLen, 'latin1').get(buf, off + 23);\n                    }\n                    else {\n                        throw new AiffContentError('Illegal pstring length');\n                    }\n                }\n                else {\n                    res.compressionName = undefined;\n                }\n            }\n        }\n        else {\n            res.compressionName = 'PCM';\n        }\n        return res;\n    }\n}\n//# sourceMappingURL=AiffToken.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2FpZmYvQWlmZlRva2VuLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxQztBQUNhO0FBQ2dCO0FBQzNEO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywrQkFBK0IsOEVBQThCO0FBQ3BFO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRixpQkFBaUI7QUFDdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isa0RBQWU7QUFDckMsK0JBQStCLGtEQUFlO0FBQzlDO0FBQ0EseUJBQXlCLGtEQUFlO0FBQ3hDLDZCQUE2QixrREFBZTtBQUM1Qyx3QkFBd0Isa0RBQWU7QUFDdkM7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDBEQUFXO0FBQzdDO0FBQ0EsK0JBQStCLDhDQUFXO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxtREFBZ0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvYWlmZi9BaWZmVG9rZW4uanM/Nzc2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBUb2tlbiBmcm9tICd0b2tlbi10eXBlcyc7XG5pbXBvcnQgeyBGb3VyQ2NUb2tlbiB9IGZyb20gJy4uL2NvbW1vbi9Gb3VyQ0MuanMnO1xuaW1wb3J0IHsgbWFrZVVuZXhwZWN0ZWRGaWxlQ29udGVudEVycm9yIH0gZnJvbSAnLi4vUGFyc2VFcnJvci5qcyc7XG5leHBvcnQgY29uc3QgY29tcHJlc3Npb25UeXBlcyA9IHtcbiAgICBOT05FOiAnbm90IGNvbXByZXNzZWRcdFBDTVx0QXBwbGUgQ29tcHV0ZXInLFxuICAgIHNvd3Q6ICdQQ00gKGJ5dGUgc3dhcHBlZCknLFxuICAgIGZsMzI6ICczMi1iaXQgZmxvYXRpbmcgcG9pbnQgSUVFRSAzMi1iaXQgZmxvYXQnLFxuICAgIGZsNjQ6ICc2NC1iaXQgZmxvYXRpbmcgcG9pbnQgSUVFRSA2NC1iaXQgZmxvYXRcdEFwcGxlIENvbXB1dGVyJyxcbiAgICBhbGF3OiAnQUxhdyAyOjFcdDgtYml0IElUVS1UIEcuNzExIEEtbGF3JyxcbiAgICB1bGF3OiAnwrVMYXcgMjoxXHQ4LWJpdCBJVFUtVCBHLjcxMSDCtS1sYXdcdEFwcGxlIENvbXB1dGVyJyxcbiAgICBVTEFXOiAnQ0NJVFQgRy43MTEgdS1sYXcgOC1iaXQgSVRVLVQgRy43MTEgwrUtbGF3JyxcbiAgICBBTEFXOiAnQ0NJVFQgRy43MTEgQS1sYXcgOC1iaXQgSVRVLVQgRy43MTEgQS1sYXcnLFxuICAgIEZMMzI6ICdGbG9hdCAzMlx0SUVFRSAzMi1iaXQgZmxvYXQgJ1xufTtcbmV4cG9ydCBjbGFzcyBBaWZmQ29udGVudEVycm9yIGV4dGVuZHMgbWFrZVVuZXhwZWN0ZWRGaWxlQ29udGVudEVycm9yKCdBSUZGJykge1xufVxuZXhwb3J0IGNsYXNzIENvbW1vbiB7XG4gICAgY29uc3RydWN0b3IoaGVhZGVyLCBpc0FpZmMpIHtcbiAgICAgICAgdGhpcy5pc0FpZmMgPSBpc0FpZmM7XG4gICAgICAgIGNvbnN0IG1pbmltdW1DaHVua1NpemUgPSBpc0FpZmMgPyAyMiA6IDE4O1xuICAgICAgICBpZiAoaGVhZGVyLmNodW5rU2l6ZSA8IG1pbmltdW1DaHVua1NpemUpXG4gICAgICAgICAgICB0aHJvdyBuZXcgQWlmZkNvbnRlbnRFcnJvcihgQ09NTU9OIENIVU5LIHNpemUgc2hvdWxkIGFsd2F5cyBiZSBhdCBsZWFzdCAke21pbmltdW1DaHVua1NpemV9YCk7XG4gICAgICAgIHRoaXMubGVuID0gaGVhZGVyLmNodW5rU2l6ZTtcbiAgICB9XG4gICAgZ2V0KGJ1Ziwgb2ZmKSB7XG4gICAgICAgIC8vIHNlZTogaHR0cHM6Ly9jeWNsaW5nNzQuY29tL2ZvcnVtcy9haWZmcy04MC1iaXQtc2FtcGxlLXJhdGUtdmFsdWVcbiAgICAgICAgY29uc3Qgc2hpZnQgPSBUb2tlbi5VSU5UMTZfQkUuZ2V0KGJ1Ziwgb2ZmICsgOCkgLSAxNjM5ODtcbiAgICAgICAgY29uc3QgYmFzZVNhbXBsZVJhdGUgPSBUb2tlbi5VSU5UMTZfQkUuZ2V0KGJ1Ziwgb2ZmICsgOCArIDIpO1xuICAgICAgICBjb25zdCByZXMgPSB7XG4gICAgICAgICAgICBudW1DaGFubmVsczogVG9rZW4uVUlOVDE2X0JFLmdldChidWYsIG9mZiksXG4gICAgICAgICAgICBudW1TYW1wbGVGcmFtZXM6IFRva2VuLlVJTlQzMl9CRS5nZXQoYnVmLCBvZmYgKyAyKSxcbiAgICAgICAgICAgIHNhbXBsZVNpemU6IFRva2VuLlVJTlQxNl9CRS5nZXQoYnVmLCBvZmYgKyA2KSxcbiAgICAgICAgICAgIHNhbXBsZVJhdGU6IHNoaWZ0IDwgMCA/IGJhc2VTYW1wbGVSYXRlID4+IE1hdGguYWJzKHNoaWZ0KSA6IGJhc2VTYW1wbGVSYXRlIDw8IHNoaWZ0XG4gICAgICAgIH07XG4gICAgICAgIGlmICh0aGlzLmlzQWlmYykge1xuICAgICAgICAgICAgcmVzLmNvbXByZXNzaW9uVHlwZSA9IEZvdXJDY1Rva2VuLmdldChidWYsIG9mZiArIDE4KTtcbiAgICAgICAgICAgIGlmICh0aGlzLmxlbiA+IDIyKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3RyTGVuID0gVG9rZW4uVUlOVDguZ2V0KGJ1Ziwgb2ZmICsgMjIpO1xuICAgICAgICAgICAgICAgIGlmIChzdHJMZW4gPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHBhZGRpbmcgPSAoc3RyTGVuICsgMSkgJSAyO1xuICAgICAgICAgICAgICAgICAgICBpZiAoMjMgKyBzdHJMZW4gKyBwYWRkaW5nID09PSB0aGlzLmxlbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLmNvbXByZXNzaW9uTmFtZSA9IG5ldyBUb2tlbi5TdHJpbmdUeXBlKHN0ckxlbiwgJ2xhdGluMScpLmdldChidWYsIG9mZiArIDIzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBBaWZmQ29udGVudEVycm9yKCdJbGxlZ2FsIHBzdHJpbmcgbGVuZ3RoJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJlcy5jb21wcmVzc2lvbk5hbWUgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmVzLmNvbXByZXNzaW9uTmFtZSA9ICdQQ00nO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWlmZlRva2VuLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/aiff/AiffToken.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/amr/AmrLoader.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/amr/AmrLoader.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   amrParserLoader: () => (/* binding */ amrParserLoader)\n/* harmony export */ });\nconst amrParserLoader = {\n    parserType: 'amr',\n    extensions: ['.amr'],\n    async load(metadata, tokenizer, options) {\n        return new (await __webpack_require__.e(/*! import() */ \"vendor-chunks/music-metadata\").then(__webpack_require__.bind(__webpack_require__, /*! ./AmrParser.js */ \"(rsc)/./node_modules/music-metadata/lib/amr/AmrParser.js\"))).AmrParser(metadata, tokenizer, options);\n    }\n};\n//# sourceMappingURL=AmrLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2Ftci9BbXJMb2FkZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJNQUF3QjtBQUNsRDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2Ftci9BbXJMb2FkZXIuanM/OGQ1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgYW1yUGFyc2VyTG9hZGVyID0ge1xuICAgIHBhcnNlclR5cGU6ICdhbXInLFxuICAgIGV4dGVuc2lvbnM6IFsnLmFtciddLFxuICAgIGFzeW5jIGxvYWQobWV0YWRhdGEsIHRva2VuaXplciwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IChhd2FpdCBpbXBvcnQoJy4vQW1yUGFyc2VyLmpzJykpLkFtclBhcnNlcihtZXRhZGF0YSwgdG9rZW5pemVyLCBvcHRpb25zKTtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QW1yTG9hZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/amr/AmrLoader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/amr/AmrParser.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/amr/AmrParser.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AmrParser: () => (/* binding */ AmrParser)\n/* harmony export */ });\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/BasicParser.js */ \"(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js\");\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _AmrToken_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AmrToken.js */ \"(rsc)/./node_modules/music-metadata/lib/amr/AmrToken.js\");\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_2__('music-metadata:parser:AMR');\n/**\n * There are 8 varying levels of compression. First byte of the frame specifies CMR\n * (codec mode request), values 0-7 are valid for AMR. Each mode have different frame size.\n * This table reflects that fact.\n */\nconst m_block_size = [12, 13, 15, 17, 19, 20, 26, 31, 5, 0, 0, 0, 0, 0, 0, 0];\n/**\n * Adaptive Multi-Rate audio codec\n */\nclass AmrParser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_0__.BasicParser {\n    async parse() {\n        const magicNr = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_1__.AnsiStringType(5));\n        if (magicNr !== '#!AMR') {\n            throw new Error('Invalid AMR file: invalid MAGIC number');\n        }\n        this.metadata.setFormat('container', 'AMR');\n        this.metadata.setFormat('codec', 'AMR');\n        this.metadata.setFormat('sampleRate', 8000);\n        this.metadata.setFormat('bitrate', 64000);\n        this.metadata.setFormat('numberOfChannels', 1);\n        let total_size = 0;\n        let frames = 0;\n        const assumedFileLength = this.tokenizer.fileInfo?.size ?? Number.MAX_SAFE_INTEGER;\n        if (this.options.duration) {\n            while (this.tokenizer.position < assumedFileLength) {\n                const header = await this.tokenizer.readToken(_AmrToken_js__WEBPACK_IMPORTED_MODULE_3__.FrameHeader);\n                /* first byte is rate mode. each rate mode has frame of given length. look it up. */\n                const size = m_block_size[header.frameType];\n                if (size > 0) {\n                    total_size += size + 1;\n                    if (total_size > assumedFileLength)\n                        break;\n                    await this.tokenizer.ignore(size);\n                    ++frames;\n                }\n                else {\n                    debug(`Found no-data frame, frame-type: ${header.frameType}. Skipping`);\n                }\n            }\n            this.metadata.setFormat('duration', frames * 0.02);\n        }\n    }\n}\n//# sourceMappingURL=AmrParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2Ftci9BbXJQYXJzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBdUQ7QUFDVjtBQUNmO0FBQ2M7QUFDNUMsY0FBYyxrQ0FBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx3QkFBd0IsK0RBQVc7QUFDMUM7QUFDQSwyREFBMkQsdURBQWM7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQscURBQVc7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsaUJBQWlCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9hbXIvQW1yUGFyc2VyLmpzPzVhZWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzaWNQYXJzZXIgfSBmcm9tICcuLi9jb21tb24vQmFzaWNQYXJzZXIuanMnO1xuaW1wb3J0IHsgQW5zaVN0cmluZ1R5cGUgfSBmcm9tICd0b2tlbi10eXBlcyc7XG5pbXBvcnQgaW5pdERlYnVnIGZyb20gJ2RlYnVnJztcbmltcG9ydCB7IEZyYW1lSGVhZGVyIH0gZnJvbSAnLi9BbXJUb2tlbi5qcyc7XG5jb25zdCBkZWJ1ZyA9IGluaXREZWJ1ZygnbXVzaWMtbWV0YWRhdGE6cGFyc2VyOkFNUicpO1xuLyoqXG4gKiBUaGVyZSBhcmUgOCB2YXJ5aW5nIGxldmVscyBvZiBjb21wcmVzc2lvbi4gRmlyc3QgYnl0ZSBvZiB0aGUgZnJhbWUgc3BlY2lmaWVzIENNUlxuICogKGNvZGVjIG1vZGUgcmVxdWVzdCksIHZhbHVlcyAwLTcgYXJlIHZhbGlkIGZvciBBTVIuIEVhY2ggbW9kZSBoYXZlIGRpZmZlcmVudCBmcmFtZSBzaXplLlxuICogVGhpcyB0YWJsZSByZWZsZWN0cyB0aGF0IGZhY3QuXG4gKi9cbmNvbnN0IG1fYmxvY2tfc2l6ZSA9IFsxMiwgMTMsIDE1LCAxNywgMTksIDIwLCAyNiwgMzEsIDUsIDAsIDAsIDAsIDAsIDAsIDAsIDBdO1xuLyoqXG4gKiBBZGFwdGl2ZSBNdWx0aS1SYXRlIGF1ZGlvIGNvZGVjXG4gKi9cbmV4cG9ydCBjbGFzcyBBbXJQYXJzZXIgZXh0ZW5kcyBCYXNpY1BhcnNlciB7XG4gICAgYXN5bmMgcGFyc2UoKSB7XG4gICAgICAgIGNvbnN0IG1hZ2ljTnIgPSBhd2FpdCB0aGlzLnRva2VuaXplci5yZWFkVG9rZW4obmV3IEFuc2lTdHJpbmdUeXBlKDUpKTtcbiAgICAgICAgaWYgKG1hZ2ljTnIgIT09ICcjIUFNUicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBBTVIgZmlsZTogaW52YWxpZCBNQUdJQyBudW1iZXInKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnY29udGFpbmVyJywgJ0FNUicpO1xuICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnY29kZWMnLCAnQU1SJyk7XG4gICAgICAgIHRoaXMubWV0YWRhdGEuc2V0Rm9ybWF0KCdzYW1wbGVSYXRlJywgODAwMCk7XG4gICAgICAgIHRoaXMubWV0YWRhdGEuc2V0Rm9ybWF0KCdiaXRyYXRlJywgNjQwMDApO1xuICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnbnVtYmVyT2ZDaGFubmVscycsIDEpO1xuICAgICAgICBsZXQgdG90YWxfc2l6ZSA9IDA7XG4gICAgICAgIGxldCBmcmFtZXMgPSAwO1xuICAgICAgICBjb25zdCBhc3N1bWVkRmlsZUxlbmd0aCA9IHRoaXMudG9rZW5pemVyLmZpbGVJbmZvPy5zaXplID8/IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSO1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmR1cmF0aW9uKSB7XG4gICAgICAgICAgICB3aGlsZSAodGhpcy50b2tlbml6ZXIucG9zaXRpb24gPCBhc3N1bWVkRmlsZUxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGhlYWRlciA9IGF3YWl0IHRoaXMudG9rZW5pemVyLnJlYWRUb2tlbihGcmFtZUhlYWRlcik7XG4gICAgICAgICAgICAgICAgLyogZmlyc3QgYnl0ZSBpcyByYXRlIG1vZGUuIGVhY2ggcmF0ZSBtb2RlIGhhcyBmcmFtZSBvZiBnaXZlbiBsZW5ndGguIGxvb2sgaXQgdXAuICovXG4gICAgICAgICAgICAgICAgY29uc3Qgc2l6ZSA9IG1fYmxvY2tfc2l6ZVtoZWFkZXIuZnJhbWVUeXBlXTtcbiAgICAgICAgICAgICAgICBpZiAoc2l6ZSA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdG90YWxfc2l6ZSArPSBzaXplICsgMTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRvdGFsX3NpemUgPiBhc3N1bWVkRmlsZUxlbmd0aClcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnRva2VuaXplci5pZ25vcmUoc2l6ZSk7XG4gICAgICAgICAgICAgICAgICAgICsrZnJhbWVzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZGVidWcoYEZvdW5kIG5vLWRhdGEgZnJhbWUsIGZyYW1lLXR5cGU6ICR7aGVhZGVyLmZyYW1lVHlwZX0uIFNraXBwaW5nYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5tZXRhZGF0YS5zZXRGb3JtYXQoJ2R1cmF0aW9uJywgZnJhbWVzICogMC4wMik7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BbXJQYXJzZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/amr/AmrParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/amr/AmrToken.js":
/*!*********************************************************!*\
  !*** ./node_modules/music-metadata/lib/amr/AmrToken.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FrameHeader: () => (/* binding */ FrameHeader)\n/* harmony export */ });\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n\n/**\n * ID3v2 header\n * Ref: http://id3.org/id3v2.3.0#ID3v2_header\n * ToDo\n */\nconst FrameHeader = {\n    len: 1,\n    get: (buf, off) => {\n        return {\n            frameType: (0,_common_Util_js__WEBPACK_IMPORTED_MODULE_0__.getBitAllignedNumber)(buf, off, 1, 4)\n        };\n    }\n};\n//# sourceMappingURL=AmrToken.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2Ftci9BbXJUb2tlbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5RDtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIscUVBQW9CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9hbXIvQW1yVG9rZW4uanM/NGYzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRCaXRBbGxpZ25lZE51bWJlciB9IGZyb20gJy4uL2NvbW1vbi9VdGlsLmpzJztcbi8qKlxuICogSUQzdjIgaGVhZGVyXG4gKiBSZWY6IGh0dHA6Ly9pZDMub3JnL2lkM3YyLjMuMCNJRDN2Ml9oZWFkZXJcbiAqIFRvRG9cbiAqL1xuZXhwb3J0IGNvbnN0IEZyYW1lSGVhZGVyID0ge1xuICAgIGxlbjogMSxcbiAgICBnZXQ6IChidWYsIG9mZikgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZnJhbWVUeXBlOiBnZXRCaXRBbGxpZ25lZE51bWJlcihidWYsIG9mZiwgMSwgNClcbiAgICAgICAgfTtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QW1yVG9rZW4uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/amr/AmrToken.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/apev2/APEv2Parser.js":
/*!**************************************************************!*\
  !*** ./node_modules/music-metadata/lib/apev2/APEv2Parser.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APEv2Parser: () => (/* binding */ APEv2Parser),\n/* harmony export */   ApeContentError: () => (/* binding */ ApeContentError)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var strtok3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! strtok3 */ \"(rsc)/./node_modules/strtok3/lib/index.js\");\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var uint8array_extras__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uint8array-extras */ \"(rsc)/./node_modules/uint8array-extras/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/BasicParser.js */ \"(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js\");\n/* harmony import */ var _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./APEv2Token.js */ \"(rsc)/./node_modules/music-metadata/lib/apev2/APEv2Token.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('music-metadata:parser:APEv2');\nconst tagFormat = 'APEv2';\nconst preamble = 'APETAGEX';\nclass ApeContentError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_6__.makeUnexpectedFileContentError)('APEv2') {\n}\nclass APEv2Parser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_4__.BasicParser {\n    constructor() {\n        super(...arguments);\n        this.ape = {};\n    }\n    static tryParseApeHeader(metadata, tokenizer, options) {\n        const apeParser = new APEv2Parser(metadata, tokenizer, options);\n        return apeParser.tryParseApeHeader();\n    }\n    /**\n     * Calculate the media file duration\n     * @param ah ApeHeader\n     * @return {number} duration in seconds\n     */\n    static calculateDuration(ah) {\n        let duration = ah.totalFrames > 1 ? ah.blocksPerFrame * (ah.totalFrames - 1) : 0;\n        duration += ah.finalFrameBlocks;\n        return duration / ah.sampleRate;\n    }\n    /**\n     * Calculates the APEv1 / APEv2 first field offset\n     * @param tokenizer\n     * @param offset\n     */\n    static async findApeFooterOffset(tokenizer, offset) {\n        // Search for APE footer header at the end of the file\n        const apeBuf = new Uint8Array(_APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.TagFooter.len);\n        const position = tokenizer.position;\n        await tokenizer.readBuffer(apeBuf, { position: offset - _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.TagFooter.len });\n        tokenizer.setPosition(position);\n        const tagFooter = _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.TagFooter.get(apeBuf, 0);\n        if (tagFooter.ID === 'APETAGEX') {\n            if (tagFooter.flags.isHeader) {\n                debug(`APE Header found at offset=${offset - _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.TagFooter.len}`);\n            }\n            else {\n                debug(`APE Footer found at offset=${offset - _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.TagFooter.len}`);\n                offset -= tagFooter.size;\n            }\n            return { footer: tagFooter, offset };\n        }\n    }\n    static parseTagFooter(metadata, buffer, options) {\n        const footer = _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.TagFooter.get(buffer, buffer.length - _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.TagFooter.len);\n        if (footer.ID !== preamble)\n            throw new ApeContentError('Unexpected APEv2 Footer ID preamble value');\n        strtok3__WEBPACK_IMPORTED_MODULE_1__.fromBuffer(buffer);\n        const apeParser = new APEv2Parser(metadata, strtok3__WEBPACK_IMPORTED_MODULE_1__.fromBuffer(buffer), options);\n        return apeParser.parseTags(footer);\n    }\n    /**\n     * Parse APEv1 / APEv2 header if header signature found\n     */\n    async tryParseApeHeader() {\n        if (this.tokenizer.fileInfo.size && this.tokenizer.fileInfo.size - this.tokenizer.position < _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.TagFooter.len) {\n            debug(\"No APEv2 header found, end-of-file reached\");\n            return;\n        }\n        const footer = await this.tokenizer.peekToken(_APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.TagFooter);\n        if (footer.ID === preamble) {\n            await this.tokenizer.ignore(_APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.TagFooter.len);\n            return this.parseTags(footer);\n        }\n        debug(`APEv2 header not found at offset=${this.tokenizer.position}`);\n        if (this.tokenizer.fileInfo.size) {\n            // Try to read the APEv2 header using just the footer-header\n            const remaining = this.tokenizer.fileInfo.size - this.tokenizer.position; // ToDo: take ID3v1 into account\n            const buffer = new Uint8Array(remaining);\n            await this.tokenizer.readBuffer(buffer);\n            return APEv2Parser.parseTagFooter(this.metadata, buffer, this.options);\n        }\n    }\n    async parse() {\n        const descriptor = await this.tokenizer.readToken(_APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.DescriptorParser);\n        if (descriptor.ID !== 'MAC ')\n            throw new ApeContentError('Unexpected descriptor ID');\n        this.ape.descriptor = descriptor;\n        const lenExp = descriptor.descriptorBytes - _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.DescriptorParser.len;\n        const header = await (lenExp > 0 ? this.parseDescriptorExpansion(lenExp) : this.parseHeader());\n        await this.tokenizer.ignore(header.forwardBytes);\n        return this.tryParseApeHeader();\n    }\n    async parseTags(footer) {\n        const keyBuffer = new Uint8Array(256); // maximum tag key length\n        let bytesRemaining = footer.size - _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.TagFooter.len;\n        debug(`Parse APE tags at offset=${this.tokenizer.position}, size=${bytesRemaining}`);\n        for (let i = 0; i < footer.fields; i++) {\n            if (bytesRemaining < _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.TagItemHeader.len) {\n                this.metadata.addWarning(`APEv2 Tag-header: ${footer.fields - i} items remaining, but no more tag data to read.`);\n                break;\n            }\n            // Only APEv2 tag has tag item headers\n            const tagItemHeader = await this.tokenizer.readToken(_APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.TagItemHeader);\n            bytesRemaining -= _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.TagItemHeader.len + tagItemHeader.size;\n            await this.tokenizer.peekBuffer(keyBuffer, { length: Math.min(keyBuffer.length, bytesRemaining) });\n            let zero = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.findZero(keyBuffer, 0, keyBuffer.length);\n            const key = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_2__.StringType(zero, 'ascii'));\n            await this.tokenizer.ignore(1);\n            bytesRemaining -= key.length + 1;\n            switch (tagItemHeader.flags.dataType) {\n                case _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.DataType.text_utf8: { // utf-8 text-string\n                    const value = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_2__.StringType(tagItemHeader.size, 'utf8'));\n                    const values = value.split(/\\x00/g);\n                    await Promise.all(values.map(val => this.metadata.addTag(tagFormat, key, val)));\n                    break;\n                }\n                case _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.DataType.binary: // binary (probably artwork)\n                    if (this.options.skipCovers) {\n                        await this.tokenizer.ignore(tagItemHeader.size);\n                    }\n                    else {\n                        const picData = new Uint8Array(tagItemHeader.size);\n                        await this.tokenizer.readBuffer(picData);\n                        zero = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.findZero(picData, 0, picData.length);\n                        const description = (0,uint8array_extras__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToString)(picData.slice(0, zero));\n                        const data = picData.slice(zero + 1);\n                        await this.metadata.addTag(tagFormat, key, {\n                            description,\n                            data\n                        });\n                    }\n                    break;\n                case _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.DataType.external_info:\n                    debug(`Ignore external info ${key}`);\n                    await this.tokenizer.ignore(tagItemHeader.size);\n                    break;\n                case _APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.DataType.reserved:\n                    debug(`Ignore external info ${key}`);\n                    this.metadata.addWarning(`APEv2 header declares a reserved datatype for \"${key}\"`);\n                    await this.tokenizer.ignore(tagItemHeader.size);\n                    break;\n            }\n        }\n    }\n    async parseDescriptorExpansion(lenExp) {\n        await this.tokenizer.ignore(lenExp);\n        return this.parseHeader();\n    }\n    async parseHeader() {\n        const header = await this.tokenizer.readToken(_APEv2Token_js__WEBPACK_IMPORTED_MODULE_5__.Header);\n        // ToDo before\n        this.metadata.setFormat('lossless', true);\n        this.metadata.setFormat('container', 'Monkey\\'s Audio');\n        this.metadata.setFormat('bitsPerSample', header.bitsPerSample);\n        this.metadata.setFormat('sampleRate', header.sampleRate);\n        this.metadata.setFormat('numberOfChannels', header.channel);\n        this.metadata.setFormat('duration', APEv2Parser.calculateDuration(header));\n        if (!this.ape.descriptor) {\n            throw new ApeContentError('Missing APE descriptor');\n        }\n        return {\n            forwardBytes: this.ape.descriptor.seekTableBytes + this.ape.descriptor.headerDataBytes +\n                this.ape.descriptor.apeFrameDataBytes + this.ape.descriptor.terminatingDataBytes\n        };\n    }\n}\n//# sourceMappingURL=APEv2Parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/apev2/APEv2Parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/apev2/APEv2TagMapper.js":
/*!*****************************************************************!*\
  !*** ./node_modules/music-metadata/lib/apev2/APEv2TagMapper.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APEv2TagMapper: () => (/* binding */ APEv2TagMapper)\n/* harmony export */ });\n/* harmony import */ var _common_CaseInsensitiveTagMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/CaseInsensitiveTagMap.js */ \"(rsc)/./node_modules/music-metadata/lib/common/CaseInsensitiveTagMap.js\");\n\n/**\n * ID3v2.2 tag mappings\n */\nconst apev2TagMap = {\n    Title: 'title',\n    Artist: 'artist',\n    Artists: 'artists',\n    'Album Artist': 'albumartist',\n    Album: 'album',\n    Year: 'date',\n    Originalyear: 'originalyear',\n    Originaldate: 'originaldate',\n    Releasedate: 'releasedate',\n    Comment: 'comment',\n    Track: 'track',\n    Disc: 'disk',\n    DISCNUMBER: 'disk', // ToDo: backwards compatibility', valid tag?\n    Genre: 'genre',\n    'Cover Art (Front)': 'picture',\n    'Cover Art (Back)': 'picture',\n    Composer: 'composer',\n    Lyrics: 'lyrics',\n    ALBUMSORT: 'albumsort',\n    TITLESORT: 'titlesort',\n    WORK: 'work',\n    ARTISTSORT: 'artistsort',\n    ALBUMARTISTSORT: 'albumartistsort',\n    COMPOSERSORT: 'composersort',\n    Lyricist: 'lyricist',\n    Writer: 'writer',\n    Conductor: 'conductor',\n    // 'Performer=artist (instrument)': 'performer:instrument',\n    MixArtist: 'remixer',\n    Arranger: 'arranger',\n    Engineer: 'engineer',\n    Producer: 'producer',\n    DJMixer: 'djmixer',\n    Mixer: 'mixer',\n    Label: 'label',\n    Grouping: 'grouping',\n    Subtitle: 'subtitle',\n    DiscSubtitle: 'discsubtitle',\n    Compilation: 'compilation',\n    BPM: 'bpm',\n    Mood: 'mood',\n    Media: 'media',\n    CatalogNumber: 'catalognumber',\n    MUSICBRAINZ_ALBUMSTATUS: 'releasestatus',\n    MUSICBRAINZ_ALBUMTYPE: 'releasetype',\n    RELEASECOUNTRY: 'releasecountry',\n    Script: 'script',\n    Language: 'language',\n    Copyright: 'copyright',\n    LICENSE: 'license',\n    EncodedBy: 'encodedby',\n    EncoderSettings: 'encodersettings',\n    Barcode: 'barcode',\n    ISRC: 'isrc',\n    ASIN: 'asin',\n    musicbrainz_trackid: 'musicbrainz_recordingid',\n    musicbrainz_releasetrackid: 'musicbrainz_trackid',\n    MUSICBRAINZ_ALBUMID: 'musicbrainz_albumid',\n    MUSICBRAINZ_ARTISTID: 'musicbrainz_artistid',\n    MUSICBRAINZ_ALBUMARTISTID: 'musicbrainz_albumartistid',\n    MUSICBRAINZ_RELEASEGROUPID: 'musicbrainz_releasegroupid',\n    MUSICBRAINZ_WORKID: 'musicbrainz_workid',\n    MUSICBRAINZ_TRMID: 'musicbrainz_trmid',\n    MUSICBRAINZ_DISCID: 'musicbrainz_discid',\n    Acoustid_Id: 'acoustid_id',\n    ACOUSTID_FINGERPRINT: 'acoustid_fingerprint',\n    MUSICIP_PUID: 'musicip_puid',\n    Weblink: 'website',\n    REPLAYGAIN_TRACK_GAIN: 'replaygain_track_gain',\n    REPLAYGAIN_TRACK_PEAK: 'replaygain_track_peak',\n    MP3GAIN_MINMAX: 'replaygain_track_minmax',\n    MP3GAIN_UNDO: 'replaygain_undo'\n};\nclass APEv2TagMapper extends _common_CaseInsensitiveTagMap_js__WEBPACK_IMPORTED_MODULE_0__.CaseInsensitiveTagMap {\n    constructor() {\n        super(['APEv2'], apev2TagMap);\n    }\n}\n//# sourceMappingURL=APEv2TagMapper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2FwZXYyL0FQRXYyVGFnTWFwcGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJFO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw2QkFBNkIsbUZBQXFCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2FwZXYyL0FQRXYyVGFnTWFwcGVyLmpzPzJmNDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZUluc2Vuc2l0aXZlVGFnTWFwIH0gZnJvbSAnLi4vY29tbW9uL0Nhc2VJbnNlbnNpdGl2ZVRhZ01hcC5qcyc7XG4vKipcbiAqIElEM3YyLjIgdGFnIG1hcHBpbmdzXG4gKi9cbmNvbnN0IGFwZXYyVGFnTWFwID0ge1xuICAgIFRpdGxlOiAndGl0bGUnLFxuICAgIEFydGlzdDogJ2FydGlzdCcsXG4gICAgQXJ0aXN0czogJ2FydGlzdHMnLFxuICAgICdBbGJ1bSBBcnRpc3QnOiAnYWxidW1hcnRpc3QnLFxuICAgIEFsYnVtOiAnYWxidW0nLFxuICAgIFllYXI6ICdkYXRlJyxcbiAgICBPcmlnaW5hbHllYXI6ICdvcmlnaW5hbHllYXInLFxuICAgIE9yaWdpbmFsZGF0ZTogJ29yaWdpbmFsZGF0ZScsXG4gICAgUmVsZWFzZWRhdGU6ICdyZWxlYXNlZGF0ZScsXG4gICAgQ29tbWVudDogJ2NvbW1lbnQnLFxuICAgIFRyYWNrOiAndHJhY2snLFxuICAgIERpc2M6ICdkaXNrJyxcbiAgICBESVNDTlVNQkVSOiAnZGlzaycsIC8vIFRvRG86IGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5JywgdmFsaWQgdGFnP1xuICAgIEdlbnJlOiAnZ2VucmUnLFxuICAgICdDb3ZlciBBcnQgKEZyb250KSc6ICdwaWN0dXJlJyxcbiAgICAnQ292ZXIgQXJ0IChCYWNrKSc6ICdwaWN0dXJlJyxcbiAgICBDb21wb3NlcjogJ2NvbXBvc2VyJyxcbiAgICBMeXJpY3M6ICdseXJpY3MnLFxuICAgIEFMQlVNU09SVDogJ2FsYnVtc29ydCcsXG4gICAgVElUTEVTT1JUOiAndGl0bGVzb3J0JyxcbiAgICBXT1JLOiAnd29yaycsXG4gICAgQVJUSVNUU09SVDogJ2FydGlzdHNvcnQnLFxuICAgIEFMQlVNQVJUSVNUU09SVDogJ2FsYnVtYXJ0aXN0c29ydCcsXG4gICAgQ09NUE9TRVJTT1JUOiAnY29tcG9zZXJzb3J0JyxcbiAgICBMeXJpY2lzdDogJ2x5cmljaXN0JyxcbiAgICBXcml0ZXI6ICd3cml0ZXInLFxuICAgIENvbmR1Y3RvcjogJ2NvbmR1Y3RvcicsXG4gICAgLy8gJ1BlcmZvcm1lcj1hcnRpc3TCoChpbnN0cnVtZW50KSc6ICdwZXJmb3JtZXI6aW5zdHJ1bWVudCcsXG4gICAgTWl4QXJ0aXN0OiAncmVtaXhlcicsXG4gICAgQXJyYW5nZXI6ICdhcnJhbmdlcicsXG4gICAgRW5naW5lZXI6ICdlbmdpbmVlcicsXG4gICAgUHJvZHVjZXI6ICdwcm9kdWNlcicsXG4gICAgREpNaXhlcjogJ2RqbWl4ZXInLFxuICAgIE1peGVyOiAnbWl4ZXInLFxuICAgIExhYmVsOiAnbGFiZWwnLFxuICAgIEdyb3VwaW5nOiAnZ3JvdXBpbmcnLFxuICAgIFN1YnRpdGxlOiAnc3VidGl0bGUnLFxuICAgIERpc2NTdWJ0aXRsZTogJ2Rpc2NzdWJ0aXRsZScsXG4gICAgQ29tcGlsYXRpb246ICdjb21waWxhdGlvbicsXG4gICAgQlBNOiAnYnBtJyxcbiAgICBNb29kOiAnbW9vZCcsXG4gICAgTWVkaWE6ICdtZWRpYScsXG4gICAgQ2F0YWxvZ051bWJlcjogJ2NhdGFsb2dudW1iZXInLFxuICAgIE1VU0lDQlJBSU5aX0FMQlVNU1RBVFVTOiAncmVsZWFzZXN0YXR1cycsXG4gICAgTVVTSUNCUkFJTlpfQUxCVU1UWVBFOiAncmVsZWFzZXR5cGUnLFxuICAgIFJFTEVBU0VDT1VOVFJZOiAncmVsZWFzZWNvdW50cnknLFxuICAgIFNjcmlwdDogJ3NjcmlwdCcsXG4gICAgTGFuZ3VhZ2U6ICdsYW5ndWFnZScsXG4gICAgQ29weXJpZ2h0OiAnY29weXJpZ2h0JyxcbiAgICBMSUNFTlNFOiAnbGljZW5zZScsXG4gICAgRW5jb2RlZEJ5OiAnZW5jb2RlZGJ5JyxcbiAgICBFbmNvZGVyU2V0dGluZ3M6ICdlbmNvZGVyc2V0dGluZ3MnLFxuICAgIEJhcmNvZGU6ICdiYXJjb2RlJyxcbiAgICBJU1JDOiAnaXNyYycsXG4gICAgQVNJTjogJ2FzaW4nLFxuICAgIG11c2ljYnJhaW56X3RyYWNraWQ6ICdtdXNpY2JyYWluel9yZWNvcmRpbmdpZCcsXG4gICAgbXVzaWNicmFpbnpfcmVsZWFzZXRyYWNraWQ6ICdtdXNpY2JyYWluel90cmFja2lkJyxcbiAgICBNVVNJQ0JSQUlOWl9BTEJVTUlEOiAnbXVzaWNicmFpbnpfYWxidW1pZCcsXG4gICAgTVVTSUNCUkFJTlpfQVJUSVNUSUQ6ICdtdXNpY2JyYWluel9hcnRpc3RpZCcsXG4gICAgTVVTSUNCUkFJTlpfQUxCVU1BUlRJU1RJRDogJ211c2ljYnJhaW56X2FsYnVtYXJ0aXN0aWQnLFxuICAgIE1VU0lDQlJBSU5aX1JFTEVBU0VHUk9VUElEOiAnbXVzaWNicmFpbnpfcmVsZWFzZWdyb3VwaWQnLFxuICAgIE1VU0lDQlJBSU5aX1dPUktJRDogJ211c2ljYnJhaW56X3dvcmtpZCcsXG4gICAgTVVTSUNCUkFJTlpfVFJNSUQ6ICdtdXNpY2JyYWluel90cm1pZCcsXG4gICAgTVVTSUNCUkFJTlpfRElTQ0lEOiAnbXVzaWNicmFpbnpfZGlzY2lkJyxcbiAgICBBY291c3RpZF9JZDogJ2Fjb3VzdGlkX2lkJyxcbiAgICBBQ09VU1RJRF9GSU5HRVJQUklOVDogJ2Fjb3VzdGlkX2ZpbmdlcnByaW50JyxcbiAgICBNVVNJQ0lQX1BVSUQ6ICdtdXNpY2lwX3B1aWQnLFxuICAgIFdlYmxpbms6ICd3ZWJzaXRlJyxcbiAgICBSRVBMQVlHQUlOX1RSQUNLX0dBSU46ICdyZXBsYXlnYWluX3RyYWNrX2dhaW4nLFxuICAgIFJFUExBWUdBSU5fVFJBQ0tfUEVBSzogJ3JlcGxheWdhaW5fdHJhY2tfcGVhaycsXG4gICAgTVAzR0FJTl9NSU5NQVg6ICdyZXBsYXlnYWluX3RyYWNrX21pbm1heCcsXG4gICAgTVAzR0FJTl9VTkRPOiAncmVwbGF5Z2Fpbl91bmRvJ1xufTtcbmV4cG9ydCBjbGFzcyBBUEV2MlRhZ01hcHBlciBleHRlbmRzIENhc2VJbnNlbnNpdGl2ZVRhZ01hcCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKFsnQVBFdjInXSwgYXBldjJUYWdNYXApO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFQRXYyVGFnTWFwcGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/apev2/APEv2TagMapper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/apev2/APEv2Token.js":
/*!*************************************************************!*\
  !*** ./node_modules/music-metadata/lib/apev2/APEv2Token.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataType: () => (/* binding */ DataType),\n/* harmony export */   DescriptorParser: () => (/* binding */ DescriptorParser),\n/* harmony export */   Header: () => (/* binding */ Header),\n/* harmony export */   TagFooter: () => (/* binding */ TagFooter),\n/* harmony export */   TagItemHeader: () => (/* binding */ TagItemHeader),\n/* harmony export */   isBitSet: () => (/* binding */ isBitSet),\n/* harmony export */   parseTagFlags: () => (/* binding */ parseTagFlags)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/FourCC.js */ \"(rsc)/./node_modules/music-metadata/lib/common/FourCC.js\");\n\n\nvar DataType;\n(function (DataType) {\n    DataType[DataType[\"text_utf8\"] = 0] = \"text_utf8\";\n    DataType[DataType[\"binary\"] = 1] = \"binary\";\n    DataType[DataType[\"external_info\"] = 2] = \"external_info\";\n    DataType[DataType[\"reserved\"] = 3] = \"reserved\";\n})(DataType || (DataType = {}));\n/**\n * APE_DESCRIPTOR: defines the sizes (and offsets) of all the pieces, as well as the MD5 checksum\n */\nconst DescriptorParser = {\n    len: 52,\n    get: (buf, off) => {\n        return {\n            // should equal 'MAC '\n            ID: _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__.FourCcToken.get(buf, off),\n            // versionIndex number * 1000 (3.81 = 3810) (remember that 4-byte alignment causes this to take 4-bytes)\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 4) / 1000,\n            // the number of descriptor bytes (allows later expansion of this header)\n            descriptorBytes: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 8),\n            // the number of header APE_HEADER bytes\n            headerBytes: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 12),\n            // the number of header APE_HEADER bytes\n            seekTableBytes: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 16),\n            // the number of header data bytes (from original file)\n            headerDataBytes: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 20),\n            // the number of bytes of APE frame data\n            apeFrameDataBytes: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 24),\n            // the high order number of APE frame data bytes\n            apeFrameDataBytesHigh: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 28),\n            // the terminating data of the file (not including tag data)\n            terminatingDataBytes: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 32),\n            // the MD5 hash of the file (see notes for usage... it's a little tricky)\n            fileMD5: new token_types__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayType(16).get(buf, off + 36)\n        };\n    }\n};\n/**\n * APE_HEADER: describes all of the necessary information about the APE file\n */\nconst Header = {\n    len: 24,\n    get: (buf, off) => {\n        return {\n            // the compression level (see defines I.E. COMPRESSION_LEVEL_FAST)\n            compressionLevel: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off),\n            // any format flags (for future use)\n            formatFlags: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off + 2),\n            // the number of audio blocks in one frame\n            blocksPerFrame: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 4),\n            // the number of audio blocks in the final frame\n            finalFrameBlocks: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 8),\n            // the total number of frames\n            totalFrames: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 12),\n            // the bits per sample (typically 16)\n            bitsPerSample: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off + 16),\n            // the number of channels (1 or 2)\n            channel: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off + 18),\n            // the sample rate (typically 44100)\n            sampleRate: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 20)\n        };\n    }\n};\n/**\n * APE Tag Header/Footer Version 2.0\n * TAG: describes all the properties of the file [optional]\n */\nconst TagFooter = {\n    len: 32,\n    get: (buf, off) => {\n        return {\n            // should equal 'APETAGEX'\n            ID: new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(8, 'ascii').get(buf, off),\n            // equals CURRENT_APE_TAG_VERSION\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 8),\n            // the complete size of the tag, including this footer (excludes header)\n            size: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 12),\n            // the number of fields in the tag\n            fields: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 16),\n            // reserved for later use (must be zero),\n            flags: parseTagFlags(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 20))\n        };\n    }\n};\n/**\n * APE Tag v2.0 Item Header\n */\nconst TagItemHeader = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            // Length of assigned value in bytes\n            size: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off),\n            // reserved for later use (must be zero),\n            flags: parseTagFlags(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 4))\n        };\n    }\n};\nfunction parseTagFlags(flags) {\n    return {\n        containsHeader: isBitSet(flags, 31),\n        containsFooter: isBitSet(flags, 30),\n        isHeader: isBitSet(flags, 29),\n        readOnly: isBitSet(flags, 0),\n        dataType: (flags & 6) >> 1\n    };\n}\n/**\n * @param num {number}\n * @param bit 0 is least significant bit (LSB)\n * @return {boolean} true if bit is 1; otherwise false\n */\nfunction isBitSet(num, bit) {\n    return (num & 1 << bit) !== 0;\n}\n//# sourceMappingURL=APEv2Token.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/apev2/APEv2Token.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/apev2/Apev2Loader.js":
/*!**************************************************************!*\
  !*** ./node_modules/music-metadata/lib/apev2/Apev2Loader.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apeParserLoader: () => (/* binding */ apeParserLoader)\n/* harmony export */ });\nconst apeParserLoader = {\n    parserType: 'apev2',\n    extensions: ['.ape'],\n    async load(metadata, tokenizer, options) {\n        return new (await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./APEv2Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/apev2/APEv2Parser.js\"))).APEv2Parser(metadata, tokenizer, options);\n    }\n};\n//# sourceMappingURL=Apev2Loader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2FwZXYyL0FwZXYyTG9hZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw0S0FBMEI7QUFDcEQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9hcGV2Mi9BcGV2MkxvYWRlci5qcz8zYzc2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBhcGVQYXJzZXJMb2FkZXIgPSB7XG4gICAgcGFyc2VyVHlwZTogJ2FwZXYyJyxcbiAgICBleHRlbnNpb25zOiBbJy5hcGUnXSxcbiAgICBhc3luYyBsb2FkKG1ldGFkYXRhLCB0b2tlbml6ZXIsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyAoYXdhaXQgaW1wb3J0KCcuL0FQRXYyUGFyc2VyLmpzJykpLkFQRXYyUGFyc2VyKG1ldGFkYXRhLCB0b2tlbml6ZXIsIG9wdGlvbnMpO1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BcGV2MkxvYWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/apev2/Apev2Loader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/asf/AsfLoader.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/asf/AsfLoader.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asfParserLoader: () => (/* binding */ asfParserLoader)\n/* harmony export */ });\nconst asfParserLoader = {\n    parserType: 'asf',\n    extensions: ['.asf'],\n    async load(metadata, tokenizer, options) {\n        return new (await __webpack_require__.e(/*! import() */ \"vendor-chunks/music-metadata\").then(__webpack_require__.bind(__webpack_require__, /*! ./AsfParser.js */ \"(rsc)/./node_modules/music-metadata/lib/asf/AsfParser.js\"))).AsfParser(metadata, tokenizer, options);\n    }\n};\n//# sourceMappingURL=AsfLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2FzZi9Bc2ZMb2FkZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJNQUF3QjtBQUNsRDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2FzZi9Bc2ZMb2FkZXIuanM/NmI4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgYXNmUGFyc2VyTG9hZGVyID0ge1xuICAgIHBhcnNlclR5cGU6ICdhc2YnLFxuICAgIGV4dGVuc2lvbnM6IFsnLmFzZiddLFxuICAgIGFzeW5jIGxvYWQobWV0YWRhdGEsIHRva2VuaXplciwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IChhd2FpdCBpbXBvcnQoJy4vQXNmUGFyc2VyLmpzJykpLkFzZlBhcnNlcihtZXRhZGF0YSwgdG9rZW5pemVyLCBvcHRpb25zKTtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXNmTG9hZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/asf/AsfLoader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/asf/AsfObject.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/asf/AsfObject.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsfContentParseError: () => (/* binding */ AsfContentParseError),\n/* harmony export */   ContentDescriptionObjectState: () => (/* binding */ ContentDescriptionObjectState),\n/* harmony export */   DataType: () => (/* binding */ DataType),\n/* harmony export */   ExtendedContentDescriptionObjectState: () => (/* binding */ ExtendedContentDescriptionObjectState),\n/* harmony export */   ExtendedStreamPropertiesObjectState: () => (/* binding */ ExtendedStreamPropertiesObjectState),\n/* harmony export */   FilePropertiesObject: () => (/* binding */ FilePropertiesObject),\n/* harmony export */   HeaderExtensionObject: () => (/* binding */ HeaderExtensionObject),\n/* harmony export */   HeaderObjectToken: () => (/* binding */ HeaderObjectToken),\n/* harmony export */   IgnoreObjectState: () => (/* binding */ IgnoreObjectState),\n/* harmony export */   MetadataLibraryObjectState: () => (/* binding */ MetadataLibraryObjectState),\n/* harmony export */   MetadataObjectState: () => (/* binding */ MetadataObjectState),\n/* harmony export */   State: () => (/* binding */ State),\n/* harmony export */   StreamPropertiesObject: () => (/* binding */ StreamPropertiesObject),\n/* harmony export */   TopLevelHeaderObjectToken: () => (/* binding */ TopLevelHeaderObjectToken),\n/* harmony export */   WmPictureToken: () => (/* binding */ WmPictureToken),\n/* harmony export */   readCodecEntries: () => (/* binding */ readCodecEntries)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n/* harmony import */ var _GUID_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GUID.js */ \"(rsc)/./node_modules/music-metadata/lib/asf/GUID.js\");\n/* harmony import */ var _AsfUtil_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AsfUtil.js */ \"(rsc)/./node_modules/music-metadata/lib/asf/AsfUtil.js\");\n/* harmony import */ var _id3v2_ID3v2Token_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../id3v2/ID3v2Token.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v2Token.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n// ASF Objects\n\n\n\n\n\n\nclass AsfContentParseError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_5__.makeUnexpectedFileContentError)('ASF') {\n}\n/**\n * Data Type: Specifies the type of information being stored. The following values are recognized.\n */\nvar DataType;\n(function (DataType) {\n    /**\n     * Unicode string. The data consists of a sequence of Unicode characters.\n     */\n    DataType[DataType[\"UnicodeString\"] = 0] = \"UnicodeString\";\n    /**\n     * BYTE array. The type of data is implementation-specific.\n     */\n    DataType[DataType[\"ByteArray\"] = 1] = \"ByteArray\";\n    /**\n     * BOOL. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer. Only 0x0000 or 0x0001 are permitted values.\n     */\n    DataType[DataType[\"Bool\"] = 2] = \"Bool\";\n    /**\n     * DWORD. The data is 4 bytes long and should be interpreted as a 32-bit unsigned integer.\n     */\n    DataType[DataType[\"DWord\"] = 3] = \"DWord\";\n    /**\n     * QWORD. The data is 8 bytes long and should be interpreted as a 64-bit unsigned integer.\n     */\n    DataType[DataType[\"QWord\"] = 4] = \"QWord\";\n    /**\n     * WORD. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer.\n     */\n    DataType[DataType[\"Word\"] = 5] = \"Word\";\n})(DataType || (DataType = {}));\n/**\n * Token for: 3. ASF top-level Header Object\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3\n */\nconst TopLevelHeaderObjectToken = {\n    len: 30,\n    get: (buf, off) => {\n        return {\n            objectId: _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fromBin(buf, off),\n            objectSize: Number(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_LE.get(buf, off + 16)),\n            numberOfHeaderObjects: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 24)\n            // Reserved: 2 bytes\n        };\n    }\n};\n/**\n * Token for: 3.1 Header Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_1\n */\nconst HeaderObjectToken = {\n    len: 24,\n    get: (buf, off) => {\n        return {\n            objectId: _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fromBin(buf, off),\n            objectSize: Number(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_LE.get(buf, off + 16))\n        };\n    }\n};\nclass State {\n    constructor(header) {\n        this.len = Number(header.objectSize) - HeaderObjectToken.len;\n    }\n    postProcessTag(tags, name, valueType, data) {\n        if (name === 'WM/Picture') {\n            tags.push({ id: name, value: WmPictureToken.fromBuffer(data) });\n        }\n        else {\n            const parseAttr = (0,_AsfUtil_js__WEBPACK_IMPORTED_MODULE_3__.getParserForAttr)(valueType);\n            if (!parseAttr) {\n                throw new AsfContentParseError(`unexpected value headerType: ${valueType}`);\n            }\n            tags.push({ id: name, value: parseAttr(data) });\n        }\n    }\n}\n// ToDo: use ignore type\nclass IgnoreObjectState extends State {\n    get(buf, off) {\n        return null;\n    }\n}\n/**\n * Token for: 3.2: File Properties Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_2\n */\nclass FilePropertiesObject extends State {\n    get(buf, off) {\n        return {\n            fileId: _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fromBin(buf, off),\n            fileSize: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_LE.get(buf, off + 16),\n            creationDate: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_LE.get(buf, off + 24),\n            dataPacketsCount: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_LE.get(buf, off + 32),\n            playDuration: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_LE.get(buf, off + 40),\n            sendDuration: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_LE.get(buf, off + 48),\n            preroll: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_LE.get(buf, off + 56),\n            flags: {\n                broadcast: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(buf, off + 64, 24),\n                seekable: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(buf, off + 64, 25)\n            },\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n            minimumDataPacketSize: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 68),\n            maximumDataPacketSize: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 72),\n            maximumBitrate: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 76)\n        };\n    }\n}\nFilePropertiesObject.guid = _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].FilePropertiesObject;\n/**\n * Token for: 3.3 Stream Properties Object (mandatory, one per stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_3\n */\nclass StreamPropertiesObject extends State {\n    get(buf, off) {\n        return {\n            streamType: _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].decodeMediaType(_GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fromBin(buf, off)),\n            errorCorrectionType: _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fromBin(buf, off + 8)\n            // ToDo\n        };\n    }\n}\nStreamPropertiesObject.guid = _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].StreamPropertiesObject;\n/**\n * 3.4: Header Extension Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_4\n */\nclass HeaderExtensionObject {\n    constructor() {\n        this.len = 22;\n    }\n    get(buf, off) {\n        const view = new DataView(buf.buffer, off);\n        return {\n            reserved1: _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fromBin(buf, off),\n            reserved2: view.getUint16(16, true),\n            extensionDataSize: view.getUint16(18, true)\n        };\n    }\n}\nHeaderExtensionObject.guid = _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].HeaderExtensionObject;\n/**\n * 3.5: The Codec List Object provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nconst CodecListObjectHeader = {\n    len: 20,\n    get: (buf, off) => {\n        const view = new DataView(buf.buffer, off);\n        return {\n            entryCount: view.getUint16(16, true)\n        };\n    }\n};\nasync function readString(tokenizer) {\n    const length = await tokenizer.readNumber(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE);\n    return (await tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(length * 2, 'utf-16le'))).replace('\\0', '');\n}\n/**\n * 3.5: Read the Codec-List-Object, which provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nasync function readCodecEntries(tokenizer) {\n    const codecHeader = await tokenizer.readToken(CodecListObjectHeader);\n    const entries = [];\n    for (let i = 0; i < codecHeader.entryCount; ++i) {\n        entries.push(await readCodecEntry(tokenizer));\n    }\n    return entries;\n}\nasync function readInformation(tokenizer) {\n    const length = await tokenizer.readNumber(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE);\n    const buf = new Uint8Array(length);\n    await tokenizer.readBuffer(buf);\n    return buf;\n}\n/**\n * Read Codec-Entries\n * @param tokenizer\n */\nasync function readCodecEntry(tokenizer) {\n    const type = await tokenizer.readNumber(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE);\n    return {\n        type: {\n            videoCodec: (type & 0x0001) === 0x0001,\n            audioCodec: (type & 0x0002) === 0x0002\n        },\n        codecName: await readString(tokenizer),\n        description: await readString(tokenizer),\n        information: await readInformation(tokenizer)\n    };\n}\n/**\n * 3.10 Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_10\n */\nclass ContentDescriptionObjectState extends State {\n    get(buf, off) {\n        const tags = [];\n        const view = new DataView(buf.buffer, off);\n        let pos = 10;\n        for (let i = 0; i < ContentDescriptionObjectState.contentDescTags.length; ++i) {\n            const length = view.getUint16(i * 2, true);\n            if (length > 0) {\n                const tagName = ContentDescriptionObjectState.contentDescTags[i];\n                const end = pos + length;\n                tags.push({ id: tagName, value: (0,_AsfUtil_js__WEBPACK_IMPORTED_MODULE_3__.parseUnicodeAttr)(buf.slice(off + pos, off + end)) });\n                pos = end;\n            }\n        }\n        return tags;\n    }\n}\nContentDescriptionObjectState.guid = _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ContentDescriptionObject;\nContentDescriptionObjectState.contentDescTags = ['Title', 'Author', 'Copyright', 'Description', 'Rating'];\n/**\n * 3.11 Extended Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_11\n */\nclass ExtendedContentDescriptionObjectState extends State {\n    get(buf, off) {\n        const tags = [];\n        const view = new DataView(buf.buffer, off);\n        const attrCount = view.getUint16(0, true);\n        let pos = 2;\n        for (let i = 0; i < attrCount; i += 1) {\n            const nameLen = view.getUint16(pos, true);\n            pos += 2;\n            const name = (0,_AsfUtil_js__WEBPACK_IMPORTED_MODULE_3__.parseUnicodeAttr)(buf.slice(off + pos, off + pos + nameLen));\n            pos += nameLen;\n            const valueType = view.getUint16(pos, true);\n            pos += 2;\n            const valueLen = view.getUint16(pos, true);\n            pos += 2;\n            const value = buf.slice(off + pos, off + pos + valueLen);\n            pos += valueLen;\n            this.postProcessTag(tags, name, valueType, value);\n        }\n        return tags;\n    }\n}\nExtendedContentDescriptionObjectState.guid = _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ExtendedContentDescriptionObject;\n/**\n * 4.1 Extended Stream Properties Object (optional, 1 per media stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_1\n */\nclass ExtendedStreamPropertiesObjectState extends State {\n    get(buf, off) {\n        const view = new DataView(buf.buffer, off);\n        return {\n            startTime: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_LE.get(buf, off),\n            endTime: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_LE.get(buf, off + 8),\n            dataBitrate: view.getInt32(12, true),\n            bufferSize: view.getInt32(16, true),\n            initialBufferFullness: view.getInt32(20, true),\n            alternateDataBitrate: view.getInt32(24, true),\n            alternateBufferSize: view.getInt32(28, true),\n            alternateInitialBufferFullness: view.getInt32(32, true),\n            maximumObjectSize: view.getInt32(36, true),\n            flags: {\n                reliableFlag: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(buf, off + 40, 0),\n                seekableFlag: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(buf, off + 40, 1),\n                resendLiveCleanpointsFlag: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(buf, off + 40, 2)\n            },\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n            streamNumber: view.getInt16(42, true),\n            streamLanguageId: view.getInt16(44, true),\n            averageTimePerFrame: view.getInt32(52, true),\n            streamNameCount: view.getInt32(54, true),\n            payloadExtensionSystems: view.getInt32(56, true),\n            streamNames: [], // ToDo\n            streamPropertiesObject: null\n        };\n    }\n}\nExtendedStreamPropertiesObjectState.guid = _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ExtendedStreamPropertiesObject;\n/**\n * 4.7  Metadata Object (optional, 0 or 1)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_7\n */\nclass MetadataObjectState extends State {\n    get(uint8Array, off) {\n        const tags = [];\n        const view = new DataView(uint8Array.buffer, off);\n        const descriptionRecordsCount = view.getUint16(0, true);\n        let pos = 2;\n        for (let i = 0; i < descriptionRecordsCount; i += 1) {\n            pos += 4;\n            const nameLen = view.getUint16(pos, true);\n            pos += 2;\n            const dataType = view.getUint16(pos, true);\n            pos += 2;\n            const dataLen = view.getUint32(pos, true);\n            pos += 4;\n            const name = (0,_AsfUtil_js__WEBPACK_IMPORTED_MODULE_3__.parseUnicodeAttr)(uint8Array.slice(off + pos, off + pos + nameLen));\n            pos += nameLen;\n            const data = uint8Array.slice(off + pos, off + pos + dataLen);\n            pos += dataLen;\n            this.postProcessTag(tags, name, dataType, data);\n        }\n        return tags;\n    }\n}\nMetadataObjectState.guid = _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].MetadataObject;\n// 4.8\tMetadata Library Object (optional, 0 or 1)\nclass MetadataLibraryObjectState extends MetadataObjectState {\n}\nMetadataLibraryObjectState.guid = _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].MetadataLibraryObject;\n/**\n * Ref: https://msdn.microsoft.com/en-us/library/windows/desktop/dd757977(v=vs.85).aspx\n */\nclass WmPictureToken {\n    static fromBuffer(buffer) {\n        const pic = new WmPictureToken(buffer.length);\n        return pic.get(buffer, 0);\n    }\n    constructor(len) {\n        this.len = len;\n    }\n    get(buffer, offset) {\n        const view = new DataView(buffer.buffer, offset);\n        const typeId = view.getUint8(0);\n        const size = view.getInt32(1, true);\n        let index = 5;\n        while (view.getUint16(index) !== 0) {\n            index += 2;\n        }\n        const format = new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(index - 5, 'utf-16le').get(buffer, 5);\n        while (view.getUint16(index) !== 0) {\n            index += 2;\n        }\n        const description = new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(index - 5, 'utf-16le').get(buffer, 5);\n        return {\n            type: _id3v2_ID3v2Token_js__WEBPACK_IMPORTED_MODULE_4__.AttachedPictureType[typeId],\n            format,\n            description,\n            size,\n            data: buffer.slice(index + 4)\n        };\n    }\n}\n//# sourceMappingURL=AsfObject.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/asf/AsfObject.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/asf/AsfParser.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/asf/AsfParser.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsfParser: () => (/* binding */ AsfParser)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type.js */ \"(rsc)/./node_modules/music-metadata/lib/type.js\");\n/* harmony import */ var _GUID_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GUID.js */ \"(rsc)/./node_modules/music-metadata/lib/asf/GUID.js\");\n/* harmony import */ var _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AsfObject.js */ \"(rsc)/./node_modules/music-metadata/lib/asf/AsfObject.js\");\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/BasicParser.js */ \"(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js\");\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('music-metadata:parser:ASF');\nconst headerType = 'asf';\n/**\n * Windows Media Metadata Usage Guidelines\n * - Ref: https://msdn.microsoft.com/en-us/library/ms867702.aspx\n *\n * Ref:\n * - https://tools.ietf.org/html/draft-fleischman-asf-01\n * - https://hwiegman.home.xs4all.nl/fileformats/asf/ASF_Specification.pdf\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/index.html\n * - https://msdn.microsoft.com/en-us/library/windows/desktop/ee663575(v=vs.85).aspx\n */\nclass AsfParser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_4__.BasicParser {\n    async parse() {\n        const header = await this.tokenizer.readToken(_AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.TopLevelHeaderObjectToken);\n        if (!header.objectId.equals(_GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].HeaderObject)) {\n            throw new _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.AsfContentParseError(`expected asf header; but was not found; got: ${header.objectId.str}`);\n        }\n        try {\n            await this.parseObjectHeader(header.numberOfHeaderObjects);\n        }\n        catch (err) {\n            debug('Error while parsing ASF: %s', err);\n        }\n    }\n    async parseObjectHeader(numberOfObjectHeaders) {\n        let tags;\n        do {\n            // Parse common header of the ASF Object (3.1)\n            const header = await this.tokenizer.readToken(_AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.HeaderObjectToken);\n            // Parse data part of the ASF Object\n            debug('header GUID=%s', header.objectId.str);\n            switch (header.objectId.str) {\n                case _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.FilePropertiesObject.guid.str: { // 3.2\n                    const fpo = await this.tokenizer.readToken(new _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.FilePropertiesObject(header));\n                    this.metadata.setFormat('duration', Number(fpo.playDuration / BigInt(1000)) / 10000 - Number(fpo.preroll) / 1000);\n                    this.metadata.setFormat('bitrate', fpo.maximumBitrate);\n                    break;\n                }\n                case _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.StreamPropertiesObject.guid.str: { // 3.3\n                    const spo = await this.tokenizer.readToken(new _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.StreamPropertiesObject(header));\n                    this.metadata.setFormat('container', `ASF/${spo.streamType}`);\n                    break;\n                }\n                case _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.HeaderExtensionObject.guid.str: { // 3.4\n                    const extHeader = await this.tokenizer.readToken(new _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.HeaderExtensionObject());\n                    await this.parseExtensionObject(extHeader.extensionDataSize);\n                    break;\n                }\n                case _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.ContentDescriptionObjectState.guid.str: // 3.10\n                    tags = await this.tokenizer.readToken(new _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.ContentDescriptionObjectState(header));\n                    await this.addTags(tags);\n                    break;\n                case _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.ExtendedContentDescriptionObjectState.guid.str: // 3.11\n                    tags = await this.tokenizer.readToken(new _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.ExtendedContentDescriptionObjectState(header));\n                    await this.addTags(tags);\n                    break;\n                case _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].CodecListObject.str: {\n                    const codecs = await _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.readCodecEntries(this.tokenizer);\n                    codecs.forEach(codec => {\n                        this.metadata.addStreamInfo({\n                            type: codec.type.videoCodec ? _type_js__WEBPACK_IMPORTED_MODULE_1__.TrackType.video : _type_js__WEBPACK_IMPORTED_MODULE_1__.TrackType.audio,\n                            codecName: codec.codecName\n                        });\n                    });\n                    const audioCodecs = codecs.filter(codec => codec.type.audioCodec).map(codec => codec.codecName).join('/');\n                    this.metadata.setFormat('codec', audioCodecs);\n                    break;\n                }\n                case _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].StreamBitratePropertiesObject.str:\n                    // ToDo?\n                    await this.tokenizer.ignore(header.objectSize - _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.HeaderObjectToken.len);\n                    break;\n                case _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].PaddingObject.str:\n                    // ToDo: register bytes pad\n                    debug('Padding: %s bytes', header.objectSize - _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.HeaderObjectToken.len);\n                    await this.tokenizer.ignore(header.objectSize - _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.HeaderObjectToken.len);\n                    break;\n                default:\n                    this.metadata.addWarning(`Ignore ASF-Object-GUID: ${header.objectId.str}`);\n                    debug('Ignore ASF-Object-GUID: %s', header.objectId.str);\n                    await this.tokenizer.readToken(new _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.IgnoreObjectState(header));\n            }\n        } while (--numberOfObjectHeaders);\n        // done\n    }\n    async addTags(tags) {\n        await Promise.all(tags.map(({ id, value }) => this.metadata.addTag(headerType, id, value)));\n    }\n    async parseExtensionObject(extensionSize) {\n        do {\n            // Parse common header of the ASF Object (3.1)\n            const header = await this.tokenizer.readToken(_AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.HeaderObjectToken);\n            const remaining = header.objectSize - _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.HeaderObjectToken.len;\n            // Parse data part of the ASF Object\n            switch (header.objectId.str) {\n                case _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.ExtendedStreamPropertiesObjectState.guid.str: // 4.1\n                    // ToDo: extended stream header properties are ignored\n                    await this.tokenizer.readToken(new _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.ExtendedStreamPropertiesObjectState(header));\n                    break;\n                case _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.MetadataObjectState.guid.str: { // 4.7\n                    const moTags = await this.tokenizer.readToken(new _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.MetadataObjectState(header));\n                    await this.addTags(moTags);\n                    break;\n                }\n                case _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.MetadataLibraryObjectState.guid.str: { // 4.8\n                    const mlTags = await this.tokenizer.readToken(new _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.MetadataLibraryObjectState(header));\n                    await this.addTags(mlTags);\n                    break;\n                }\n                case _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].PaddingObject.str:\n                    // ToDo: register bytes pad\n                    await this.tokenizer.ignore(remaining);\n                    break;\n                case _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].CompatibilityObject.str:\n                    this.tokenizer.ignore(remaining);\n                    break;\n                case _GUID_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ASF_Index_Placeholder_Object.str:\n                    await this.tokenizer.ignore(remaining);\n                    break;\n                default:\n                    this.metadata.addWarning(`Ignore ASF-Object-GUID: ${header.objectId.str}`);\n                    // console.log(\"Ignore ASF-Object-GUID: %s\", header.objectId.str);\n                    await this.tokenizer.readToken(new _AsfObject_js__WEBPACK_IMPORTED_MODULE_3__.IgnoreObjectState(header));\n                    break;\n            }\n            extensionSize -= header.objectSize;\n        } while (extensionSize > 0);\n    }\n}\n//# sourceMappingURL=AsfParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/asf/AsfParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/asf/AsfTagMapper.js":
/*!*************************************************************!*\
  !*** ./node_modules/music-metadata/lib/asf/AsfTagMapper.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsfTagMapper: () => (/* binding */ AsfTagMapper)\n/* harmony export */ });\n/* harmony import */ var _common_GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/GenericTagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/common/GenericTagMapper.js\");\n\n/**\n * ASF Metadata tag mappings.\n * See http://msdn.microsoft.com/en-us/library/ms867702.aspx\n */\nconst asfTagMap = {\n    Title: 'title',\n    Author: 'artist',\n    'WM/AlbumArtist': 'albumartist',\n    'WM/AlbumTitle': 'album',\n    'WM/Year': 'date', // changed to 'year' to 'date' based on Picard mappings; ToDo: check me\n    'WM/OriginalReleaseTime': 'originaldate',\n    'WM/OriginalReleaseYear': 'originalyear',\n    Description: 'comment',\n    'WM/TrackNumber': 'track',\n    'WM/PartOfSet': 'disk',\n    'WM/Genre': 'genre',\n    'WM/Composer': 'composer',\n    'WM/Lyrics': 'lyrics',\n    'WM/AlbumSortOrder': 'albumsort',\n    'WM/TitleSortOrder': 'titlesort',\n    'WM/ArtistSortOrder': 'artistsort',\n    'WM/AlbumArtistSortOrder': 'albumartistsort',\n    'WM/ComposerSortOrder': 'composersort',\n    'WM/Writer': 'lyricist',\n    'WM/Conductor': 'conductor',\n    'WM/ModifiedBy': 'remixer',\n    'WM/Engineer': 'engineer',\n    'WM/Producer': 'producer',\n    'WM/DJMixer': 'djmixer',\n    'WM/Mixer': 'mixer',\n    'WM/Publisher': 'label',\n    'WM/ContentGroupDescription': 'grouping',\n    'WM/SubTitle': 'subtitle',\n    'WM/SetSubTitle': 'discsubtitle',\n    // 'WM/PartOfSet': 'totaldiscs',\n    'WM/IsCompilation': 'compilation',\n    'WM/SharedUserRating': 'rating',\n    'WM/BeatsPerMinute': 'bpm',\n    'WM/Mood': 'mood',\n    'WM/Media': 'media',\n    'WM/CatalogNo': 'catalognumber',\n    'MusicBrainz/Album Status': 'releasestatus',\n    'MusicBrainz/Album Type': 'releasetype',\n    'MusicBrainz/Album Release Country': 'releasecountry',\n    'WM/Script': 'script',\n    'WM/Language': 'language',\n    Copyright: 'copyright',\n    LICENSE: 'license',\n    'WM/EncodedBy': 'encodedby',\n    'WM/EncodingSettings': 'encodersettings',\n    'WM/Barcode': 'barcode',\n    'WM/ISRC': 'isrc',\n    'MusicBrainz/Track Id': 'musicbrainz_recordingid',\n    'MusicBrainz/Release Track Id': 'musicbrainz_trackid',\n    'MusicBrainz/Album Id': 'musicbrainz_albumid',\n    'MusicBrainz/Artist Id': 'musicbrainz_artistid',\n    'MusicBrainz/Album Artist Id': 'musicbrainz_albumartistid',\n    'MusicBrainz/Release Group Id': 'musicbrainz_releasegroupid',\n    'MusicBrainz/Work Id': 'musicbrainz_workid',\n    'MusicBrainz/TRM Id': 'musicbrainz_trmid',\n    'MusicBrainz/Disc Id': 'musicbrainz_discid',\n    'Acoustid/Id': 'acoustid_id',\n    'Acoustid/Fingerprint': 'acoustid_fingerprint',\n    'MusicIP/PUID': 'musicip_puid',\n    'WM/ARTISTS': 'artists',\n    'WM/InitialKey': 'key',\n    ASIN: 'asin',\n    'WM/Work': 'work',\n    'WM/AuthorURL': 'website',\n    'WM/Picture': 'picture'\n};\nclass AsfTagMapper extends _common_GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_0__.CommonTagMapper {\n    static toRating(rating) {\n        return {\n            rating: Number.parseFloat(rating + 1) / 5\n        };\n    }\n    constructor() {\n        super(['asf'], asfTagMap);\n    }\n    postMap(tag) {\n        switch (tag.id) {\n            case 'WM/SharedUserRating': {\n                const keys = tag.id.split(':');\n                tag.value = AsfTagMapper.toRating(tag.value);\n                tag.id = keys[0];\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=AsfTagMapper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2FzZi9Bc2ZUYWdNYXBwZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0U7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0ZBQWdGO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMkJBQTJCLHdFQUFlO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2FzZi9Bc2ZUYWdNYXBwZXIuanM/YWNhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25UYWdNYXBwZXIgfSBmcm9tICcuLi9jb21tb24vR2VuZXJpY1RhZ01hcHBlci5qcyc7XG4vKipcbiAqIEFTRiBNZXRhZGF0YSB0YWcgbWFwcGluZ3MuXG4gKiBTZWUgaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L21zODY3NzAyLmFzcHhcbiAqL1xuY29uc3QgYXNmVGFnTWFwID0ge1xuICAgIFRpdGxlOiAndGl0bGUnLFxuICAgIEF1dGhvcjogJ2FydGlzdCcsXG4gICAgJ1dNL0FsYnVtQXJ0aXN0JzogJ2FsYnVtYXJ0aXN0JyxcbiAgICAnV00vQWxidW1UaXRsZSc6ICdhbGJ1bScsXG4gICAgJ1dNL1llYXInOiAnZGF0ZScsIC8vIGNoYW5nZWQgdG8gJ3llYXInIHRvICdkYXRlJyBiYXNlZCBvbiBQaWNhcmQgbWFwcGluZ3M7IFRvRG86IGNoZWNrIG1lXG4gICAgJ1dNL09yaWdpbmFsUmVsZWFzZVRpbWUnOiAnb3JpZ2luYWxkYXRlJyxcbiAgICAnV00vT3JpZ2luYWxSZWxlYXNlWWVhcic6ICdvcmlnaW5hbHllYXInLFxuICAgIERlc2NyaXB0aW9uOiAnY29tbWVudCcsXG4gICAgJ1dNL1RyYWNrTnVtYmVyJzogJ3RyYWNrJyxcbiAgICAnV00vUGFydE9mU2V0JzogJ2Rpc2snLFxuICAgICdXTS9HZW5yZSc6ICdnZW5yZScsXG4gICAgJ1dNL0NvbXBvc2VyJzogJ2NvbXBvc2VyJyxcbiAgICAnV00vTHlyaWNzJzogJ2x5cmljcycsXG4gICAgJ1dNL0FsYnVtU29ydE9yZGVyJzogJ2FsYnVtc29ydCcsXG4gICAgJ1dNL1RpdGxlU29ydE9yZGVyJzogJ3RpdGxlc29ydCcsXG4gICAgJ1dNL0FydGlzdFNvcnRPcmRlcic6ICdhcnRpc3Rzb3J0JyxcbiAgICAnV00vQWxidW1BcnRpc3RTb3J0T3JkZXInOiAnYWxidW1hcnRpc3Rzb3J0JyxcbiAgICAnV00vQ29tcG9zZXJTb3J0T3JkZXInOiAnY29tcG9zZXJzb3J0JyxcbiAgICAnV00vV3JpdGVyJzogJ2x5cmljaXN0JyxcbiAgICAnV00vQ29uZHVjdG9yJzogJ2NvbmR1Y3RvcicsXG4gICAgJ1dNL01vZGlmaWVkQnknOiAncmVtaXhlcicsXG4gICAgJ1dNL0VuZ2luZWVyJzogJ2VuZ2luZWVyJyxcbiAgICAnV00vUHJvZHVjZXInOiAncHJvZHVjZXInLFxuICAgICdXTS9ESk1peGVyJzogJ2RqbWl4ZXInLFxuICAgICdXTS9NaXhlcic6ICdtaXhlcicsXG4gICAgJ1dNL1B1Ymxpc2hlcic6ICdsYWJlbCcsXG4gICAgJ1dNL0NvbnRlbnRHcm91cERlc2NyaXB0aW9uJzogJ2dyb3VwaW5nJyxcbiAgICAnV00vU3ViVGl0bGUnOiAnc3VidGl0bGUnLFxuICAgICdXTS9TZXRTdWJUaXRsZSc6ICdkaXNjc3VidGl0bGUnLFxuICAgIC8vICdXTS9QYXJ0T2ZTZXQnOiAndG90YWxkaXNjcycsXG4gICAgJ1dNL0lzQ29tcGlsYXRpb24nOiAnY29tcGlsYXRpb24nLFxuICAgICdXTS9TaGFyZWRVc2VyUmF0aW5nJzogJ3JhdGluZycsXG4gICAgJ1dNL0JlYXRzUGVyTWludXRlJzogJ2JwbScsXG4gICAgJ1dNL01vb2QnOiAnbW9vZCcsXG4gICAgJ1dNL01lZGlhJzogJ21lZGlhJyxcbiAgICAnV00vQ2F0YWxvZ05vJzogJ2NhdGFsb2dudW1iZXInLFxuICAgICdNdXNpY0JyYWluei9BbGJ1bSBTdGF0dXMnOiAncmVsZWFzZXN0YXR1cycsXG4gICAgJ011c2ljQnJhaW56L0FsYnVtIFR5cGUnOiAncmVsZWFzZXR5cGUnLFxuICAgICdNdXNpY0JyYWluei9BbGJ1bSBSZWxlYXNlIENvdW50cnknOiAncmVsZWFzZWNvdW50cnknLFxuICAgICdXTS9TY3JpcHQnOiAnc2NyaXB0JyxcbiAgICAnV00vTGFuZ3VhZ2UnOiAnbGFuZ3VhZ2UnLFxuICAgIENvcHlyaWdodDogJ2NvcHlyaWdodCcsXG4gICAgTElDRU5TRTogJ2xpY2Vuc2UnLFxuICAgICdXTS9FbmNvZGVkQnknOiAnZW5jb2RlZGJ5JyxcbiAgICAnV00vRW5jb2RpbmdTZXR0aW5ncyc6ICdlbmNvZGVyc2V0dGluZ3MnLFxuICAgICdXTS9CYXJjb2RlJzogJ2JhcmNvZGUnLFxuICAgICdXTS9JU1JDJzogJ2lzcmMnLFxuICAgICdNdXNpY0JyYWluei9UcmFjayBJZCc6ICdtdXNpY2JyYWluel9yZWNvcmRpbmdpZCcsXG4gICAgJ011c2ljQnJhaW56L1JlbGVhc2UgVHJhY2sgSWQnOiAnbXVzaWNicmFpbnpfdHJhY2tpZCcsXG4gICAgJ011c2ljQnJhaW56L0FsYnVtIElkJzogJ211c2ljYnJhaW56X2FsYnVtaWQnLFxuICAgICdNdXNpY0JyYWluei9BcnRpc3QgSWQnOiAnbXVzaWNicmFpbnpfYXJ0aXN0aWQnLFxuICAgICdNdXNpY0JyYWluei9BbGJ1bSBBcnRpc3QgSWQnOiAnbXVzaWNicmFpbnpfYWxidW1hcnRpc3RpZCcsXG4gICAgJ011c2ljQnJhaW56L1JlbGVhc2UgR3JvdXAgSWQnOiAnbXVzaWNicmFpbnpfcmVsZWFzZWdyb3VwaWQnLFxuICAgICdNdXNpY0JyYWluei9Xb3JrIElkJzogJ211c2ljYnJhaW56X3dvcmtpZCcsXG4gICAgJ011c2ljQnJhaW56L1RSTSBJZCc6ICdtdXNpY2JyYWluel90cm1pZCcsXG4gICAgJ011c2ljQnJhaW56L0Rpc2MgSWQnOiAnbXVzaWNicmFpbnpfZGlzY2lkJyxcbiAgICAnQWNvdXN0aWQvSWQnOiAnYWNvdXN0aWRfaWQnLFxuICAgICdBY291c3RpZC9GaW5nZXJwcmludCc6ICdhY291c3RpZF9maW5nZXJwcmludCcsXG4gICAgJ011c2ljSVAvUFVJRCc6ICdtdXNpY2lwX3B1aWQnLFxuICAgICdXTS9BUlRJU1RTJzogJ2FydGlzdHMnLFxuICAgICdXTS9Jbml0aWFsS2V5JzogJ2tleScsXG4gICAgQVNJTjogJ2FzaW4nLFxuICAgICdXTS9Xb3JrJzogJ3dvcmsnLFxuICAgICdXTS9BdXRob3JVUkwnOiAnd2Vic2l0ZScsXG4gICAgJ1dNL1BpY3R1cmUnOiAncGljdHVyZSdcbn07XG5leHBvcnQgY2xhc3MgQXNmVGFnTWFwcGVyIGV4dGVuZHMgQ29tbW9uVGFnTWFwcGVyIHtcbiAgICBzdGF0aWMgdG9SYXRpbmcocmF0aW5nKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByYXRpbmc6IE51bWJlci5wYXJzZUZsb2F0KHJhdGluZyArIDEpIC8gNVxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoWydhc2YnXSwgYXNmVGFnTWFwKTtcbiAgICB9XG4gICAgcG9zdE1hcCh0YWcpIHtcbiAgICAgICAgc3dpdGNoICh0YWcuaWQpIHtcbiAgICAgICAgICAgIGNhc2UgJ1dNL1NoYXJlZFVzZXJSYXRpbmcnOiB7XG4gICAgICAgICAgICAgICAgY29uc3Qga2V5cyA9IHRhZy5pZC5zcGxpdCgnOicpO1xuICAgICAgICAgICAgICAgIHRhZy52YWx1ZSA9IEFzZlRhZ01hcHBlci50b1JhdGluZyh0YWcudmFsdWUpO1xuICAgICAgICAgICAgICAgIHRhZy5pZCA9IGtleXNbMF07XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Bc2ZUYWdNYXBwZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/asf/AsfTagMapper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/asf/AsfUtil.js":
/*!********************************************************!*\
  !*** ./node_modules/music-metadata/lib/asf/AsfUtil.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getParserForAttr: () => (/* binding */ getParserForAttr),\n/* harmony export */   parseUnicodeAttr: () => (/* binding */ parseUnicodeAttr)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n\n\nfunction getParserForAttr(i) {\n    return attributeParsers[i];\n}\nfunction parseUnicodeAttr(uint8Array) {\n    return _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.stripNulls(_common_Util_js__WEBPACK_IMPORTED_MODULE_1__.decodeString(uint8Array, 'utf-16le'));\n}\nconst attributeParsers = [\n    parseUnicodeAttr,\n    parseByteArrayAttr,\n    parseBoolAttr,\n    parseDWordAttr,\n    parseQWordAttr,\n    parseWordAttr,\n    parseByteArrayAttr\n];\nfunction parseByteArrayAttr(buf) {\n    return new Uint8Array(buf);\n}\nfunction parseBoolAttr(buf, offset = 0) {\n    return parseWordAttr(buf, offset) === 1;\n}\nfunction parseDWordAttr(buf, offset = 0) {\n    return token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, offset);\n}\nfunction parseQWordAttr(buf, offset = 0) {\n    return token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_LE.get(buf, offset);\n}\nfunction parseWordAttr(buf, offset = 0) {\n    return token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, offset);\n}\n//# sourceMappingURL=AsfUtil.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2FzZi9Bc2ZVdGlsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUM7QUFDSztBQUNuQztBQUNQO0FBQ0E7QUFDTztBQUNQLFdBQVcsdURBQWUsQ0FBQyx5REFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsa0RBQWU7QUFDMUI7QUFDQTtBQUNBLFdBQVcsa0RBQWU7QUFDMUI7QUFDQTtBQUNBLFdBQVcsa0RBQWU7QUFDMUI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvYXNmL0FzZlV0aWwuanM/ZjM5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBUb2tlbiBmcm9tICd0b2tlbi10eXBlcyc7XG5pbXBvcnQgKiBhcyB1dGlsIGZyb20gJy4uL2NvbW1vbi9VdGlsLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRQYXJzZXJGb3JBdHRyKGkpIHtcbiAgICByZXR1cm4gYXR0cmlidXRlUGFyc2Vyc1tpXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVVuaWNvZGVBdHRyKHVpbnQ4QXJyYXkpIHtcbiAgICByZXR1cm4gdXRpbC5zdHJpcE51bGxzKHV0aWwuZGVjb2RlU3RyaW5nKHVpbnQ4QXJyYXksICd1dGYtMTZsZScpKTtcbn1cbmNvbnN0IGF0dHJpYnV0ZVBhcnNlcnMgPSBbXG4gICAgcGFyc2VVbmljb2RlQXR0cixcbiAgICBwYXJzZUJ5dGVBcnJheUF0dHIsXG4gICAgcGFyc2VCb29sQXR0cixcbiAgICBwYXJzZURXb3JkQXR0cixcbiAgICBwYXJzZVFXb3JkQXR0cixcbiAgICBwYXJzZVdvcmRBdHRyLFxuICAgIHBhcnNlQnl0ZUFycmF5QXR0clxuXTtcbmZ1bmN0aW9uIHBhcnNlQnl0ZUFycmF5QXR0cihidWYpIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnVmKTtcbn1cbmZ1bmN0aW9uIHBhcnNlQm9vbEF0dHIoYnVmLCBvZmZzZXQgPSAwKSB7XG4gICAgcmV0dXJuIHBhcnNlV29yZEF0dHIoYnVmLCBvZmZzZXQpID09PSAxO1xufVxuZnVuY3Rpb24gcGFyc2VEV29yZEF0dHIoYnVmLCBvZmZzZXQgPSAwKSB7XG4gICAgcmV0dXJuIFRva2VuLlVJTlQzMl9MRS5nZXQoYnVmLCBvZmZzZXQpO1xufVxuZnVuY3Rpb24gcGFyc2VRV29yZEF0dHIoYnVmLCBvZmZzZXQgPSAwKSB7XG4gICAgcmV0dXJuIFRva2VuLlVJTlQ2NF9MRS5nZXQoYnVmLCBvZmZzZXQpO1xufVxuZnVuY3Rpb24gcGFyc2VXb3JkQXR0cihidWYsIG9mZnNldCA9IDApIHtcbiAgICByZXR1cm4gVG9rZW4uVUlOVDE2X0xFLmdldChidWYsIG9mZnNldCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Bc2ZVdGlsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/asf/AsfUtil.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/asf/GUID.js":
/*!*****************************************************!*\
  !*** ./node_modules/music-metadata/lib/asf/GUID.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var uint8array_extras__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-extras */ \"(rsc)/./node_modules/uint8array-extras/index.js\");\n\n/**\n * Ref:\n * - https://tools.ietf.org/html/draft-fleischman-asf-01, Appendix A: ASF GUIDs\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/index.html\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\n *\n * ASF File Structure:\n * - https://msdn.microsoft.com/en-us/library/windows/desktop/ee663575(v=vs.85).aspx\n *\n * ASF GUIDs:\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\n * - https://github.com/dji-sdk/FFmpeg/blob/master/libavformat/asf.c\n */\nclass GUID {\n    static fromBin(bin, offset = 0) {\n        return new GUID(GUID.decode(bin, offset));\n    }\n    /**\n     * Decode GUID in format like \"B503BF5F-2EA9-CF11-8EE3-00C00C205365\"\n     * @param objectId Binary GUID\n     * @param offset Read offset in bytes, default 0\n     * @returns GUID as dashed hexadecimal representation\n     */\n    static decode(objectId, offset = 0) {\n        const view = new DataView(objectId.buffer, offset);\n        const guid = `${view.getUint32(0, true).toString(16)}-${view.getUint16(4, true).toString(16)}-${view.getUint16(6, true).toString(16)}-${view.getUint16(8).toString(16)}-${(0,uint8array_extras__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToHex)(objectId.slice(offset + 10, offset + 16))}`;\n        return guid.toUpperCase();\n    }\n    /**\n     * Decode stream type\n     * @param mediaType Media type GUID\n     * @returns Media type\n     */\n    static decodeMediaType(mediaType) {\n        switch (mediaType.str) {\n            case GUID.AudioMedia.str: return 'audio';\n            case GUID.VideoMedia.str: return 'video';\n            case GUID.CommandMedia.str: return 'command';\n            case GUID.Degradable_JPEG_Media.str: return 'degradable-jpeg';\n            case GUID.FileTransferMedia.str: return 'file-transfer';\n            case GUID.BinaryMedia.str: return 'binary';\n        }\n    }\n    /**\n     * Encode GUID\n     * @param guid GUID like: \"B503BF5F-2EA9-CF11-8EE3-00C00C205365\"\n     * @returns Encoded Binary GUID\n     */\n    static encode(str) {\n        const bin = new Uint8Array(16);\n        const view = new DataView(bin.buffer);\n        view.setUint32(0, Number.parseInt(str.slice(0, 8), 16), true);\n        view.setUint16(4, Number.parseInt(str.slice(9, 13), 16), true);\n        view.setUint16(6, Number.parseInt(str.slice(14, 18), 16), true);\n        bin.set((0,uint8array_extras__WEBPACK_IMPORTED_MODULE_0__.hexToUint8Array)(str.slice(19, 23)), 8);\n        bin.set((0,uint8array_extras__WEBPACK_IMPORTED_MODULE_0__.hexToUint8Array)(str.slice(24)), 10);\n        return bin;\n    }\n    constructor(str) {\n        this.str = str;\n    }\n    equals(guid) {\n        return this.str === guid.str;\n    }\n    toBin() {\n        return GUID.encode(this.str);\n    }\n}\n// 10.1 Top-level ASF object GUIDs\nGUID.HeaderObject = new GUID(\"75B22630-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.DataObject = new GUID(\"75B22636-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.SimpleIndexObject = new GUID(\"33000890-E5B1-11CF-89F4-00A0C90349CB\");\nGUID.IndexObject = new GUID(\"D6E229D3-35DA-11D1-9034-00A0C90349BE\");\nGUID.MediaObjectIndexObject = new GUID(\"FEB103F8-12AD-4C64-840F-2A1D2F7AD48C\");\nGUID.TimecodeIndexObject = new GUID(\"3CB73FD0-0C4A-4803-953D-EDF7B6228F0C\");\n// 10.2 Header Object GUIDs\nGUID.FilePropertiesObject = new GUID(\"8CABDCA1-A947-11CF-8EE4-00C00C205365\");\nGUID.StreamPropertiesObject = new GUID(\"B7DC0791-A9B7-11CF-8EE6-00C00C205365\");\nGUID.HeaderExtensionObject = new GUID(\"5FBF03B5-A92E-11CF-8EE3-00C00C205365\");\nGUID.CodecListObject = new GUID(\"86D15240-311D-11D0-A3A4-00A0C90348F6\");\nGUID.ScriptCommandObject = new GUID(\"1EFB1A30-0B62-11D0-A39B-00A0C90348F6\");\nGUID.MarkerObject = new GUID(\"F487CD01-A951-11CF-8EE6-00C00C205365\");\nGUID.BitrateMutualExclusionObject = new GUID(\"D6E229DC-35DA-11D1-9034-00A0C90349BE\");\nGUID.ErrorCorrectionObject = new GUID(\"75B22635-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.ContentDescriptionObject = new GUID(\"75B22633-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.ExtendedContentDescriptionObject = new GUID(\"D2D0A440-E307-11D2-97F0-00A0C95EA850\");\nGUID.ContentBrandingObject = new GUID(\"2211B3FA-BD23-11D2-B4B7-00A0C955FC6E\");\nGUID.StreamBitratePropertiesObject = new GUID(\"7BF875CE-468D-11D1-8D82-006097C9A2B2\");\nGUID.ContentEncryptionObject = new GUID(\"2211B3FB-BD23-11D2-B4B7-00A0C955FC6E\");\nGUID.ExtendedContentEncryptionObject = new GUID(\"298AE614-2622-4C17-B935-DAE07EE9289C\");\nGUID.DigitalSignatureObject = new GUID(\"2211B3FC-BD23-11D2-B4B7-00A0C955FC6E\");\nGUID.PaddingObject = new GUID(\"1806D474-CADF-4509-A4BA-9AABCB96AAE8\");\n// 10.3 Header Extension Object GUIDs\nGUID.ExtendedStreamPropertiesObject = new GUID(\"14E6A5CB-C672-4332-8399-A96952065B5A\");\nGUID.AdvancedMutualExclusionObject = new GUID(\"A08649CF-4775-4670-8A16-6E35357566CD\");\nGUID.GroupMutualExclusionObject = new GUID(\"D1465A40-5A79-4338-B71B-E36B8FD6C249\");\nGUID.StreamPrioritizationObject = new GUID(\"D4FED15B-88D3-454F-81F0-ED5C45999E24\");\nGUID.BandwidthSharingObject = new GUID(\"A69609E6-517B-11D2-B6AF-00C04FD908E9\");\nGUID.LanguageListObject = new GUID(\"7C4346A9-EFE0-4BFC-B229-393EDE415C85\");\nGUID.MetadataObject = new GUID(\"C5F8CBEA-5BAF-4877-8467-AA8C44FA4CCA\");\nGUID.MetadataLibraryObject = new GUID(\"44231C94-9498-49D1-A141-1D134E457054\");\nGUID.IndexParametersObject = new GUID(\"D6E229DF-35DA-11D1-9034-00A0C90349BE\");\nGUID.MediaObjectIndexParametersObject = new GUID(\"6B203BAD-3F11-48E4-ACA8-D7613DE2CFA7\");\nGUID.TimecodeIndexParametersObject = new GUID(\"F55E496D-9797-4B5D-8C8B-604DFE9BFB24\");\nGUID.CompatibilityObject = new GUID(\"26F18B5D-4584-47EC-9F5F-0E651F0452C9\");\nGUID.AdvancedContentEncryptionObject = new GUID(\"43058533-6981-49E6-9B74-AD12CB86D58C\");\n// 10.4 Stream Properties Object Stream Type GUIDs\nGUID.AudioMedia = new GUID(\"F8699E40-5B4D-11CF-A8FD-00805F5C442B\");\nGUID.VideoMedia = new GUID(\"BC19EFC0-5B4D-11CF-A8FD-00805F5C442B\");\nGUID.CommandMedia = new GUID(\"59DACFC0-59E6-11D0-A3AC-00A0C90348F6\");\nGUID.JFIF_Media = new GUID(\"B61BE100-5B4E-11CF-A8FD-00805F5C442B\");\nGUID.Degradable_JPEG_Media = new GUID(\"35907DE0-E415-11CF-A917-00805F5C442B\");\nGUID.FileTransferMedia = new GUID(\"91BD222C-F21C-497A-8B6D-5AA86BFC0185\");\nGUID.BinaryMedia = new GUID(\"3AFB65E2-47EF-40F2-AC2C-70A90D71D343\");\nGUID.ASF_Index_Placeholder_Object = new GUID(\"D9AADE20-7C17-4F9C-BC28-8555DD98E2A2\");\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GUID);\n//# sourceMappingURL=GUID.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/asf/GUID.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js":
/*!***************************************************************!*\
  !*** ./node_modules/music-metadata/lib/common/BasicParser.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BasicParser: () => (/* binding */ BasicParser)\n/* harmony export */ });\nclass BasicParser {\n    /**\n     * Initialize parser with output (metadata), input (tokenizer) & parsing options (options).\n     * @param {INativeMetadataCollector} metadata Output\n     * @param {ITokenizer} tokenizer Input\n     * @param {IOptions} options Parsing options\n     */\n    constructor(metadata, tokenizer, options) {\n        this.metadata = metadata;\n        this.tokenizer = tokenizer;\n        this.options = options;\n    }\n}\n//# sourceMappingURL=BasicParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2NvbW1vbi9CYXNpY1BhcnNlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0EsZUFBZSwwQkFBMEI7QUFDekMsZUFBZSxZQUFZO0FBQzNCLGVBQWUsVUFBVTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9jb21tb24vQmFzaWNQYXJzZXIuanM/N2FhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQmFzaWNQYXJzZXIge1xuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemUgcGFyc2VyIHdpdGggb3V0cHV0IChtZXRhZGF0YSksIGlucHV0ICh0b2tlbml6ZXIpICYgcGFyc2luZyBvcHRpb25zIChvcHRpb25zKS5cbiAgICAgKiBAcGFyYW0ge0lOYXRpdmVNZXRhZGF0YUNvbGxlY3Rvcn0gbWV0YWRhdGEgT3V0cHV0XG4gICAgICogQHBhcmFtIHtJVG9rZW5pemVyfSB0b2tlbml6ZXIgSW5wdXRcbiAgICAgKiBAcGFyYW0ge0lPcHRpb25zfSBvcHRpb25zIFBhcnNpbmcgb3B0aW9uc1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG1ldGFkYXRhLCB0b2tlbml6ZXIsIG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5tZXRhZGF0YSA9IG1ldGFkYXRhO1xuICAgICAgICB0aGlzLnRva2VuaXplciA9IHRva2VuaXplcjtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CYXNpY1BhcnNlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/common/CaseInsensitiveTagMap.js":
/*!*************************************************************************!*\
  !*** ./node_modules/music-metadata/lib/common/CaseInsensitiveTagMap.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CaseInsensitiveTagMap: () => (/* binding */ CaseInsensitiveTagMap)\n/* harmony export */ });\n/* harmony import */ var _GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GenericTagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/common/GenericTagMapper.js\");\n\nclass CaseInsensitiveTagMap extends _GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_0__.CommonTagMapper {\n    constructor(tagTypes, tagMap) {\n        const upperCaseMap = {};\n        for (const tag of Object.keys(tagMap)) {\n            upperCaseMap[tag.toUpperCase()] = tagMap[tag];\n        }\n        super(tagTypes, upperCaseMap);\n    }\n    /**\n     * @tag  Native header tag\n     * @return common tag name (alias)\n     */\n    getCommonName(tag) {\n        return this.tagMap[tag.toUpperCase()];\n    }\n}\n//# sourceMappingURL=CaseInsensitiveTagMap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2NvbW1vbi9DYXNlSW5zZW5zaXRpdmVUYWdNYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0Q7QUFDakQsb0NBQW9DLGlFQUFlO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9jb21tb24vQ2FzZUluc2Vuc2l0aXZlVGFnTWFwLmpzPzM4MDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uVGFnTWFwcGVyIH0gZnJvbSAnLi9HZW5lcmljVGFnTWFwcGVyLmpzJztcbmV4cG9ydCBjbGFzcyBDYXNlSW5zZW5zaXRpdmVUYWdNYXAgZXh0ZW5kcyBDb21tb25UYWdNYXBwZXIge1xuICAgIGNvbnN0cnVjdG9yKHRhZ1R5cGVzLCB0YWdNYXApIHtcbiAgICAgICAgY29uc3QgdXBwZXJDYXNlTWFwID0ge307XG4gICAgICAgIGZvciAoY29uc3QgdGFnIG9mIE9iamVjdC5rZXlzKHRhZ01hcCkpIHtcbiAgICAgICAgICAgIHVwcGVyQ2FzZU1hcFt0YWcudG9VcHBlckNhc2UoKV0gPSB0YWdNYXBbdGFnXTtcbiAgICAgICAgfVxuICAgICAgICBzdXBlcih0YWdUeXBlcywgdXBwZXJDYXNlTWFwKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHRhZyAgTmF0aXZlIGhlYWRlciB0YWdcbiAgICAgKiBAcmV0dXJuIGNvbW1vbiB0YWcgbmFtZSAoYWxpYXMpXG4gICAgICovXG4gICAgZ2V0Q29tbW9uTmFtZSh0YWcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudGFnTWFwW3RhZy50b1VwcGVyQ2FzZSgpXTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DYXNlSW5zZW5zaXRpdmVUYWdNYXAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/common/CaseInsensitiveTagMap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/common/CombinedTagMapper.js":
/*!*********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/common/CombinedTagMapper.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CombinedTagMapper: () => (/* binding */ CombinedTagMapper)\n/* harmony export */ });\n/* harmony import */ var _id3v1_ID3v1TagMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../id3v1/ID3v1TagMap.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v1/ID3v1TagMap.js\");\n/* harmony import */ var _id3v2_ID3v24TagMapper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../id3v2/ID3v24TagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v24TagMapper.js\");\n/* harmony import */ var _asf_AsfTagMapper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../asf/AsfTagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/asf/AsfTagMapper.js\");\n/* harmony import */ var _id3v2_ID3v22TagMapper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../id3v2/ID3v22TagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v22TagMapper.js\");\n/* harmony import */ var _apev2_APEv2TagMapper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../apev2/APEv2TagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/apev2/APEv2TagMapper.js\");\n/* harmony import */ var _mp4_MP4TagMapper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../mp4/MP4TagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/mp4/MP4TagMapper.js\");\n/* harmony import */ var _ogg_vorbis_VorbisTagMapper_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ogg/vorbis/VorbisTagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/VorbisTagMapper.js\");\n/* harmony import */ var _riff_RiffInfoTagMap_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../riff/RiffInfoTagMap.js */ \"(rsc)/./node_modules/music-metadata/lib/riff/RiffInfoTagMap.js\");\n/* harmony import */ var _matroska_MatroskaTagMapper_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../matroska/MatroskaTagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/matroska/MatroskaTagMapper.js\");\n/* harmony import */ var _aiff_AiffTagMap_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../aiff/AiffTagMap.js */ \"(rsc)/./node_modules/music-metadata/lib/aiff/AiffTagMap.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\n\n\n\n\n\n\n\n\n\nclass CombinedTagMapper {\n    constructor() {\n        this.tagMappers = {};\n        [\n            new _id3v1_ID3v1TagMap_js__WEBPACK_IMPORTED_MODULE_0__.ID3v1TagMapper(),\n            new _id3v2_ID3v22TagMapper_js__WEBPACK_IMPORTED_MODULE_3__.ID3v22TagMapper(),\n            new _id3v2_ID3v24TagMapper_js__WEBPACK_IMPORTED_MODULE_1__.ID3v24TagMapper(),\n            new _mp4_MP4TagMapper_js__WEBPACK_IMPORTED_MODULE_5__.MP4TagMapper(),\n            new _mp4_MP4TagMapper_js__WEBPACK_IMPORTED_MODULE_5__.MP4TagMapper(),\n            new _ogg_vorbis_VorbisTagMapper_js__WEBPACK_IMPORTED_MODULE_6__.VorbisTagMapper(),\n            new _apev2_APEv2TagMapper_js__WEBPACK_IMPORTED_MODULE_4__.APEv2TagMapper(),\n            new _asf_AsfTagMapper_js__WEBPACK_IMPORTED_MODULE_2__.AsfTagMapper(),\n            new _riff_RiffInfoTagMap_js__WEBPACK_IMPORTED_MODULE_7__.RiffInfoTagMapper(),\n            new _matroska_MatroskaTagMapper_js__WEBPACK_IMPORTED_MODULE_8__.MatroskaTagMapper(),\n            new _aiff_AiffTagMap_js__WEBPACK_IMPORTED_MODULE_9__.AiffTagMapper()\n        ].forEach(mapper => {\n            this.registerTagMapper(mapper);\n        });\n    }\n    /**\n     * Convert native to generic (common) tags\n     * @param tagType Originating tag format\n     * @param tag     Native tag to map to a generic tag id\n     * @param warnings\n     * @return Generic tag result (output of this function)\n     */\n    mapTag(tagType, tag, warnings) {\n        const tagMapper = this.tagMappers[tagType];\n        if (tagMapper) {\n            return this.tagMappers[tagType].mapGenericTag(tag, warnings);\n        }\n        throw new _ParseError_js__WEBPACK_IMPORTED_MODULE_10__.InternalParserError(`No generic tag mapper defined for tag-format: ${tagType}`);\n    }\n    registerTagMapper(genericTagMapper) {\n        for (const tagType of genericTagMapper.tagTypes) {\n            this.tagMappers[tagType] = genericTagMapper;\n        }\n    }\n}\n//# sourceMappingURL=CombinedTagMapper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2NvbW1vbi9Db21iaW5lZFRhZ01hcHBlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBeUQ7QUFDSztBQUNSO0FBQ1E7QUFDRjtBQUNOO0FBQ2E7QUFDTDtBQUNPO0FBQ2Y7QUFDQztBQUNoRDtBQUNQO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixpRUFBYztBQUM5QixnQkFBZ0Isc0VBQWU7QUFDL0IsZ0JBQWdCLHNFQUFlO0FBQy9CLGdCQUFnQiw4REFBWTtBQUM1QixnQkFBZ0IsOERBQVk7QUFDNUIsZ0JBQWdCLDJFQUFlO0FBQy9CLGdCQUFnQixvRUFBYztBQUM5QixnQkFBZ0IsOERBQVk7QUFDNUIsZ0JBQWdCLHNFQUFpQjtBQUNqQyxnQkFBZ0IsNkVBQWlCO0FBQ2pDLGdCQUFnQiw4REFBYTtBQUM3QjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGdFQUFtQixrREFBa0QsUUFBUTtBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9jb21tb24vQ29tYmluZWRUYWdNYXBwZXIuanM/ZDU5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJRDN2MVRhZ01hcHBlciB9IGZyb20gJy4uL2lkM3YxL0lEM3YxVGFnTWFwLmpzJztcbmltcG9ydCB7IElEM3YyNFRhZ01hcHBlciB9IGZyb20gJy4uL2lkM3YyL0lEM3YyNFRhZ01hcHBlci5qcyc7XG5pbXBvcnQgeyBBc2ZUYWdNYXBwZXIgfSBmcm9tICcuLi9hc2YvQXNmVGFnTWFwcGVyLmpzJztcbmltcG9ydCB7IElEM3YyMlRhZ01hcHBlciB9IGZyb20gJy4uL2lkM3YyL0lEM3YyMlRhZ01hcHBlci5qcyc7XG5pbXBvcnQgeyBBUEV2MlRhZ01hcHBlciB9IGZyb20gJy4uL2FwZXYyL0FQRXYyVGFnTWFwcGVyLmpzJztcbmltcG9ydCB7IE1QNFRhZ01hcHBlciB9IGZyb20gJy4uL21wNC9NUDRUYWdNYXBwZXIuanMnO1xuaW1wb3J0IHsgVm9yYmlzVGFnTWFwcGVyIH0gZnJvbSAnLi4vb2dnL3ZvcmJpcy9Wb3JiaXNUYWdNYXBwZXIuanMnO1xuaW1wb3J0IHsgUmlmZkluZm9UYWdNYXBwZXIgfSBmcm9tICcuLi9yaWZmL1JpZmZJbmZvVGFnTWFwLmpzJztcbmltcG9ydCB7IE1hdHJvc2thVGFnTWFwcGVyIH0gZnJvbSAnLi4vbWF0cm9za2EvTWF0cm9za2FUYWdNYXBwZXIuanMnO1xuaW1wb3J0IHsgQWlmZlRhZ01hcHBlciB9IGZyb20gJy4uL2FpZmYvQWlmZlRhZ01hcC5qcyc7XG5pbXBvcnQgeyBJbnRlcm5hbFBhcnNlckVycm9yIH0gZnJvbSAnLi4vUGFyc2VFcnJvci5qcyc7XG5leHBvcnQgY2xhc3MgQ29tYmluZWRUYWdNYXBwZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnRhZ01hcHBlcnMgPSB7fTtcbiAgICAgICAgW1xuICAgICAgICAgICAgbmV3IElEM3YxVGFnTWFwcGVyKCksXG4gICAgICAgICAgICBuZXcgSUQzdjIyVGFnTWFwcGVyKCksXG4gICAgICAgICAgICBuZXcgSUQzdjI0VGFnTWFwcGVyKCksXG4gICAgICAgICAgICBuZXcgTVA0VGFnTWFwcGVyKCksXG4gICAgICAgICAgICBuZXcgTVA0VGFnTWFwcGVyKCksXG4gICAgICAgICAgICBuZXcgVm9yYmlzVGFnTWFwcGVyKCksXG4gICAgICAgICAgICBuZXcgQVBFdjJUYWdNYXBwZXIoKSxcbiAgICAgICAgICAgIG5ldyBBc2ZUYWdNYXBwZXIoKSxcbiAgICAgICAgICAgIG5ldyBSaWZmSW5mb1RhZ01hcHBlcigpLFxuICAgICAgICAgICAgbmV3IE1hdHJvc2thVGFnTWFwcGVyKCksXG4gICAgICAgICAgICBuZXcgQWlmZlRhZ01hcHBlcigpXG4gICAgICAgIF0uZm9yRWFjaChtYXBwZXIgPT4ge1xuICAgICAgICAgICAgdGhpcy5yZWdpc3RlclRhZ01hcHBlcihtYXBwZXIpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29udmVydCBuYXRpdmUgdG8gZ2VuZXJpYyAoY29tbW9uKSB0YWdzXG4gICAgICogQHBhcmFtIHRhZ1R5cGUgT3JpZ2luYXRpbmcgdGFnIGZvcm1hdFxuICAgICAqIEBwYXJhbSB0YWcgICAgIE5hdGl2ZSB0YWcgdG8gbWFwIHRvIGEgZ2VuZXJpYyB0YWcgaWRcbiAgICAgKiBAcGFyYW0gd2FybmluZ3NcbiAgICAgKiBAcmV0dXJuIEdlbmVyaWMgdGFnIHJlc3VsdCAob3V0cHV0IG9mIHRoaXMgZnVuY3Rpb24pXG4gICAgICovXG4gICAgbWFwVGFnKHRhZ1R5cGUsIHRhZywgd2FybmluZ3MpIHtcbiAgICAgICAgY29uc3QgdGFnTWFwcGVyID0gdGhpcy50YWdNYXBwZXJzW3RhZ1R5cGVdO1xuICAgICAgICBpZiAodGFnTWFwcGVyKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy50YWdNYXBwZXJzW3RhZ1R5cGVdLm1hcEdlbmVyaWNUYWcodGFnLCB3YXJuaW5ncyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEludGVybmFsUGFyc2VyRXJyb3IoYE5vIGdlbmVyaWMgdGFnIG1hcHBlciBkZWZpbmVkIGZvciB0YWctZm9ybWF0OiAke3RhZ1R5cGV9YCk7XG4gICAgfVxuICAgIHJlZ2lzdGVyVGFnTWFwcGVyKGdlbmVyaWNUYWdNYXBwZXIpIHtcbiAgICAgICAgZm9yIChjb25zdCB0YWdUeXBlIG9mIGdlbmVyaWNUYWdNYXBwZXIudGFnVHlwZXMpIHtcbiAgICAgICAgICAgIHRoaXMudGFnTWFwcGVyc1t0YWdUeXBlXSA9IGdlbmVyaWNUYWdNYXBwZXI7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db21iaW5lZFRhZ01hcHBlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/common/CombinedTagMapper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/common/FourCC.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/common/FourCC.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FourCcToken: () => (/* binding */ FourCcToken)\n/* harmony export */ });\n/* harmony import */ var uint8array_extras__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8array-extras */ \"(rsc)/./node_modules/uint8array-extras/index.js\");\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\n\nconst validFourCC = /^[\\x21-\\x7e©][\\x20-\\x7e\\x00()]{3}/;\n/**\n * Token for read FourCC\n * Ref: https://en.wikipedia.org/wiki/FourCC\n */\nconst FourCcToken = {\n    len: 4,\n    get: (buf, off) => {\n        const id = (0,uint8array_extras__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToString)(buf.slice(off, off + FourCcToken.len), 'latin1');\n        if (!id.match(validFourCC)) {\n            throw new _ParseError_js__WEBPACK_IMPORTED_MODULE_1__.FieldDecodingError(`FourCC contains invalid characters: ${_Util_js__WEBPACK_IMPORTED_MODULE_0__.a2hex(id)} \"${id}\"`);\n        }\n        return id;\n    },\n    put: (buffer, offset, id) => {\n        const str = (0,uint8array_extras__WEBPACK_IMPORTED_MODULE_2__.stringToUint8Array)(id);\n        if (str.length !== 4)\n            throw new _ParseError_js__WEBPACK_IMPORTED_MODULE_1__.InternalParserError('Invalid length');\n        buffer.set(str, offset);\n        return offset + 4;\n    }\n};\n//# sourceMappingURL=FourCC.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2NvbW1vbi9Gb3VyQ0MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEyRTtBQUN6QztBQUN5QztBQUMzRSxvREFBb0QsRUFBRTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG1CQUFtQixxRUFBa0I7QUFDckM7QUFDQSxzQkFBc0IsOERBQWtCLHdDQUF3QywyQ0FBVSxNQUFNLEdBQUcsR0FBRztBQUN0RztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0JBQW9CLHFFQUFrQjtBQUN0QztBQUNBLHNCQUFzQiwrREFBbUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvY29tbW9uL0ZvdXJDQy5qcz9hNTlkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cmluZ1RvVWludDhBcnJheSwgdWludDhBcnJheVRvU3RyaW5nIH0gZnJvbSAndWludDhhcnJheS1leHRyYXMnO1xuaW1wb3J0ICogYXMgdXRpbCBmcm9tICcuL1V0aWwuanMnO1xuaW1wb3J0IHsgSW50ZXJuYWxQYXJzZXJFcnJvciwgRmllbGREZWNvZGluZ0Vycm9yIH0gZnJvbSAnLi4vUGFyc2VFcnJvci5qcyc7XG5jb25zdCB2YWxpZEZvdXJDQyA9IC9eW1xceDIxLVxceDdlwqldW1xceDIwLVxceDdlXFx4MDAoKV17M30vO1xuLyoqXG4gKiBUb2tlbiBmb3IgcmVhZCBGb3VyQ0NcbiAqIFJlZjogaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRm91ckNDXG4gKi9cbmV4cG9ydCBjb25zdCBGb3VyQ2NUb2tlbiA9IHtcbiAgICBsZW46IDQsXG4gICAgZ2V0OiAoYnVmLCBvZmYpID0+IHtcbiAgICAgICAgY29uc3QgaWQgPSB1aW50OEFycmF5VG9TdHJpbmcoYnVmLnNsaWNlKG9mZiwgb2ZmICsgRm91ckNjVG9rZW4ubGVuKSwgJ2xhdGluMScpO1xuICAgICAgICBpZiAoIWlkLm1hdGNoKHZhbGlkRm91ckNDKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEZpZWxkRGVjb2RpbmdFcnJvcihgRm91ckNDIGNvbnRhaW5zIGludmFsaWQgY2hhcmFjdGVyczogJHt1dGlsLmEyaGV4KGlkKX0gXCIke2lkfVwiYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGlkO1xuICAgIH0sXG4gICAgcHV0OiAoYnVmZmVyLCBvZmZzZXQsIGlkKSA9PiB7XG4gICAgICAgIGNvbnN0IHN0ciA9IHN0cmluZ1RvVWludDhBcnJheShpZCk7XG4gICAgICAgIGlmIChzdHIubGVuZ3RoICE9PSA0KVxuICAgICAgICAgICAgdGhyb3cgbmV3IEludGVybmFsUGFyc2VyRXJyb3IoJ0ludmFsaWQgbGVuZ3RoJyk7XG4gICAgICAgIGJ1ZmZlci5zZXQoc3RyLCBvZmZzZXQpO1xuICAgICAgICByZXR1cm4gb2Zmc2V0ICsgNDtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Rm91ckNDLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/common/FourCC.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/common/GenericTagMapper.js":
/*!********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/common/GenericTagMapper.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CommonTagMapper: () => (/* binding */ CommonTagMapper)\n/* harmony export */ });\nclass CommonTagMapper {\n    static toIntOrNull(str) {\n        const cleaned = Number.parseInt(str, 10);\n        return Number.isNaN(cleaned) ? null : cleaned;\n    }\n    // TODO: a string of 1of1 would fail to be converted\n    // converts 1/10 to no : 1, of : 10\n    // or 1 to no : 1, of : 0\n    static normalizeTrack(origVal) {\n        const split = origVal.toString().split('/');\n        return {\n            no: Number.parseInt(split[0], 10) || null,\n            of: Number.parseInt(split[1], 10) || null\n        };\n    }\n    constructor(tagTypes, tagMap) {\n        this.tagTypes = tagTypes;\n        this.tagMap = tagMap;\n    }\n    /**\n     * Process and set common tags\n     * write common tags to\n     * @param tag Native tag\n     * @param warnings Register warnings\n     * @return common name\n     */\n    mapGenericTag(tag, warnings) {\n        tag = { id: tag.id, value: tag.value }; // clone object\n        this.postMap(tag, warnings);\n        // Convert native tag event to generic 'alias' tag\n        const id = this.getCommonName(tag.id);\n        return id ? { id, value: tag.value } : null;\n    }\n    /**\n     * Convert native tag key to common tag key\n     * @param tag Native header tag\n     * @return common tag name (alias)\n     */\n    getCommonName(tag) {\n        return this.tagMap[tag];\n    }\n    /**\n     * Handle post mapping exceptions / correction\n     * @param tag Tag e.g. {\"©alb\", \"Buena Vista Social Club\")\n     * @param warnings Used to register warnings\n     */\n    postMap(tag, warnings) {\n        return;\n    }\n}\nCommonTagMapper.maxRatingScore = 1;\n//# sourceMappingURL=GenericTagMapper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2NvbW1vbi9HZW5lcmljVGFnTWFwcGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0NBQWdDO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix1QkFBdUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9jb21tb24vR2VuZXJpY1RhZ01hcHBlci5qcz80NTNiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBDb21tb25UYWdNYXBwZXIge1xuICAgIHN0YXRpYyB0b0ludE9yTnVsbChzdHIpIHtcbiAgICAgICAgY29uc3QgY2xlYW5lZCA9IE51bWJlci5wYXJzZUludChzdHIsIDEwKTtcbiAgICAgICAgcmV0dXJuIE51bWJlci5pc05hTihjbGVhbmVkKSA/IG51bGwgOiBjbGVhbmVkO1xuICAgIH1cbiAgICAvLyBUT0RPOiBhIHN0cmluZyBvZiAxb2YxIHdvdWxkIGZhaWwgdG8gYmUgY29udmVydGVkXG4gICAgLy8gY29udmVydHMgMS8xMCB0byBubyA6IDEsIG9mIDogMTBcbiAgICAvLyBvciAxIHRvIG5vIDogMSwgb2YgOiAwXG4gICAgc3RhdGljIG5vcm1hbGl6ZVRyYWNrKG9yaWdWYWwpIHtcbiAgICAgICAgY29uc3Qgc3BsaXQgPSBvcmlnVmFsLnRvU3RyaW5nKCkuc3BsaXQoJy8nKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5vOiBOdW1iZXIucGFyc2VJbnQoc3BsaXRbMF0sIDEwKSB8fCBudWxsLFxuICAgICAgICAgICAgb2Y6IE51bWJlci5wYXJzZUludChzcGxpdFsxXSwgMTApIHx8IG51bGxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IodGFnVHlwZXMsIHRhZ01hcCkge1xuICAgICAgICB0aGlzLnRhZ1R5cGVzID0gdGFnVHlwZXM7XG4gICAgICAgIHRoaXMudGFnTWFwID0gdGFnTWFwO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQcm9jZXNzIGFuZCBzZXQgY29tbW9uIHRhZ3NcbiAgICAgKiB3cml0ZSBjb21tb24gdGFncyB0b1xuICAgICAqIEBwYXJhbSB0YWcgTmF0aXZlIHRhZ1xuICAgICAqIEBwYXJhbSB3YXJuaW5ncyBSZWdpc3RlciB3YXJuaW5nc1xuICAgICAqIEByZXR1cm4gY29tbW9uIG5hbWVcbiAgICAgKi9cbiAgICBtYXBHZW5lcmljVGFnKHRhZywgd2FybmluZ3MpIHtcbiAgICAgICAgdGFnID0geyBpZDogdGFnLmlkLCB2YWx1ZTogdGFnLnZhbHVlIH07IC8vIGNsb25lIG9iamVjdFxuICAgICAgICB0aGlzLnBvc3RNYXAodGFnLCB3YXJuaW5ncyk7XG4gICAgICAgIC8vIENvbnZlcnQgbmF0aXZlIHRhZyBldmVudCB0byBnZW5lcmljICdhbGlhcycgdGFnXG4gICAgICAgIGNvbnN0IGlkID0gdGhpcy5nZXRDb21tb25OYW1lKHRhZy5pZCk7XG4gICAgICAgIHJldHVybiBpZCA/IHsgaWQsIHZhbHVlOiB0YWcudmFsdWUgfSA6IG51bGw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENvbnZlcnQgbmF0aXZlIHRhZyBrZXkgdG8gY29tbW9uIHRhZyBrZXlcbiAgICAgKiBAcGFyYW0gdGFnIE5hdGl2ZSBoZWFkZXIgdGFnXG4gICAgICogQHJldHVybiBjb21tb24gdGFnIG5hbWUgKGFsaWFzKVxuICAgICAqL1xuICAgIGdldENvbW1vbk5hbWUodGFnKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRhZ01hcFt0YWddO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBIYW5kbGUgcG9zdCBtYXBwaW5nIGV4Y2VwdGlvbnMgLyBjb3JyZWN0aW9uXG4gICAgICogQHBhcmFtIHRhZyBUYWcgZS5nLiB7XCLCqWFsYlwiLCBcIkJ1ZW5hIFZpc3RhIFNvY2lhbCBDbHViXCIpXG4gICAgICogQHBhcmFtIHdhcm5pbmdzIFVzZWQgdG8gcmVnaXN0ZXIgd2FybmluZ3NcbiAgICAgKi9cbiAgICBwb3N0TWFwKHRhZywgd2FybmluZ3MpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbn1cbkNvbW1vblRhZ01hcHBlci5tYXhSYXRpbmdTY29yZSA9IDE7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1HZW5lcmljVGFnTWFwcGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/common/GenericTagMapper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/common/GenericTagTypes.js":
/*!*******************************************************************!*\
  !*** ./node_modules/music-metadata/lib/common/GenericTagTypes.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   commonTags: () => (/* binding */ commonTags),\n/* harmony export */   isSingleton: () => (/* binding */ isSingleton),\n/* harmony export */   isUnique: () => (/* binding */ isUnique)\n/* harmony export */ });\nconst commonTags = {\n    year: { multiple: false },\n    track: { multiple: false },\n    disk: { multiple: false },\n    title: { multiple: false },\n    artist: { multiple: false },\n    artists: { multiple: true, unique: true },\n    albumartist: { multiple: false },\n    album: { multiple: false },\n    date: { multiple: false },\n    originaldate: { multiple: false },\n    originalyear: { multiple: false },\n    releasedate: { multiple: false },\n    comment: { multiple: true, unique: false },\n    genre: { multiple: true, unique: true },\n    picture: { multiple: true, unique: true },\n    composer: { multiple: true, unique: true },\n    lyrics: { multiple: true, unique: false },\n    albumsort: { multiple: false, unique: true },\n    titlesort: { multiple: false, unique: true },\n    work: { multiple: false, unique: true },\n    artistsort: { multiple: false, unique: true },\n    albumartistsort: { multiple: false, unique: true },\n    composersort: { multiple: false, unique: true },\n    lyricist: { multiple: true, unique: true },\n    writer: { multiple: true, unique: true },\n    conductor: { multiple: true, unique: true },\n    remixer: { multiple: true, unique: true },\n    arranger: { multiple: true, unique: true },\n    engineer: { multiple: true, unique: true },\n    producer: { multiple: true, unique: true },\n    technician: { multiple: true, unique: true },\n    djmixer: { multiple: true, unique: true },\n    mixer: { multiple: true, unique: true },\n    label: { multiple: true, unique: true },\n    grouping: { multiple: false },\n    subtitle: { multiple: true },\n    discsubtitle: { multiple: false },\n    totaltracks: { multiple: false },\n    totaldiscs: { multiple: false },\n    compilation: { multiple: false },\n    rating: { multiple: true },\n    bpm: { multiple: false },\n    mood: { multiple: false },\n    media: { multiple: false },\n    catalognumber: { multiple: true, unique: true },\n    tvShow: { multiple: false },\n    tvShowSort: { multiple: false },\n    tvSeason: { multiple: false },\n    tvEpisode: { multiple: false },\n    tvEpisodeId: { multiple: false },\n    tvNetwork: { multiple: false },\n    podcast: { multiple: false },\n    podcasturl: { multiple: false },\n    releasestatus: { multiple: false },\n    releasetype: { multiple: true },\n    releasecountry: { multiple: false },\n    script: { multiple: false },\n    language: { multiple: false },\n    copyright: { multiple: false },\n    license: { multiple: false },\n    encodedby: { multiple: false },\n    encodersettings: { multiple: false },\n    gapless: { multiple: false },\n    barcode: { multiple: false },\n    isrc: { multiple: true },\n    asin: { multiple: false },\n    musicbrainz_recordingid: { multiple: false },\n    musicbrainz_trackid: { multiple: false },\n    musicbrainz_albumid: { multiple: false },\n    musicbrainz_artistid: { multiple: true },\n    musicbrainz_albumartistid: { multiple: true },\n    musicbrainz_releasegroupid: { multiple: false },\n    musicbrainz_workid: { multiple: false },\n    musicbrainz_trmid: { multiple: false },\n    musicbrainz_discid: { multiple: false },\n    acoustid_id: { multiple: false },\n    acoustid_fingerprint: { multiple: false },\n    musicip_puid: { multiple: false },\n    musicip_fingerprint: { multiple: false },\n    website: { multiple: false },\n    'performer:instrument': { multiple: true, unique: true },\n    averageLevel: { multiple: false },\n    peakLevel: { multiple: false },\n    notes: { multiple: true, unique: false },\n    key: { multiple: false },\n    originalalbum: { multiple: false },\n    originalartist: { multiple: false },\n    discogs_artist_id: { multiple: true, unique: true },\n    discogs_release_id: { multiple: false },\n    discogs_label_id: { multiple: false },\n    discogs_master_release_id: { multiple: false },\n    discogs_votes: { multiple: false },\n    discogs_rating: { multiple: false },\n    replaygain_track_peak: { multiple: false },\n    replaygain_track_gain: { multiple: false },\n    replaygain_album_peak: { multiple: false },\n    replaygain_album_gain: { multiple: false },\n    replaygain_track_minmax: { multiple: false },\n    replaygain_album_minmax: { multiple: false },\n    replaygain_undo: { multiple: false },\n    description: { multiple: true },\n    longDescription: { multiple: false },\n    category: { multiple: true },\n    hdVideo: { multiple: false },\n    keywords: { multiple: true },\n    movement: { multiple: false },\n    movementIndex: { multiple: false },\n    movementTotal: { multiple: false },\n    podcastId: { multiple: false },\n    showMovement: { multiple: false },\n    stik: { multiple: false }\n};\n/**\n * @param alias Name of common tag\n * @returns {boolean|*} true if given alias is mapped as a singleton', otherwise false\n */\nfunction isSingleton(alias) {\n    return commonTags[alias] && !commonTags[alias].multiple;\n}\n/**\n * @param alias Common (generic) tag\n * @returns {boolean|*} true if given alias is a singleton or explicitly marked as unique\n */\nfunction isUnique(alias) {\n    return !commonTags[alias].multiple || commonTags[alias].unique || false;\n}\n//# sourceMappingURL=GenericTagTypes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/common/GenericTagTypes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/common/MetadataCollector.js":
/*!*********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/common/MetadataCollector.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MetadataCollector: () => (/* binding */ MetadataCollector),\n/* harmony export */   joinArtists: () => (/* binding */ joinArtists)\n/* harmony export */ });\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type.js */ \"(rsc)/./node_modules/music-metadata/lib/type.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _GenericTagTypes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GenericTagTypes.js */ \"(rsc)/./node_modules/music-metadata/lib/common/GenericTagTypes.js\");\n/* harmony import */ var _CombinedTagMapper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CombinedTagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/common/CombinedTagMapper.js\");\n/* harmony import */ var _GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GenericTagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/common/GenericTagMapper.js\");\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n/* harmony import */ var file_type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! file-type */ \"(rsc)/./node_modules/file-type/core.js\");\n/* harmony import */ var _lrc_LyricsParser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../lrc/LyricsParser.js */ \"(rsc)/./node_modules/music-metadata/lib/lrc/LyricsParser.js\");\n\n\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_1__('music-metadata:collector');\nconst TagPriority = ['matroska', 'APEv2', 'vorbis', 'ID3v2.4', 'ID3v2.3', 'ID3v2.2', 'exif', 'asf', 'iTunes', 'AIFF', 'ID3v1'];\n/**\n * Provided to the parser to uodate the metadata result.\n * Responsible for triggering async updates\n */\nclass MetadataCollector {\n    constructor(opts) {\n        this.opts = opts;\n        this.format = {\n            tagTypes: [],\n            trackInfo: []\n        };\n        this.native = {};\n        this.common = {\n            track: { no: null, of: null },\n            disk: { no: null, of: null },\n            movementIndex: { no: null, of: null }\n        };\n        this.quality = {\n            warnings: []\n        };\n        /**\n         * Keeps track of origin priority for each mapped id\n         */\n        this.commonOrigin = {};\n        /**\n         * Maps a tag type to a priority\n         */\n        this.originPriority = {};\n        this.tagMapper = new _CombinedTagMapper_js__WEBPACK_IMPORTED_MODULE_3__.CombinedTagMapper();\n        let priority = 1;\n        for (const tagType of TagPriority) {\n            this.originPriority[tagType] = priority++;\n        }\n        this.originPriority.artificial = 500; // Filled using alternative tags\n        this.originPriority.id3v1 = 600; // Consider as the worst because of the field length limit\n    }\n    /**\n     * @returns {boolean} true if one or more tags have been found\n     */\n    hasAny() {\n        return Object.keys(this.native).length > 0;\n    }\n    addStreamInfo(streamInfo) {\n        debug(`streamInfo: type=${streamInfo.type ? _type_js__WEBPACK_IMPORTED_MODULE_0__.TrackType[streamInfo.type] : '?'}, codec=${streamInfo.codecName}`);\n        this.format.trackInfo.push(streamInfo);\n    }\n    setFormat(key, value) {\n        debug(`format: ${key} = ${value}`);\n        this.format[key] = value; // as any to override readonly\n        if (this.opts?.observer) {\n            this.opts.observer({ metadata: this, tag: { type: 'format', id: key, value } });\n        }\n    }\n    async addTag(tagType, tagId, value) {\n        debug(`tag ${tagType}.${tagId} = ${value}`);\n        if (!this.native[tagType]) {\n            this.format.tagTypes.push(tagType);\n            this.native[tagType] = [];\n        }\n        this.native[tagType].push({ id: tagId, value });\n        await this.toCommon(tagType, tagId, value);\n    }\n    addWarning(warning) {\n        this.quality.warnings.push({ message: warning });\n    }\n    async postMap(tagType, tag) {\n        // Common tag (alias) found\n        // check if we need to do something special with common tag\n        // if the event has been aliased then we need to clean it before\n        // it is emitted to the user. e.g. genre (20) -> Electronic\n        switch (tag.id) {\n            case 'artist':\n                if (this.commonOrigin.artist === this.originPriority[tagType]) {\n                    // Assume the artist field is used as artists\n                    return this.postMap('artificial', { id: 'artists', value: tag.value });\n                }\n                if (!this.common.artists) {\n                    // Fill artists using artist source\n                    this.setGenericTag('artificial', { id: 'artists', value: tag.value });\n                }\n                break;\n            case 'artists':\n                if (!this.common.artist || this.commonOrigin.artist === this.originPriority.artificial) {\n                    if (!this.common.artists || this.common.artists.indexOf(tag.value) === -1) {\n                        // Fill artist using artists source\n                        const artists = (this.common.artists || []).concat([tag.value]);\n                        const value = joinArtists(artists);\n                        const artistTag = { id: 'artist', value };\n                        this.setGenericTag('artificial', artistTag);\n                    }\n                }\n                break;\n            case 'picture':\n                return this.postFixPicture(tag.value).then(picture => {\n                    if (picture !== null) {\n                        tag.value = picture;\n                        this.setGenericTag(tagType, tag);\n                    }\n                });\n            case 'totaltracks':\n                this.common.track.of = _GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_4__.CommonTagMapper.toIntOrNull(tag.value);\n                return;\n            case 'totaldiscs':\n                this.common.disk.of = _GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_4__.CommonTagMapper.toIntOrNull(tag.value);\n                return;\n            case 'movementTotal':\n                this.common.movementIndex.of = _GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_4__.CommonTagMapper.toIntOrNull(tag.value);\n                return;\n            case 'track':\n            case 'disk':\n            case 'movementIndex': {\n                const of = this.common[tag.id].of; // store of value, maybe maybe overwritten\n                this.common[tag.id] = _GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_4__.CommonTagMapper.normalizeTrack(tag.value);\n                this.common[tag.id].of = of != null ? of : this.common[tag.id].of;\n                return;\n            }\n            case 'bpm':\n            case 'year':\n            case 'originalyear':\n                tag.value = Number.parseInt(tag.value, 10);\n                break;\n            case 'date': {\n                // ToDo: be more strict on 'YYYY...'\n                const year = Number.parseInt(tag.value.substr(0, 4), 10);\n                if (!Number.isNaN(year)) {\n                    this.common.year = year;\n                }\n                break;\n            }\n            case 'discogs_label_id':\n            case 'discogs_release_id':\n            case 'discogs_master_release_id':\n            case 'discogs_artist_id':\n            case 'discogs_votes':\n                tag.value = typeof tag.value === 'string' ? Number.parseInt(tag.value, 10) : tag.value;\n                break;\n            case 'replaygain_track_gain':\n            case 'replaygain_track_peak':\n            case 'replaygain_album_gain':\n            case 'replaygain_album_peak':\n                tag.value = (0,_Util_js__WEBPACK_IMPORTED_MODULE_5__.toRatio)(tag.value);\n                break;\n            case 'replaygain_track_minmax':\n                tag.value = tag.value.split(',').map(v => Number.parseInt(v, 10));\n                break;\n            case 'replaygain_undo': {\n                const minMix = tag.value.split(',').map(v => Number.parseInt(v, 10));\n                tag.value = {\n                    leftChannel: minMix[0],\n                    rightChannel: minMix[1]\n                };\n                break;\n            }\n            case 'gapless': // iTunes gap-less flag\n            case 'compilation':\n            case 'podcast':\n            case 'showMovement':\n                tag.value = tag.value === '1' || tag.value === 1; // boolean\n                break;\n            case 'isrc': { // Only keep unique values\n                const commonTag = this.common[tag.id];\n                if (commonTag && commonTag.indexOf(tag.value) !== -1)\n                    return;\n                break;\n            }\n            case 'comment':\n                if (typeof tag.value === 'string') {\n                    tag.value = { text: tag.value };\n                }\n                if (tag.value.descriptor === 'iTunPGAP') {\n                    this.setGenericTag(tagType, { id: 'gapless', value: tag.value.text === '1' });\n                }\n                break;\n            case 'lyrics':\n                if (typeof tag.value === 'string') {\n                    tag.value = (0,_lrc_LyricsParser_js__WEBPACK_IMPORTED_MODULE_6__.parseLrc)(tag.value);\n                }\n                break;\n            default:\n            // nothing to do\n        }\n        if (tag.value !== null) {\n            this.setGenericTag(tagType, tag);\n        }\n    }\n    /**\n     * Convert native tags to common tags\n     * @returns {IAudioMetadata} Native + common tags\n     */\n    toCommonMetadata() {\n        return {\n            format: this.format,\n            native: this.native,\n            quality: this.quality,\n            common: this.common\n        };\n    }\n    /**\n     * Fix some common issues with picture object\n     * @param picture Picture\n     */\n    async postFixPicture(picture) {\n        if (picture.data && picture.data.length > 0) {\n            if (!picture.format) {\n                const fileType = await (0,file_type__WEBPACK_IMPORTED_MODULE_7__.fileTypeFromBuffer)(Uint8Array.from(picture.data)); // ToDO: remove Buffer\n                if (fileType) {\n                    picture.format = fileType.mime;\n                }\n                else {\n                    return null;\n                }\n            }\n            picture.format = picture.format.toLocaleLowerCase();\n            switch (picture.format) {\n                case 'image/jpg':\n                    picture.format = 'image/jpeg'; // ToDo: register warning\n            }\n            return picture;\n        }\n        this.addWarning(\"Empty picture tag found\");\n        return null;\n    }\n    /**\n     * Convert native tag to common tags\n     */\n    async toCommon(tagType, tagId, value) {\n        const tag = { id: tagId, value };\n        const genericTag = this.tagMapper.mapTag(tagType, tag, this);\n        if (genericTag) {\n            await this.postMap(tagType, genericTag);\n        }\n    }\n    /**\n     * Set generic tag\n     */\n    setGenericTag(tagType, tag) {\n        debug(`common.${tag.id} = ${tag.value}`);\n        const prio0 = this.commonOrigin[tag.id] || 1000;\n        const prio1 = this.originPriority[tagType];\n        if ((0,_GenericTagTypes_js__WEBPACK_IMPORTED_MODULE_2__.isSingleton)(tag.id)) {\n            if (prio1 <= prio0) {\n                this.common[tag.id] = tag.value;\n                this.commonOrigin[tag.id] = prio1;\n            }\n            else {\n                return debug(`Ignore native tag (singleton): ${tagType}.${tag.id} = ${tag.value}`);\n            }\n        }\n        else {\n            if (prio1 === prio0) {\n                if (!(0,_GenericTagTypes_js__WEBPACK_IMPORTED_MODULE_2__.isUnique)(tag.id) || this.common[tag.id].indexOf(tag.value) === -1) {\n                    this.common[tag.id].push(tag.value);\n                }\n                else {\n                    debug(`Ignore duplicate value: ${tagType}.${tag.id} = ${tag.value}`);\n                }\n                // no effect? this.commonOrigin[tag.id] = prio1;\n            }\n            else if (prio1 < prio0) {\n                this.common[tag.id] = [tag.value];\n                this.commonOrigin[tag.id] = prio1;\n            }\n            else {\n                return debug(`Ignore native tag (list): ${tagType}.${tag.id} = ${tag.value}`);\n            }\n        }\n        if (this.opts?.observer) {\n            this.opts.observer({ metadata: this, tag: { type: 'common', id: tag.id, value: tag.value } });\n        }\n        // ToDo: trigger metadata event\n    }\n}\nfunction joinArtists(artists) {\n    if (artists.length > 2) {\n        return `${artists.slice(0, artists.length - 1).join(', ')} & ${artists[artists.length - 1]}`;\n    }\n    return artists.join(' & ');\n}\n//# sourceMappingURL=MetadataCollector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2NvbW1vbi9NZXRhZGF0YUNvbGxlY3Rvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXVDO0FBQ1Q7QUFDK0I7QUFDRjtBQUNIO0FBQ3BCO0FBQ1c7QUFDRztBQUNsRCxjQUFjLGtDQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsb0JBQW9CO0FBQ3pDLG9CQUFvQixvQkFBb0I7QUFDeEMsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixvRUFBaUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEM7QUFDOUMseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGtCQUFrQiwrQ0FBUyx3QkFBd0IsVUFBVSxxQkFBcUI7QUFDcEg7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLEtBQUssSUFBSSxNQUFNO0FBQ3hDLGtDQUFrQztBQUNsQztBQUNBLGlDQUFpQyx1QkFBdUIsa0NBQWtDO0FBQzFGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixRQUFRLEdBQUcsT0FBTyxJQUFJLE1BQU07QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0Msa0JBQWtCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxrQkFBa0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsaUNBQWlDO0FBQ3pGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxpQ0FBaUM7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLHVDQUF1QyxpRUFBZTtBQUN0RDtBQUNBO0FBQ0Esc0NBQXNDLGlFQUFlO0FBQ3JEO0FBQ0E7QUFDQSwrQ0FBK0MsaUVBQWU7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQ7QUFDbkQsc0NBQXNDLGlFQUFlO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixpREFBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0Esa0RBQWtELDhDQUE4QztBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyw4REFBUTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGdCQUFnQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1Qyw2REFBa0IsaUNBQWlDO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRLElBQUksVUFBVTtBQUM5QztBQUNBO0FBQ0EsWUFBWSxnRUFBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELFFBQVEsR0FBRyxRQUFRLElBQUksVUFBVTtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2REFBUTtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsUUFBUSxHQUFHLFFBQVEsSUFBSSxVQUFVO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQsUUFBUSxHQUFHLFFBQVEsSUFBSSxVQUFVO0FBQzNGO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyx1QkFBdUIsZ0RBQWdEO0FBQ3hHO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGtCQUFrQixpREFBaUQsSUFBSSw0QkFBNEI7QUFDbkc7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2NvbW1vbi9NZXRhZGF0YUNvbGxlY3Rvci5qcz83MmJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYWNrVHlwZSB9IGZyb20gJy4uL3R5cGUuanMnO1xuaW1wb3J0IGluaXREZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5pbXBvcnQgeyBpc1NpbmdsZXRvbiwgaXNVbmlxdWUgfSBmcm9tICcuL0dlbmVyaWNUYWdUeXBlcy5qcyc7XG5pbXBvcnQgeyBDb21iaW5lZFRhZ01hcHBlciB9IGZyb20gJy4vQ29tYmluZWRUYWdNYXBwZXIuanMnO1xuaW1wb3J0IHsgQ29tbW9uVGFnTWFwcGVyIH0gZnJvbSAnLi9HZW5lcmljVGFnTWFwcGVyLmpzJztcbmltcG9ydCB7IHRvUmF0aW8gfSBmcm9tICcuL1V0aWwuanMnO1xuaW1wb3J0IHsgZmlsZVR5cGVGcm9tQnVmZmVyIH0gZnJvbSAnZmlsZS10eXBlJztcbmltcG9ydCB7IHBhcnNlTHJjIH0gZnJvbSAnLi4vbHJjL0x5cmljc1BhcnNlci5qcyc7XG5jb25zdCBkZWJ1ZyA9IGluaXREZWJ1ZygnbXVzaWMtbWV0YWRhdGE6Y29sbGVjdG9yJyk7XG5jb25zdCBUYWdQcmlvcml0eSA9IFsnbWF0cm9za2EnLCAnQVBFdjInLCAndm9yYmlzJywgJ0lEM3YyLjQnLCAnSUQzdjIuMycsICdJRDN2Mi4yJywgJ2V4aWYnLCAnYXNmJywgJ2lUdW5lcycsICdBSUZGJywgJ0lEM3YxJ107XG4vKipcbiAqIFByb3ZpZGVkIHRvIHRoZSBwYXJzZXIgdG8gdW9kYXRlIHRoZSBtZXRhZGF0YSByZXN1bHQuXG4gKiBSZXNwb25zaWJsZSBmb3IgdHJpZ2dlcmluZyBhc3luYyB1cGRhdGVzXG4gKi9cbmV4cG9ydCBjbGFzcyBNZXRhZGF0YUNvbGxlY3RvciB7XG4gICAgY29uc3RydWN0b3Iob3B0cykge1xuICAgICAgICB0aGlzLm9wdHMgPSBvcHRzO1xuICAgICAgICB0aGlzLmZvcm1hdCA9IHtcbiAgICAgICAgICAgIHRhZ1R5cGVzOiBbXSxcbiAgICAgICAgICAgIHRyYWNrSW5mbzogW11cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5uYXRpdmUgPSB7fTtcbiAgICAgICAgdGhpcy5jb21tb24gPSB7XG4gICAgICAgICAgICB0cmFjazogeyBubzogbnVsbCwgb2Y6IG51bGwgfSxcbiAgICAgICAgICAgIGRpc2s6IHsgbm86IG51bGwsIG9mOiBudWxsIH0sXG4gICAgICAgICAgICBtb3ZlbWVudEluZGV4OiB7IG5vOiBudWxsLCBvZjogbnVsbCB9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMucXVhbGl0eSA9IHtcbiAgICAgICAgICAgIHdhcm5pbmdzOiBbXVxuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogS2VlcHMgdHJhY2sgb2Ygb3JpZ2luIHByaW9yaXR5IGZvciBlYWNoIG1hcHBlZCBpZFxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jb21tb25PcmlnaW4gPSB7fTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIE1hcHMgYSB0YWcgdHlwZSB0byBhIHByaW9yaXR5XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm9yaWdpblByaW9yaXR5ID0ge307XG4gICAgICAgIHRoaXMudGFnTWFwcGVyID0gbmV3IENvbWJpbmVkVGFnTWFwcGVyKCk7XG4gICAgICAgIGxldCBwcmlvcml0eSA9IDE7XG4gICAgICAgIGZvciAoY29uc3QgdGFnVHlwZSBvZiBUYWdQcmlvcml0eSkge1xuICAgICAgICAgICAgdGhpcy5vcmlnaW5Qcmlvcml0eVt0YWdUeXBlXSA9IHByaW9yaXR5Kys7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5vcmlnaW5Qcmlvcml0eS5hcnRpZmljaWFsID0gNTAwOyAvLyBGaWxsZWQgdXNpbmcgYWx0ZXJuYXRpdmUgdGFnc1xuICAgICAgICB0aGlzLm9yaWdpblByaW9yaXR5LmlkM3YxID0gNjAwOyAvLyBDb25zaWRlciBhcyB0aGUgd29yc3QgYmVjYXVzZSBvZiB0aGUgZmllbGQgbGVuZ3RoIGxpbWl0XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSB0cnVlIGlmIG9uZSBvciBtb3JlIHRhZ3MgaGF2ZSBiZWVuIGZvdW5kXG4gICAgICovXG4gICAgaGFzQW55KCkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5uYXRpdmUpLmxlbmd0aCA+IDA7XG4gICAgfVxuICAgIGFkZFN0cmVhbUluZm8oc3RyZWFtSW5mbykge1xuICAgICAgICBkZWJ1Zyhgc3RyZWFtSW5mbzogdHlwZT0ke3N0cmVhbUluZm8udHlwZSA/IFRyYWNrVHlwZVtzdHJlYW1JbmZvLnR5cGVdIDogJz8nfSwgY29kZWM9JHtzdHJlYW1JbmZvLmNvZGVjTmFtZX1gKTtcbiAgICAgICAgdGhpcy5mb3JtYXQudHJhY2tJbmZvLnB1c2goc3RyZWFtSW5mbyk7XG4gICAgfVxuICAgIHNldEZvcm1hdChrZXksIHZhbHVlKSB7XG4gICAgICAgIGRlYnVnKGBmb3JtYXQ6ICR7a2V5fSA9ICR7dmFsdWV9YCk7XG4gICAgICAgIHRoaXMuZm9ybWF0W2tleV0gPSB2YWx1ZTsgLy8gYXMgYW55IHRvIG92ZXJyaWRlIHJlYWRvbmx5XG4gICAgICAgIGlmICh0aGlzLm9wdHM/Lm9ic2VydmVyKSB7XG4gICAgICAgICAgICB0aGlzLm9wdHMub2JzZXJ2ZXIoeyBtZXRhZGF0YTogdGhpcywgdGFnOiB7IHR5cGU6ICdmb3JtYXQnLCBpZDoga2V5LCB2YWx1ZSB9IH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIGFkZFRhZyh0YWdUeXBlLCB0YWdJZCwgdmFsdWUpIHtcbiAgICAgICAgZGVidWcoYHRhZyAke3RhZ1R5cGV9LiR7dGFnSWR9ID0gJHt2YWx1ZX1gKTtcbiAgICAgICAgaWYgKCF0aGlzLm5hdGl2ZVt0YWdUeXBlXSkge1xuICAgICAgICAgICAgdGhpcy5mb3JtYXQudGFnVHlwZXMucHVzaCh0YWdUeXBlKTtcbiAgICAgICAgICAgIHRoaXMubmF0aXZlW3RhZ1R5cGVdID0gW107XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5uYXRpdmVbdGFnVHlwZV0ucHVzaCh7IGlkOiB0YWdJZCwgdmFsdWUgfSk7XG4gICAgICAgIGF3YWl0IHRoaXMudG9Db21tb24odGFnVHlwZSwgdGFnSWQsIHZhbHVlKTtcbiAgICB9XG4gICAgYWRkV2FybmluZyh3YXJuaW5nKSB7XG4gICAgICAgIHRoaXMucXVhbGl0eS53YXJuaW5ncy5wdXNoKHsgbWVzc2FnZTogd2FybmluZyB9KTtcbiAgICB9XG4gICAgYXN5bmMgcG9zdE1hcCh0YWdUeXBlLCB0YWcpIHtcbiAgICAgICAgLy8gQ29tbW9uIHRhZyAoYWxpYXMpIGZvdW5kXG4gICAgICAgIC8vIGNoZWNrIGlmIHdlIG5lZWQgdG8gZG8gc29tZXRoaW5nIHNwZWNpYWwgd2l0aCBjb21tb24gdGFnXG4gICAgICAgIC8vIGlmIHRoZSBldmVudCBoYXMgYmVlbiBhbGlhc2VkIHRoZW4gd2UgbmVlZCB0byBjbGVhbiBpdCBiZWZvcmVcbiAgICAgICAgLy8gaXQgaXMgZW1pdHRlZCB0byB0aGUgdXNlci4gZS5nLiBnZW5yZSAoMjApIC0+IEVsZWN0cm9uaWNcbiAgICAgICAgc3dpdGNoICh0YWcuaWQpIHtcbiAgICAgICAgICAgIGNhc2UgJ2FydGlzdCc6XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY29tbW9uT3JpZ2luLmFydGlzdCA9PT0gdGhpcy5vcmlnaW5Qcmlvcml0eVt0YWdUeXBlXSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBBc3N1bWUgdGhlIGFydGlzdCBmaWVsZCBpcyB1c2VkIGFzIGFydGlzdHNcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucG9zdE1hcCgnYXJ0aWZpY2lhbCcsIHsgaWQ6ICdhcnRpc3RzJywgdmFsdWU6IHRhZy52YWx1ZSB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmNvbW1vbi5hcnRpc3RzKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEZpbGwgYXJ0aXN0cyB1c2luZyBhcnRpc3Qgc291cmNlXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0R2VuZXJpY1RhZygnYXJ0aWZpY2lhbCcsIHsgaWQ6ICdhcnRpc3RzJywgdmFsdWU6IHRhZy52YWx1ZSB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdhcnRpc3RzJzpcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuY29tbW9uLmFydGlzdCB8fCB0aGlzLmNvbW1vbk9yaWdpbi5hcnRpc3QgPT09IHRoaXMub3JpZ2luUHJpb3JpdHkuYXJ0aWZpY2lhbCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuY29tbW9uLmFydGlzdHMgfHwgdGhpcy5jb21tb24uYXJ0aXN0cy5pbmRleE9mKHRhZy52YWx1ZSkgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBGaWxsIGFydGlzdCB1c2luZyBhcnRpc3RzIHNvdXJjZVxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYXJ0aXN0cyA9ICh0aGlzLmNvbW1vbi5hcnRpc3RzIHx8IFtdKS5jb25jYXQoW3RhZy52YWx1ZV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBqb2luQXJ0aXN0cyhhcnRpc3RzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFydGlzdFRhZyA9IHsgaWQ6ICdhcnRpc3QnLCB2YWx1ZSB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRHZW5lcmljVGFnKCdhcnRpZmljaWFsJywgYXJ0aXN0VGFnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3BpY3R1cmUnOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnBvc3RGaXhQaWN0dXJlKHRhZy52YWx1ZSkudGhlbihwaWN0dXJlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBpY3R1cmUgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhZy52YWx1ZSA9IHBpY3R1cmU7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldEdlbmVyaWNUYWcodGFnVHlwZSwgdGFnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY2FzZSAndG90YWx0cmFja3MnOlxuICAgICAgICAgICAgICAgIHRoaXMuY29tbW9uLnRyYWNrLm9mID0gQ29tbW9uVGFnTWFwcGVyLnRvSW50T3JOdWxsKHRhZy52YWx1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgY2FzZSAndG90YWxkaXNjcyc6XG4gICAgICAgICAgICAgICAgdGhpcy5jb21tb24uZGlzay5vZiA9IENvbW1vblRhZ01hcHBlci50b0ludE9yTnVsbCh0YWcudmFsdWUpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIGNhc2UgJ21vdmVtZW50VG90YWwnOlxuICAgICAgICAgICAgICAgIHRoaXMuY29tbW9uLm1vdmVtZW50SW5kZXgub2YgPSBDb21tb25UYWdNYXBwZXIudG9JbnRPck51bGwodGFnLnZhbHVlKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBjYXNlICd0cmFjayc6XG4gICAgICAgICAgICBjYXNlICdkaXNrJzpcbiAgICAgICAgICAgIGNhc2UgJ21vdmVtZW50SW5kZXgnOiB7XG4gICAgICAgICAgICAgICAgY29uc3Qgb2YgPSB0aGlzLmNvbW1vblt0YWcuaWRdLm9mOyAvLyBzdG9yZSBvZiB2YWx1ZSwgbWF5YmUgbWF5YmUgb3ZlcndyaXR0ZW5cbiAgICAgICAgICAgICAgICB0aGlzLmNvbW1vblt0YWcuaWRdID0gQ29tbW9uVGFnTWFwcGVyLm5vcm1hbGl6ZVRyYWNrKHRhZy52YWx1ZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jb21tb25bdGFnLmlkXS5vZiA9IG9mICE9IG51bGwgPyBvZiA6IHRoaXMuY29tbW9uW3RhZy5pZF0ub2Y7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FzZSAnYnBtJzpcbiAgICAgICAgICAgIGNhc2UgJ3llYXInOlxuICAgICAgICAgICAgY2FzZSAnb3JpZ2luYWx5ZWFyJzpcbiAgICAgICAgICAgICAgICB0YWcudmFsdWUgPSBOdW1iZXIucGFyc2VJbnQodGFnLnZhbHVlLCAxMCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdkYXRlJzoge1xuICAgICAgICAgICAgICAgIC8vIFRvRG86IGJlIG1vcmUgc3RyaWN0IG9uICdZWVlZLi4uJ1xuICAgICAgICAgICAgICAgIGNvbnN0IHllYXIgPSBOdW1iZXIucGFyc2VJbnQodGFnLnZhbHVlLnN1YnN0cigwLCA0KSwgMTApO1xuICAgICAgICAgICAgICAgIGlmICghTnVtYmVyLmlzTmFOKHllYXIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29tbW9uLnllYXIgPSB5ZWFyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ2Rpc2NvZ3NfbGFiZWxfaWQnOlxuICAgICAgICAgICAgY2FzZSAnZGlzY29nc19yZWxlYXNlX2lkJzpcbiAgICAgICAgICAgIGNhc2UgJ2Rpc2NvZ3NfbWFzdGVyX3JlbGVhc2VfaWQnOlxuICAgICAgICAgICAgY2FzZSAnZGlzY29nc19hcnRpc3RfaWQnOlxuICAgICAgICAgICAgY2FzZSAnZGlzY29nc192b3Rlcyc6XG4gICAgICAgICAgICAgICAgdGFnLnZhbHVlID0gdHlwZW9mIHRhZy52YWx1ZSA9PT0gJ3N0cmluZycgPyBOdW1iZXIucGFyc2VJbnQodGFnLnZhbHVlLCAxMCkgOiB0YWcudmFsdWU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdyZXBsYXlnYWluX3RyYWNrX2dhaW4nOlxuICAgICAgICAgICAgY2FzZSAncmVwbGF5Z2Fpbl90cmFja19wZWFrJzpcbiAgICAgICAgICAgIGNhc2UgJ3JlcGxheWdhaW5fYWxidW1fZ2Fpbic6XG4gICAgICAgICAgICBjYXNlICdyZXBsYXlnYWluX2FsYnVtX3BlYWsnOlxuICAgICAgICAgICAgICAgIHRhZy52YWx1ZSA9IHRvUmF0aW8odGFnLnZhbHVlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3JlcGxheWdhaW5fdHJhY2tfbWlubWF4JzpcbiAgICAgICAgICAgICAgICB0YWcudmFsdWUgPSB0YWcudmFsdWUuc3BsaXQoJywnKS5tYXAodiA9PiBOdW1iZXIucGFyc2VJbnQodiwgMTApKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3JlcGxheWdhaW5fdW5kbyc6IHtcbiAgICAgICAgICAgICAgICBjb25zdCBtaW5NaXggPSB0YWcudmFsdWUuc3BsaXQoJywnKS5tYXAodiA9PiBOdW1iZXIucGFyc2VJbnQodiwgMTApKTtcbiAgICAgICAgICAgICAgICB0YWcudmFsdWUgPSB7XG4gICAgICAgICAgICAgICAgICAgIGxlZnRDaGFubmVsOiBtaW5NaXhbMF0sXG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0Q2hhbm5lbDogbWluTWl4WzFdXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ2dhcGxlc3MnOiAvLyBpVHVuZXMgZ2FwLWxlc3MgZmxhZ1xuICAgICAgICAgICAgY2FzZSAnY29tcGlsYXRpb24nOlxuICAgICAgICAgICAgY2FzZSAncG9kY2FzdCc6XG4gICAgICAgICAgICBjYXNlICdzaG93TW92ZW1lbnQnOlxuICAgICAgICAgICAgICAgIHRhZy52YWx1ZSA9IHRhZy52YWx1ZSA9PT0gJzEnIHx8IHRhZy52YWx1ZSA9PT0gMTsgLy8gYm9vbGVhblxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnaXNyYyc6IHsgLy8gT25seSBrZWVwIHVuaXF1ZSB2YWx1ZXNcbiAgICAgICAgICAgICAgICBjb25zdCBjb21tb25UYWcgPSB0aGlzLmNvbW1vblt0YWcuaWRdO1xuICAgICAgICAgICAgICAgIGlmIChjb21tb25UYWcgJiYgY29tbW9uVGFnLmluZGV4T2YodGFnLnZhbHVlKSAhPT0gLTEpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ2NvbW1lbnQnOlxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGFnLnZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgICAgICB0YWcudmFsdWUgPSB7IHRleHQ6IHRhZy52YWx1ZSB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodGFnLnZhbHVlLmRlc2NyaXB0b3IgPT09ICdpVHVuUEdBUCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRHZW5lcmljVGFnKHRhZ1R5cGUsIHsgaWQ6ICdnYXBsZXNzJywgdmFsdWU6IHRhZy52YWx1ZS50ZXh0ID09PSAnMScgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnbHlyaWNzJzpcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRhZy52YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAgdGFnLnZhbHVlID0gcGFyc2VMcmModGFnLnZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgLy8gbm90aGluZyB0byBkb1xuICAgICAgICB9XG4gICAgICAgIGlmICh0YWcudmFsdWUgIT09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0R2VuZXJpY1RhZyh0YWdUeXBlLCB0YWcpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENvbnZlcnQgbmF0aXZlIHRhZ3MgdG8gY29tbW9uIHRhZ3NcbiAgICAgKiBAcmV0dXJucyB7SUF1ZGlvTWV0YWRhdGF9IE5hdGl2ZSArIGNvbW1vbiB0YWdzXG4gICAgICovXG4gICAgdG9Db21tb25NZXRhZGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGZvcm1hdDogdGhpcy5mb3JtYXQsXG4gICAgICAgICAgICBuYXRpdmU6IHRoaXMubmF0aXZlLFxuICAgICAgICAgICAgcXVhbGl0eTogdGhpcy5xdWFsaXR5LFxuICAgICAgICAgICAgY29tbW9uOiB0aGlzLmNvbW1vblxuICAgICAgICB9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGaXggc29tZSBjb21tb24gaXNzdWVzIHdpdGggcGljdHVyZSBvYmplY3RcbiAgICAgKiBAcGFyYW0gcGljdHVyZSBQaWN0dXJlXG4gICAgICovXG4gICAgYXN5bmMgcG9zdEZpeFBpY3R1cmUocGljdHVyZSkge1xuICAgICAgICBpZiAocGljdHVyZS5kYXRhICYmIHBpY3R1cmUuZGF0YS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBpZiAoIXBpY3R1cmUuZm9ybWF0KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmlsZVR5cGUgPSBhd2FpdCBmaWxlVHlwZUZyb21CdWZmZXIoVWludDhBcnJheS5mcm9tKHBpY3R1cmUuZGF0YSkpOyAvLyBUb0RPOiByZW1vdmUgQnVmZmVyXG4gICAgICAgICAgICAgICAgaWYgKGZpbGVUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIHBpY3R1cmUuZm9ybWF0ID0gZmlsZVR5cGUubWltZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBpY3R1cmUuZm9ybWF0ID0gcGljdHVyZS5mb3JtYXQudG9Mb2NhbGVMb3dlckNhc2UoKTtcbiAgICAgICAgICAgIHN3aXRjaCAocGljdHVyZS5mb3JtYXQpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdpbWFnZS9qcGcnOlxuICAgICAgICAgICAgICAgICAgICBwaWN0dXJlLmZvcm1hdCA9ICdpbWFnZS9qcGVnJzsgLy8gVG9EbzogcmVnaXN0ZXIgd2FybmluZ1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHBpY3R1cmU7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hZGRXYXJuaW5nKFwiRW1wdHkgcGljdHVyZSB0YWcgZm91bmRcIik7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0IG5hdGl2ZSB0YWcgdG8gY29tbW9uIHRhZ3NcbiAgICAgKi9cbiAgICBhc3luYyB0b0NvbW1vbih0YWdUeXBlLCB0YWdJZCwgdmFsdWUpIHtcbiAgICAgICAgY29uc3QgdGFnID0geyBpZDogdGFnSWQsIHZhbHVlIH07XG4gICAgICAgIGNvbnN0IGdlbmVyaWNUYWcgPSB0aGlzLnRhZ01hcHBlci5tYXBUYWcodGFnVHlwZSwgdGFnLCB0aGlzKTtcbiAgICAgICAgaWYgKGdlbmVyaWNUYWcpIHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMucG9zdE1hcCh0YWdUeXBlLCBnZW5lcmljVGFnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXQgZ2VuZXJpYyB0YWdcbiAgICAgKi9cbiAgICBzZXRHZW5lcmljVGFnKHRhZ1R5cGUsIHRhZykge1xuICAgICAgICBkZWJ1ZyhgY29tbW9uLiR7dGFnLmlkfSA9ICR7dGFnLnZhbHVlfWApO1xuICAgICAgICBjb25zdCBwcmlvMCA9IHRoaXMuY29tbW9uT3JpZ2luW3RhZy5pZF0gfHwgMTAwMDtcbiAgICAgICAgY29uc3QgcHJpbzEgPSB0aGlzLm9yaWdpblByaW9yaXR5W3RhZ1R5cGVdO1xuICAgICAgICBpZiAoaXNTaW5nbGV0b24odGFnLmlkKSkge1xuICAgICAgICAgICAgaWYgKHByaW8xIDw9IHByaW8wKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb21tb25bdGFnLmlkXSA9IHRhZy52YWx1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbW1vbk9yaWdpblt0YWcuaWRdID0gcHJpbzE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZGVidWcoYElnbm9yZSBuYXRpdmUgdGFnIChzaW5nbGV0b24pOiAke3RhZ1R5cGV9LiR7dGFnLmlkfSA9ICR7dGFnLnZhbHVlfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKHByaW8xID09PSBwcmlvMCkge1xuICAgICAgICAgICAgICAgIGlmICghaXNVbmlxdWUodGFnLmlkKSB8fCB0aGlzLmNvbW1vblt0YWcuaWRdLmluZGV4T2YodGFnLnZhbHVlKSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb21tb25bdGFnLmlkXS5wdXNoKHRhZy52YWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBkZWJ1ZyhgSWdub3JlIGR1cGxpY2F0ZSB2YWx1ZTogJHt0YWdUeXBlfS4ke3RhZy5pZH0gPSAke3RhZy52YWx1ZX1gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gbm8gZWZmZWN0PyB0aGlzLmNvbW1vbk9yaWdpblt0YWcuaWRdID0gcHJpbzE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChwcmlvMSA8IHByaW8wKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb21tb25bdGFnLmlkXSA9IFt0YWcudmFsdWVdO1xuICAgICAgICAgICAgICAgIHRoaXMuY29tbW9uT3JpZ2luW3RhZy5pZF0gPSBwcmlvMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBkZWJ1ZyhgSWdub3JlIG5hdGl2ZSB0YWcgKGxpc3QpOiAke3RhZ1R5cGV9LiR7dGFnLmlkfSA9ICR7dGFnLnZhbHVlfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLm9wdHM/Lm9ic2VydmVyKSB7XG4gICAgICAgICAgICB0aGlzLm9wdHMub2JzZXJ2ZXIoeyBtZXRhZGF0YTogdGhpcywgdGFnOiB7IHR5cGU6ICdjb21tb24nLCBpZDogdGFnLmlkLCB2YWx1ZTogdGFnLnZhbHVlIH0gfSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gVG9EbzogdHJpZ2dlciBtZXRhZGF0YSBldmVudFxuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBqb2luQXJ0aXN0cyhhcnRpc3RzKSB7XG4gICAgaWYgKGFydGlzdHMubGVuZ3RoID4gMikge1xuICAgICAgICByZXR1cm4gYCR7YXJ0aXN0cy5zbGljZSgwLCBhcnRpc3RzLmxlbmd0aCAtIDEpLmpvaW4oJywgJyl9ICYgJHthcnRpc3RzW2FydGlzdHMubGVuZ3RoIC0gMV19YDtcbiAgICB9XG4gICAgcmV0dXJuIGFydGlzdHMuam9pbignICYgJyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NZXRhZGF0YUNvbGxlY3Rvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/common/MetadataCollector.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/common/Util.js":
/*!********************************************************!*\
  !*** ./node_modules/music-metadata/lib/common/Util.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a2hex: () => (/* binding */ a2hex),\n/* harmony export */   dbToRatio: () => (/* binding */ dbToRatio),\n/* harmony export */   decodeString: () => (/* binding */ decodeString),\n/* harmony export */   findZero: () => (/* binding */ findZero),\n/* harmony export */   getBit: () => (/* binding */ getBit),\n/* harmony export */   getBitAllignedNumber: () => (/* binding */ getBitAllignedNumber),\n/* harmony export */   isBitSet: () => (/* binding */ isBitSet),\n/* harmony export */   ratioToDb: () => (/* binding */ ratioToDb),\n/* harmony export */   stripNulls: () => (/* binding */ stripNulls),\n/* harmony export */   toRatio: () => (/* binding */ toRatio),\n/* harmony export */   trimRightNull: () => (/* binding */ trimRightNull)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\nfunction getBit(buf, off, bit) {\n    return (buf[off] & (1 << bit)) !== 0;\n}\n/**\n * Found delimiting zero in uint8Array\n * @param uint8Array Uint8Array to find the zero delimiter in\n * @param start Offset in uint8Array\n * @param end Last position to parse in uint8Array\n * @param encoding The string encoding used\n * @return Absolute position on uint8Array where zero found\n */\nfunction findZero(uint8Array, start, end, encoding) {\n    let i = start;\n    if (encoding === 'utf-16le') {\n        while (uint8Array[i] !== 0 || uint8Array[i + 1] !== 0) {\n            if (i >= end)\n                return end;\n            i += 2;\n        }\n        return i;\n    }\n    while (uint8Array[i] !== 0) {\n        if (i >= end)\n            return end;\n        i++;\n    }\n    return i;\n}\nfunction trimRightNull(x) {\n    const pos0 = x.indexOf('\\0');\n    return pos0 === -1 ? x : x.substr(0, pos0);\n}\nfunction swapBytes(uint8Array) {\n    const l = uint8Array.length;\n    if ((l & 1) !== 0)\n        throw new _ParseError_js__WEBPACK_IMPORTED_MODULE_1__.FieldDecodingError('Buffer length must be even');\n    for (let i = 0; i < l; i += 2) {\n        const a = uint8Array[i];\n        uint8Array[i] = uint8Array[i + 1];\n        uint8Array[i + 1] = a;\n    }\n    return uint8Array;\n}\n/**\n * Decode string\n */\nfunction decodeString(uint8Array, encoding) {\n    // annoying workaround for a double BOM issue\n    // https://github.com/leetreveil/musicmetadata/issues/84\n    if (uint8Array[0] === 0xFF && uint8Array[1] === 0xFE) { // little endian\n        return decodeString(uint8Array.subarray(2), encoding);\n    }\n    if (encoding === 'utf-16le' && uint8Array[0] === 0xFE && uint8Array[1] === 0xFF) {\n        // BOM, indicating big endian decoding\n        if ((uint8Array.length & 1) !== 0)\n            throw new _ParseError_js__WEBPACK_IMPORTED_MODULE_1__.FieldDecodingError('Expected even number of octets for 16-bit unicode string');\n        return decodeString(swapBytes(uint8Array), encoding);\n    }\n    return new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(uint8Array.length, encoding).get(uint8Array, 0);\n}\nfunction stripNulls(str) {\n    str = str.replace(/^\\x00+/g, '');\n    str = str.replace(/\\x00+$/g, '');\n    return str;\n}\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param source Byte buffer\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = lsb\n * @param len Length of number in bits\n * @return Decoded bit aligned number\n */\nfunction getBitAllignedNumber(source, byteOffset, bitOffset, len) {\n    const byteOff = byteOffset + ~~(bitOffset / 8);\n    const bitOff = bitOffset % 8;\n    let value = source[byteOff];\n    value &= 0xff >> bitOff;\n    const bitsRead = 8 - bitOff;\n    const bitsLeft = len - bitsRead;\n    if (bitsLeft < 0) {\n        value >>= (8 - bitOff - len);\n    }\n    else if (bitsLeft > 0) {\n        value <<= bitsLeft;\n        value |= getBitAllignedNumber(source, byteOffset, bitOffset + bitsRead, bitsLeft);\n    }\n    return value;\n}\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param source Byte Uint8Array\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = most significant bit, 7 is the least significant bit\n * @return True if bit is set\n */\nfunction isBitSet(source, byteOffset, bitOffset) {\n    return getBitAllignedNumber(source, byteOffset, bitOffset, 1) === 1;\n}\nfunction a2hex(str) {\n    const arr = [];\n    for (let i = 0, l = str.length; i < l; i++) {\n        const hex = Number(str.charCodeAt(i)).toString(16);\n        arr.push(hex.length === 1 ? `0${hex}` : hex);\n    }\n    return arr.join(' ');\n}\n/**\n * Convert power ratio to DB\n * ratio: [0..1]\n */\nfunction ratioToDb(ratio) {\n    return 10 * Math.log10(ratio);\n}\n/**\n * Convert dB to ratio\n * db Decibels\n */\nfunction dbToRatio(dB) {\n    return 10 ** (dB / 10);\n}\n/**\n * Convert replay gain to ratio and Decibel\n * @param value string holding a ratio like '0.034' or '-7.54 dB'\n */\nfunction toRatio(value) {\n    const ps = value.split(' ').map(p => p.trim().toLowerCase());\n    // @ts-ignore\n    if (ps.length >= 1) {\n        const v = Number.parseFloat(ps[0]);\n        return ps.length === 2 && ps[1] === 'db' ? {\n            dB: v,\n            ratio: dbToRatio(v)\n        } : {\n            dB: ratioToDb(v),\n            ratio: v\n        };\n    }\n}\n//# sourceMappingURL=Util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2NvbW1vbi9VdGlsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBeUM7QUFDYTtBQUMvQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDhEQUFrQjtBQUNwQyxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw4REFBa0I7QUFDeEM7QUFDQTtBQUNBLGVBQWUsbURBQVU7QUFDekI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBLG9DQUFvQyxPQUFPO0FBQzNDO0FBQ0Esd0NBQXdDLElBQUk7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2NvbW1vbi9VdGlsLmpzP2NlMDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RyaW5nVHlwZSB9IGZyb20gJ3Rva2VuLXR5cGVzJztcbmltcG9ydCB7IEZpZWxkRGVjb2RpbmdFcnJvciB9IGZyb20gJy4uL1BhcnNlRXJyb3IuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJpdChidWYsIG9mZiwgYml0KSB7XG4gICAgcmV0dXJuIChidWZbb2ZmXSAmICgxIDw8IGJpdCkpICE9PSAwO1xufVxuLyoqXG4gKiBGb3VuZCBkZWxpbWl0aW5nIHplcm8gaW4gdWludDhBcnJheVxuICogQHBhcmFtIHVpbnQ4QXJyYXkgVWludDhBcnJheSB0byBmaW5kIHRoZSB6ZXJvIGRlbGltaXRlciBpblxuICogQHBhcmFtIHN0YXJ0IE9mZnNldCBpbiB1aW50OEFycmF5XG4gKiBAcGFyYW0gZW5kIExhc3QgcG9zaXRpb24gdG8gcGFyc2UgaW4gdWludDhBcnJheVxuICogQHBhcmFtIGVuY29kaW5nIFRoZSBzdHJpbmcgZW5jb2RpbmcgdXNlZFxuICogQHJldHVybiBBYnNvbHV0ZSBwb3NpdGlvbiBvbiB1aW50OEFycmF5IHdoZXJlIHplcm8gZm91bmRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZpbmRaZXJvKHVpbnQ4QXJyYXksIHN0YXJ0LCBlbmQsIGVuY29kaW5nKSB7XG4gICAgbGV0IGkgPSBzdGFydDtcbiAgICBpZiAoZW5jb2RpbmcgPT09ICd1dGYtMTZsZScpIHtcbiAgICAgICAgd2hpbGUgKHVpbnQ4QXJyYXlbaV0gIT09IDAgfHwgdWludDhBcnJheVtpICsgMV0gIT09IDApIHtcbiAgICAgICAgICAgIGlmIChpID49IGVuZClcbiAgICAgICAgICAgICAgICByZXR1cm4gZW5kO1xuICAgICAgICAgICAgaSArPSAyO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpO1xuICAgIH1cbiAgICB3aGlsZSAodWludDhBcnJheVtpXSAhPT0gMCkge1xuICAgICAgICBpZiAoaSA+PSBlbmQpXG4gICAgICAgICAgICByZXR1cm4gZW5kO1xuICAgICAgICBpKys7XG4gICAgfVxuICAgIHJldHVybiBpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRyaW1SaWdodE51bGwoeCkge1xuICAgIGNvbnN0IHBvczAgPSB4LmluZGV4T2YoJ1xcMCcpO1xuICAgIHJldHVybiBwb3MwID09PSAtMSA/IHggOiB4LnN1YnN0cigwLCBwb3MwKTtcbn1cbmZ1bmN0aW9uIHN3YXBCeXRlcyh1aW50OEFycmF5KSB7XG4gICAgY29uc3QgbCA9IHVpbnQ4QXJyYXkubGVuZ3RoO1xuICAgIGlmICgobCAmIDEpICE9PSAwKVxuICAgICAgICB0aHJvdyBuZXcgRmllbGREZWNvZGluZ0Vycm9yKCdCdWZmZXIgbGVuZ3RoIG11c3QgYmUgZXZlbicpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbDsgaSArPSAyKSB7XG4gICAgICAgIGNvbnN0IGEgPSB1aW50OEFycmF5W2ldO1xuICAgICAgICB1aW50OEFycmF5W2ldID0gdWludDhBcnJheVtpICsgMV07XG4gICAgICAgIHVpbnQ4QXJyYXlbaSArIDFdID0gYTtcbiAgICB9XG4gICAgcmV0dXJuIHVpbnQ4QXJyYXk7XG59XG4vKipcbiAqIERlY29kZSBzdHJpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZyh1aW50OEFycmF5LCBlbmNvZGluZykge1xuICAgIC8vIGFubm95aW5nIHdvcmthcm91bmQgZm9yIGEgZG91YmxlIEJPTSBpc3N1ZVxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9sZWV0cmV2ZWlsL211c2ljbWV0YWRhdGEvaXNzdWVzLzg0XG4gICAgaWYgKHVpbnQ4QXJyYXlbMF0gPT09IDB4RkYgJiYgdWludDhBcnJheVsxXSA9PT0gMHhGRSkgeyAvLyBsaXR0bGUgZW5kaWFuXG4gICAgICAgIHJldHVybiBkZWNvZGVTdHJpbmcodWludDhBcnJheS5zdWJhcnJheSgyKSwgZW5jb2RpbmcpO1xuICAgIH1cbiAgICBpZiAoZW5jb2RpbmcgPT09ICd1dGYtMTZsZScgJiYgdWludDhBcnJheVswXSA9PT0gMHhGRSAmJiB1aW50OEFycmF5WzFdID09PSAweEZGKSB7XG4gICAgICAgIC8vIEJPTSwgaW5kaWNhdGluZyBiaWcgZW5kaWFuIGRlY29kaW5nXG4gICAgICAgIGlmICgodWludDhBcnJheS5sZW5ndGggJiAxKSAhPT0gMClcbiAgICAgICAgICAgIHRocm93IG5ldyBGaWVsZERlY29kaW5nRXJyb3IoJ0V4cGVjdGVkIGV2ZW4gbnVtYmVyIG9mIG9jdGV0cyBmb3IgMTYtYml0IHVuaWNvZGUgc3RyaW5nJyk7XG4gICAgICAgIHJldHVybiBkZWNvZGVTdHJpbmcoc3dhcEJ5dGVzKHVpbnQ4QXJyYXkpLCBlbmNvZGluZyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgU3RyaW5nVHlwZSh1aW50OEFycmF5Lmxlbmd0aCwgZW5jb2RpbmcpLmdldCh1aW50OEFycmF5LCAwKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzdHJpcE51bGxzKHN0cikge1xuICAgIHN0ciA9IHN0ci5yZXBsYWNlKC9eXFx4MDArL2csICcnKTtcbiAgICBzdHIgPSBzdHIucmVwbGFjZSgvXFx4MDArJC9nLCAnJyk7XG4gICAgcmV0dXJuIHN0cjtcbn1cbi8qKlxuICogUmVhZCBiaXQtYWxpZ25lZCBudW1iZXIgc3RhcnQgZnJvbSBidWZmZXJcbiAqIFRvdGFsIG9mZnNldCBpbiBiaXRzID0gYnl0ZU9mZnNldCAqIDggKyBiaXRPZmZzZXRcbiAqIEBwYXJhbSBzb3VyY2UgQnl0ZSBidWZmZXJcbiAqIEBwYXJhbSBieXRlT2Zmc2V0IFN0YXJ0aW5nIG9mZnNldCBpbiBieXRlc1xuICogQHBhcmFtIGJpdE9mZnNldCBTdGFydGluZyBvZmZzZXQgaW4gYml0czogMCA9IGxzYlxuICogQHBhcmFtIGxlbiBMZW5ndGggb2YgbnVtYmVyIGluIGJpdHNcbiAqIEByZXR1cm4gRGVjb2RlZCBiaXQgYWxpZ25lZCBudW1iZXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJpdEFsbGlnbmVkTnVtYmVyKHNvdXJjZSwgYnl0ZU9mZnNldCwgYml0T2Zmc2V0LCBsZW4pIHtcbiAgICBjb25zdCBieXRlT2ZmID0gYnl0ZU9mZnNldCArIH5+KGJpdE9mZnNldCAvIDgpO1xuICAgIGNvbnN0IGJpdE9mZiA9IGJpdE9mZnNldCAlIDg7XG4gICAgbGV0IHZhbHVlID0gc291cmNlW2J5dGVPZmZdO1xuICAgIHZhbHVlICY9IDB4ZmYgPj4gYml0T2ZmO1xuICAgIGNvbnN0IGJpdHNSZWFkID0gOCAtIGJpdE9mZjtcbiAgICBjb25zdCBiaXRzTGVmdCA9IGxlbiAtIGJpdHNSZWFkO1xuICAgIGlmIChiaXRzTGVmdCA8IDApIHtcbiAgICAgICAgdmFsdWUgPj49ICg4IC0gYml0T2ZmIC0gbGVuKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoYml0c0xlZnQgPiAwKSB7XG4gICAgICAgIHZhbHVlIDw8PSBiaXRzTGVmdDtcbiAgICAgICAgdmFsdWUgfD0gZ2V0Qml0QWxsaWduZWROdW1iZXIoc291cmNlLCBieXRlT2Zmc2V0LCBiaXRPZmZzZXQgKyBiaXRzUmVhZCwgYml0c0xlZnQpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG59XG4vKipcbiAqIFJlYWQgYml0LWFsaWduZWQgbnVtYmVyIHN0YXJ0IGZyb20gYnVmZmVyXG4gKiBUb3RhbCBvZmZzZXQgaW4gYml0cyA9IGJ5dGVPZmZzZXQgKiA4ICsgYml0T2Zmc2V0XG4gKiBAcGFyYW0gc291cmNlIEJ5dGUgVWludDhBcnJheVxuICogQHBhcmFtIGJ5dGVPZmZzZXQgU3RhcnRpbmcgb2Zmc2V0IGluIGJ5dGVzXG4gKiBAcGFyYW0gYml0T2Zmc2V0IFN0YXJ0aW5nIG9mZnNldCBpbiBiaXRzOiAwID0gbW9zdCBzaWduaWZpY2FudCBiaXQsIDcgaXMgdGhlIGxlYXN0IHNpZ25pZmljYW50IGJpdFxuICogQHJldHVybiBUcnVlIGlmIGJpdCBpcyBzZXRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQml0U2V0KHNvdXJjZSwgYnl0ZU9mZnNldCwgYml0T2Zmc2V0KSB7XG4gICAgcmV0dXJuIGdldEJpdEFsbGlnbmVkTnVtYmVyKHNvdXJjZSwgYnl0ZU9mZnNldCwgYml0T2Zmc2V0LCAxKSA9PT0gMTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhMmhleChzdHIpIHtcbiAgICBjb25zdCBhcnIgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IHN0ci5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgY29uc3QgaGV4ID0gTnVtYmVyKHN0ci5jaGFyQ29kZUF0KGkpKS50b1N0cmluZygxNik7XG4gICAgICAgIGFyci5wdXNoKGhleC5sZW5ndGggPT09IDEgPyBgMCR7aGV4fWAgOiBoZXgpO1xuICAgIH1cbiAgICByZXR1cm4gYXJyLmpvaW4oJyAnKTtcbn1cbi8qKlxuICogQ29udmVydCBwb3dlciByYXRpbyB0byBEQlxuICogcmF0aW86IFswLi4xXVxuICovXG5leHBvcnQgZnVuY3Rpb24gcmF0aW9Ub0RiKHJhdGlvKSB7XG4gICAgcmV0dXJuIDEwICogTWF0aC5sb2cxMChyYXRpbyk7XG59XG4vKipcbiAqIENvbnZlcnQgZEIgdG8gcmF0aW9cbiAqIGRiIERlY2liZWxzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkYlRvUmF0aW8oZEIpIHtcbiAgICByZXR1cm4gMTAgKiogKGRCIC8gMTApO1xufVxuLyoqXG4gKiBDb252ZXJ0IHJlcGxheSBnYWluIHRvIHJhdGlvIGFuZCBEZWNpYmVsXG4gKiBAcGFyYW0gdmFsdWUgc3RyaW5nIGhvbGRpbmcgYSByYXRpbyBsaWtlICcwLjAzNCcgb3IgJy03LjU0IGRCJ1xuICovXG5leHBvcnQgZnVuY3Rpb24gdG9SYXRpbyh2YWx1ZSkge1xuICAgIGNvbnN0IHBzID0gdmFsdWUuc3BsaXQoJyAnKS5tYXAocCA9PiBwLnRyaW0oKS50b0xvd2VyQ2FzZSgpKTtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgaWYgKHBzLmxlbmd0aCA+PSAxKSB7XG4gICAgICAgIGNvbnN0IHYgPSBOdW1iZXIucGFyc2VGbG9hdChwc1swXSk7XG4gICAgICAgIHJldHVybiBwcy5sZW5ndGggPT09IDIgJiYgcHNbMV0gPT09ICdkYicgPyB7XG4gICAgICAgICAgICBkQjogdixcbiAgICAgICAgICAgIHJhdGlvOiBkYlRvUmF0aW8odilcbiAgICAgICAgfSA6IHtcbiAgICAgICAgICAgIGRCOiByYXRpb1RvRGIodiksXG4gICAgICAgICAgICByYXRpbzogdlxuICAgICAgICB9O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVV0aWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/common/Util.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/core.js":
/*!*************************************************!*\
  !*** ./node_modules/music-metadata/lib/core.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LyricsContentType: () => (/* reexport safe */ _type_js__WEBPACK_IMPORTED_MODULE_5__.LyricsContentType),\n/* harmony export */   TimestampFormat: () => (/* reexport safe */ _type_js__WEBPACK_IMPORTED_MODULE_5__.TimestampFormat),\n/* harmony export */   orderTags: () => (/* binding */ orderTags),\n/* harmony export */   parseBlob: () => (/* binding */ parseBlob),\n/* harmony export */   parseBuffer: () => (/* binding */ parseBuffer),\n/* harmony export */   parseFromTokenizer: () => (/* binding */ parseFromTokenizer),\n/* harmony export */   parseWebStream: () => (/* binding */ parseWebStream),\n/* harmony export */   ratingToStars: () => (/* binding */ ratingToStars),\n/* harmony export */   scanAppendingHeaders: () => (/* binding */ scanAppendingHeaders),\n/* harmony export */   selectCover: () => (/* binding */ selectCover)\n/* harmony export */ });\n/* harmony import */ var strtok3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! strtok3 */ \"(rsc)/./node_modules/strtok3/lib/index.js\");\n/* harmony import */ var _ParserFactory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ParserFactory.js */ \"(rsc)/./node_modules/music-metadata/lib/ParserFactory.js\");\n/* harmony import */ var _apev2_APEv2Parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./apev2/APEv2Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/apev2/APEv2Parser.js\");\n/* harmony import */ var _id3v1_ID3v1Parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./id3v1/ID3v1Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v1/ID3v1Parser.js\");\n/* harmony import */ var _lyrics3_Lyrics3_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lyrics3/Lyrics3.js */ \"(rsc)/./node_modules/music-metadata/lib/lyrics3/Lyrics3.js\");\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./type.js */ \"(rsc)/./node_modules/music-metadata/lib/type.js\");\n/**\n * Primary entry point, Node.js specific entry point is MusepackParser.ts\n */\n\n\n\n\n\n\n/**\n * Parse Web API File\n * Requires Blob to be able to stream using a ReadableStreamBYOBReader, only available since Node.js ≥ 20\n * @param blob - Blob to parse\n * @param options - Parsing options\n * @returns Metadata\n */\nasync function parseBlob(blob, options = {}) {\n    const fileInfo = { mimeType: blob.type, size: blob.size };\n    if (blob instanceof File) {\n        fileInfo.path = blob.name;\n    }\n    return parseWebStream(blob.stream(), fileInfo, options);\n}\n/**\n * Parse audio from Web Stream.Readable\n * @param webStream - WebStream to read the audio track from\n * @param options - Parsing options\n * @param fileInfo - File information object or MIME-type string\n * @returns Metadata\n */\nfunction parseWebStream(webStream, fileInfo, options = {}) {\n    return parseFromTokenizer((0,strtok3__WEBPACK_IMPORTED_MODULE_0__.fromWebStream)(webStream, { fileInfo: typeof fileInfo === 'string' ? { mimeType: fileInfo } : fileInfo }), options);\n}\n/**\n * Parse audio from memory\n * @param uint8Array - Uint8Array holding audio data\n * @param fileInfo - File information object or MIME-type string\n * @param options - Parsing options\n * @returns Metadata\n * Ref: https://github.com/Borewit/strtok3/blob/e6938c81ff685074d5eb3064a11c0b03ca934c1d/src/index.ts#L15\n */\nasync function parseBuffer(uint8Array, fileInfo, options = {}) {\n    const tokenizer = (0,strtok3__WEBPACK_IMPORTED_MODULE_0__.fromBuffer)(uint8Array, { fileInfo: typeof fileInfo === 'string' ? { mimeType: fileInfo } : fileInfo });\n    return parseFromTokenizer(tokenizer, options);\n}\n/**\n * Parse audio from ITokenizer source\n * @param tokenizer - Audio source implementing the tokenizer interface\n * @param options - Parsing options\n * @returns Metadata\n */\nfunction parseFromTokenizer(tokenizer, options) {\n    const parserFactory = new _ParserFactory_js__WEBPACK_IMPORTED_MODULE_1__.ParserFactory();\n    return parserFactory.parse(tokenizer, undefined, options);\n}\n/**\n * Create a dictionary ordered by their tag id (key)\n * @param nativeTags list of tags\n * @returns tags indexed by id\n */\nfunction orderTags(nativeTags) {\n    const tags = {};\n    for (const { id, value } of nativeTags) {\n        if (!tags[id]) {\n            tags[id] = [];\n        }\n        tags[id].push(value);\n    }\n    return tags;\n}\n/**\n * Convert rating to 1-5 star rating\n * @param rating Normalized rating [0..1] (common.rating[n].rating)\n * @returns Number of stars: 1, 2, 3, 4 or 5 stars\n */\nfunction ratingToStars(rating) {\n    return rating === undefined ? 0 : 1 + Math.round(rating * 4);\n}\n/**\n * Select most likely cover image.\n * @param pictures Usually metadata.common.picture\n * @return Cover image, if any, otherwise null\n */\nfunction selectCover(pictures) {\n    return pictures ? pictures.reduce((acc, cur) => {\n        if (cur.name && cur.name.toLowerCase() in ['front', 'cover', 'cover (front)'])\n            return cur;\n        return acc;\n    }) : null;\n}\nasync function scanAppendingHeaders(tokenizer, options = {}) {\n    let apeOffset = tokenizer.fileInfo.size;\n    if (await (0,_id3v1_ID3v1Parser_js__WEBPACK_IMPORTED_MODULE_3__.hasID3v1Header)(tokenizer)) {\n        apeOffset -= 128;\n        const lyricsLen = await (0,_lyrics3_Lyrics3_js__WEBPACK_IMPORTED_MODULE_4__.getLyricsHeaderLength)(tokenizer);\n        apeOffset -= lyricsLen;\n    }\n    options.apeHeader = await _apev2_APEv2Parser_js__WEBPACK_IMPORTED_MODULE_2__.APEv2Parser.findApeFooterOffset(tokenizer, apeOffset);\n}\n//# sourceMappingURL=core.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2NvcmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNvRDtBQUNEO0FBQ0U7QUFDRztBQUNLO0FBQ0U7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywyQ0FBMkM7QUFDbEQsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHlEQUF5RDtBQUNoRSw4QkFBOEIsc0RBQWEsY0FBYywyQ0FBMkMscUJBQXFCLFlBQVk7QUFDckk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNkRBQTZEO0FBQ3BFLHNCQUFzQixtREFBVSxlQUFlLDJDQUEyQyxxQkFBcUIsWUFBWTtBQUMzSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCw4QkFBOEIsNERBQWE7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsaUJBQWlCLFlBQVk7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTywyREFBMkQ7QUFDbEU7QUFDQSxjQUFjLHFFQUFjO0FBQzVCO0FBQ0EsZ0NBQWdDLDBFQUFxQjtBQUNyRDtBQUNBO0FBQ0EsOEJBQThCLDhEQUFXO0FBQ3pDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2NvcmUuanM/ZmJlNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFByaW1hcnkgZW50cnkgcG9pbnQsIE5vZGUuanMgc3BlY2lmaWMgZW50cnkgcG9pbnQgaXMgTXVzZXBhY2tQYXJzZXIudHNcbiAqL1xuaW1wb3J0IHsgZnJvbVdlYlN0cmVhbSwgZnJvbUJ1ZmZlciB9IGZyb20gJ3N0cnRvazMnO1xuaW1wb3J0IHsgUGFyc2VyRmFjdG9yeSB9IGZyb20gJy4vUGFyc2VyRmFjdG9yeS5qcyc7XG5pbXBvcnQgeyBBUEV2MlBhcnNlciB9IGZyb20gJy4vYXBldjIvQVBFdjJQYXJzZXIuanMnO1xuaW1wb3J0IHsgaGFzSUQzdjFIZWFkZXIgfSBmcm9tICcuL2lkM3YxL0lEM3YxUGFyc2VyLmpzJztcbmltcG9ydCB7IGdldEx5cmljc0hlYWRlckxlbmd0aCB9IGZyb20gJy4vbHlyaWNzMy9MeXJpY3MzLmpzJztcbmV4cG9ydCB7IEx5cmljc0NvbnRlbnRUeXBlLCBUaW1lc3RhbXBGb3JtYXQgfSBmcm9tICcuL3R5cGUuanMnO1xuLyoqXG4gKiBQYXJzZSBXZWIgQVBJIEZpbGVcbiAqIFJlcXVpcmVzIEJsb2IgdG8gYmUgYWJsZSB0byBzdHJlYW0gdXNpbmcgYSBSZWFkYWJsZVN0cmVhbUJZT0JSZWFkZXIsIG9ubHkgYXZhaWxhYmxlIHNpbmNlIE5vZGUuanMg4omlIDIwXG4gKiBAcGFyYW0gYmxvYiAtIEJsb2IgdG8gcGFyc2VcbiAqIEBwYXJhbSBvcHRpb25zIC0gUGFyc2luZyBvcHRpb25zXG4gKiBAcmV0dXJucyBNZXRhZGF0YVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcGFyc2VCbG9iKGJsb2IsIG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IGZpbGVJbmZvID0geyBtaW1lVHlwZTogYmxvYi50eXBlLCBzaXplOiBibG9iLnNpemUgfTtcbiAgICBpZiAoYmxvYiBpbnN0YW5jZW9mIEZpbGUpIHtcbiAgICAgICAgZmlsZUluZm8ucGF0aCA9IGJsb2IubmFtZTtcbiAgICB9XG4gICAgcmV0dXJuIHBhcnNlV2ViU3RyZWFtKGJsb2Iuc3RyZWFtKCksIGZpbGVJbmZvLCBvcHRpb25zKTtcbn1cbi8qKlxuICogUGFyc2UgYXVkaW8gZnJvbSBXZWIgU3RyZWFtLlJlYWRhYmxlXG4gKiBAcGFyYW0gd2ViU3RyZWFtIC0gV2ViU3RyZWFtIHRvIHJlYWQgdGhlIGF1ZGlvIHRyYWNrIGZyb21cbiAqIEBwYXJhbSBvcHRpb25zIC0gUGFyc2luZyBvcHRpb25zXG4gKiBAcGFyYW0gZmlsZUluZm8gLSBGaWxlIGluZm9ybWF0aW9uIG9iamVjdCBvciBNSU1FLXR5cGUgc3RyaW5nXG4gKiBAcmV0dXJucyBNZXRhZGF0YVxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VXZWJTdHJlYW0od2ViU3RyZWFtLCBmaWxlSW5mbywgb3B0aW9ucyA9IHt9KSB7XG4gICAgcmV0dXJuIHBhcnNlRnJvbVRva2VuaXplcihmcm9tV2ViU3RyZWFtKHdlYlN0cmVhbSwgeyBmaWxlSW5mbzogdHlwZW9mIGZpbGVJbmZvID09PSAnc3RyaW5nJyA/IHsgbWltZVR5cGU6IGZpbGVJbmZvIH0gOiBmaWxlSW5mbyB9KSwgb3B0aW9ucyk7XG59XG4vKipcbiAqIFBhcnNlIGF1ZGlvIGZyb20gbWVtb3J5XG4gKiBAcGFyYW0gdWludDhBcnJheSAtIFVpbnQ4QXJyYXkgaG9sZGluZyBhdWRpbyBkYXRhXG4gKiBAcGFyYW0gZmlsZUluZm8gLSBGaWxlIGluZm9ybWF0aW9uIG9iamVjdCBvciBNSU1FLXR5cGUgc3RyaW5nXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFBhcnNpbmcgb3B0aW9uc1xuICogQHJldHVybnMgTWV0YWRhdGFcbiAqIFJlZjogaHR0cHM6Ly9naXRodWIuY29tL0JvcmV3aXQvc3RydG9rMy9ibG9iL2U2OTM4YzgxZmY2ODUwNzRkNWViMzA2NGExMWMwYjAzY2E5MzRjMWQvc3JjL2luZGV4LnRzI0wxNVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcGFyc2VCdWZmZXIodWludDhBcnJheSwgZmlsZUluZm8sIG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IHRva2VuaXplciA9IGZyb21CdWZmZXIodWludDhBcnJheSwgeyBmaWxlSW5mbzogdHlwZW9mIGZpbGVJbmZvID09PSAnc3RyaW5nJyA/IHsgbWltZVR5cGU6IGZpbGVJbmZvIH0gOiBmaWxlSW5mbyB9KTtcbiAgICByZXR1cm4gcGFyc2VGcm9tVG9rZW5pemVyKHRva2VuaXplciwgb3B0aW9ucyk7XG59XG4vKipcbiAqIFBhcnNlIGF1ZGlvIGZyb20gSVRva2VuaXplciBzb3VyY2VcbiAqIEBwYXJhbSB0b2tlbml6ZXIgLSBBdWRpbyBzb3VyY2UgaW1wbGVtZW50aW5nIHRoZSB0b2tlbml6ZXIgaW50ZXJmYWNlXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFBhcnNpbmcgb3B0aW9uc1xuICogQHJldHVybnMgTWV0YWRhdGFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRnJvbVRva2VuaXplcih0b2tlbml6ZXIsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBwYXJzZXJGYWN0b3J5ID0gbmV3IFBhcnNlckZhY3RvcnkoKTtcbiAgICByZXR1cm4gcGFyc2VyRmFjdG9yeS5wYXJzZSh0b2tlbml6ZXIsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG59XG4vKipcbiAqIENyZWF0ZSBhIGRpY3Rpb25hcnkgb3JkZXJlZCBieSB0aGVpciB0YWcgaWQgKGtleSlcbiAqIEBwYXJhbSBuYXRpdmVUYWdzIGxpc3Qgb2YgdGFnc1xuICogQHJldHVybnMgdGFncyBpbmRleGVkIGJ5IGlkXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBvcmRlclRhZ3MobmF0aXZlVGFncykge1xuICAgIGNvbnN0IHRhZ3MgPSB7fTtcbiAgICBmb3IgKGNvbnN0IHsgaWQsIHZhbHVlIH0gb2YgbmF0aXZlVGFncykge1xuICAgICAgICBpZiAoIXRhZ3NbaWRdKSB7XG4gICAgICAgICAgICB0YWdzW2lkXSA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIHRhZ3NbaWRdLnB1c2godmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gdGFncztcbn1cbi8qKlxuICogQ29udmVydCByYXRpbmcgdG8gMS01IHN0YXIgcmF0aW5nXG4gKiBAcGFyYW0gcmF0aW5nIE5vcm1hbGl6ZWQgcmF0aW5nIFswLi4xXSAoY29tbW9uLnJhdGluZ1tuXS5yYXRpbmcpXG4gKiBAcmV0dXJucyBOdW1iZXIgb2Ygc3RhcnM6IDEsIDIsIDMsIDQgb3IgNSBzdGFyc1xuICovXG5leHBvcnQgZnVuY3Rpb24gcmF0aW5nVG9TdGFycyhyYXRpbmcpIHtcbiAgICByZXR1cm4gcmF0aW5nID09PSB1bmRlZmluZWQgPyAwIDogMSArIE1hdGgucm91bmQocmF0aW5nICogNCk7XG59XG4vKipcbiAqIFNlbGVjdCBtb3N0IGxpa2VseSBjb3ZlciBpbWFnZS5cbiAqIEBwYXJhbSBwaWN0dXJlcyBVc3VhbGx5IG1ldGFkYXRhLmNvbW1vbi5waWN0dXJlXG4gKiBAcmV0dXJuIENvdmVyIGltYWdlLCBpZiBhbnksIG90aGVyd2lzZSBudWxsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZWxlY3RDb3ZlcihwaWN0dXJlcykge1xuICAgIHJldHVybiBwaWN0dXJlcyA/IHBpY3R1cmVzLnJlZHVjZSgoYWNjLCBjdXIpID0+IHtcbiAgICAgICAgaWYgKGN1ci5uYW1lICYmIGN1ci5uYW1lLnRvTG93ZXJDYXNlKCkgaW4gWydmcm9udCcsICdjb3ZlcicsICdjb3ZlciAoZnJvbnQpJ10pXG4gICAgICAgICAgICByZXR1cm4gY3VyO1xuICAgICAgICByZXR1cm4gYWNjO1xuICAgIH0pIDogbnVsbDtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzY2FuQXBwZW5kaW5nSGVhZGVycyh0b2tlbml6ZXIsIG9wdGlvbnMgPSB7fSkge1xuICAgIGxldCBhcGVPZmZzZXQgPSB0b2tlbml6ZXIuZmlsZUluZm8uc2l6ZTtcbiAgICBpZiAoYXdhaXQgaGFzSUQzdjFIZWFkZXIodG9rZW5pemVyKSkge1xuICAgICAgICBhcGVPZmZzZXQgLT0gMTI4O1xuICAgICAgICBjb25zdCBseXJpY3NMZW4gPSBhd2FpdCBnZXRMeXJpY3NIZWFkZXJMZW5ndGgodG9rZW5pemVyKTtcbiAgICAgICAgYXBlT2Zmc2V0IC09IGx5cmljc0xlbjtcbiAgICB9XG4gICAgb3B0aW9ucy5hcGVIZWFkZXIgPSBhd2FpdCBBUEV2MlBhcnNlci5maW5kQXBlRm9vdGVyT2Zmc2V0KHRva2VuaXplciwgYXBlT2Zmc2V0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvcmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/core.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/dsdiff/DsdiffLoader.js":
/*!****************************************************************!*\
  !*** ./node_modules/music-metadata/lib/dsdiff/DsdiffLoader.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dsdiffParserLoader: () => (/* binding */ dsdiffParserLoader)\n/* harmony export */ });\nconst dsdiffParserLoader = {\n    parserType: 'dsdiff',\n    extensions: ['.dff'],\n    async load(metadata, tokenizer, options) {\n        return new (await __webpack_require__.e(/*! import() */ \"vendor-chunks/music-metadata\").then(__webpack_require__.bind(__webpack_require__, /*! ./DsdiffParser.js */ \"(rsc)/./node_modules/music-metadata/lib/dsdiff/DsdiffParser.js\"))).DsdiffParser(metadata, tokenizer, options);\n    }\n};\n//# sourceMappingURL=DsdiffLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2RzZGlmZi9Ec2RpZmZMb2FkZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLG9OQUEyQjtBQUNyRDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2RzZGlmZi9Ec2RpZmZMb2FkZXIuanM/N2ZhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZHNkaWZmUGFyc2VyTG9hZGVyID0ge1xuICAgIHBhcnNlclR5cGU6ICdkc2RpZmYnLFxuICAgIGV4dGVuc2lvbnM6IFsnLmRmZiddLFxuICAgIGFzeW5jIGxvYWQobWV0YWRhdGEsIHRva2VuaXplciwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IChhd2FpdCBpbXBvcnQoJy4vRHNkaWZmUGFyc2VyLmpzJykpLkRzZGlmZlBhcnNlcihtZXRhZGF0YSwgdG9rZW5pemVyLCBvcHRpb25zKTtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RHNkaWZmTG9hZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/dsdiff/DsdiffLoader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/dsdiff/DsdiffParser.js":
/*!****************************************************************!*\
  !*** ./node_modules/music-metadata/lib/dsdiff/DsdiffParser.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DsdiffContentParseError: () => (/* binding */ DsdiffContentParseError),\n/* harmony export */   DsdiffParser: () => (/* binding */ DsdiffParser)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var strtok3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! strtok3 */ \"(rsc)/./node_modules/strtok3/lib/index.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/FourCC.js */ \"(rsc)/./node_modules/music-metadata/lib/common/FourCC.js\");\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/BasicParser.js */ \"(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js\");\n/* harmony import */ var _id3v2_ID3v2Parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../id3v2/ID3v2Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v2Parser.js\");\n/* harmony import */ var _DsdiffToken_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./DsdiffToken.js */ \"(rsc)/./node_modules/music-metadata/lib/dsdiff/DsdiffToken.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_1__('music-metadata:parser:aiff');\nclass DsdiffContentParseError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_7__.makeUnexpectedFileContentError)('DSDIFF') {\n}\n/**\n * DSDIFF - Direct Stream Digital Interchange File Format (Phillips)\n *\n * Ref:\n * - http://www.sonicstudio.com/pdf/dsd/DSDIFF_1.5_Spec.pdf\n */\nclass DsdiffParser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_4__.BasicParser {\n    async parse() {\n        const header = await this.tokenizer.readToken(_DsdiffToken_js__WEBPACK_IMPORTED_MODULE_6__.ChunkHeader64);\n        if (header.chunkID !== 'FRM8')\n            throw new DsdiffContentParseError('Unexpected chunk-ID');\n        const type = (await this.tokenizer.readToken(_common_FourCC_js__WEBPACK_IMPORTED_MODULE_3__.FourCcToken)).trim();\n        switch (type) {\n            case 'DSD':\n                this.metadata.setFormat('container', `DSDIFF/${type}`);\n                this.metadata.setFormat('lossless', true);\n                return this.readFmt8Chunks(header.chunkSize - BigInt(_common_FourCC_js__WEBPACK_IMPORTED_MODULE_3__.FourCcToken.len));\n            default:\n                throw new DsdiffContentParseError(`Unsupported DSDIFF type: ${type}`);\n        }\n    }\n    async readFmt8Chunks(remainingSize) {\n        while (remainingSize >= _DsdiffToken_js__WEBPACK_IMPORTED_MODULE_6__.ChunkHeader64.len) {\n            const chunkHeader = await this.tokenizer.readToken(_DsdiffToken_js__WEBPACK_IMPORTED_MODULE_6__.ChunkHeader64);\n            //  If the data is an odd number of bytes in length, a pad byte must be added at the end\n            debug(`Chunk id=${chunkHeader.chunkID}`);\n            await this.readData(chunkHeader);\n            remainingSize -= (BigInt(_DsdiffToken_js__WEBPACK_IMPORTED_MODULE_6__.ChunkHeader64.len) + chunkHeader.chunkSize);\n        }\n    }\n    async readData(header) {\n        debug(`Reading data of chunk[ID=${header.chunkID}, size=${header.chunkSize}]`);\n        const p0 = this.tokenizer.position;\n        switch (header.chunkID.trim()) {\n            case 'FVER': { // 3.1 FORMAT VERSION CHUNK\n                const version = await this.tokenizer.readToken(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE);\n                debug(`DSDIFF version=${version}`);\n                break;\n            }\n            case 'PROP': { // 3.2 PROPERTY CHUNK\n                const propType = await this.tokenizer.readToken(_common_FourCC_js__WEBPACK_IMPORTED_MODULE_3__.FourCcToken);\n                if (propType !== 'SND ')\n                    throw new DsdiffContentParseError('Unexpected PROP-chunk ID');\n                await this.handleSoundPropertyChunks(header.chunkSize - BigInt(_common_FourCC_js__WEBPACK_IMPORTED_MODULE_3__.FourCcToken.len));\n                break;\n            }\n            case 'ID3': { // Unofficial ID3 tag support\n                const id3_data = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayType(Number(header.chunkSize)));\n                const rst = strtok3__WEBPACK_IMPORTED_MODULE_2__.fromBuffer(id3_data);\n                await new _id3v2_ID3v2Parser_js__WEBPACK_IMPORTED_MODULE_5__.ID3v2Parser().parse(this.metadata, rst, this.options);\n                break;\n            }\n            case 'DSD':\n                if (this.metadata.format.numberOfChannels) {\n                    this.metadata.setFormat('numberOfSamples', Number(header.chunkSize * BigInt(8) / BigInt(this.metadata.format.numberOfChannels)));\n                }\n                if (this.metadata.format.numberOfSamples && this.metadata.format.sampleRate) {\n                    this.metadata.setFormat('duration', this.metadata.format.numberOfSamples / this.metadata.format.sampleRate);\n                }\n                break;\n            default:\n                debug(`Ignore chunk[ID=${header.chunkID}, size=${header.chunkSize}]`);\n                break;\n        }\n        const remaining = header.chunkSize - BigInt(this.tokenizer.position - p0);\n        if (remaining > 0) {\n            debug(`After Parsing chunk, remaining ${remaining} bytes`);\n            await this.tokenizer.ignore(Number(remaining));\n        }\n    }\n    async handleSoundPropertyChunks(remainingSize) {\n        debug(`Parsing sound-property-chunks, remainingSize=${remainingSize}`);\n        while (remainingSize > 0) {\n            const sndPropHeader = await this.tokenizer.readToken(_DsdiffToken_js__WEBPACK_IMPORTED_MODULE_6__.ChunkHeader64);\n            debug(`Sound-property-chunk[ID=${sndPropHeader.chunkID}, size=${sndPropHeader.chunkSize}]`);\n            const p0 = this.tokenizer.position;\n            switch (sndPropHeader.chunkID.trim()) {\n                case 'FS': { // 3.2.1 Sample Rate Chunk\n                    const sampleRate = await this.tokenizer.readToken(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE);\n                    this.metadata.setFormat('sampleRate', sampleRate);\n                    break;\n                }\n                case 'CHNL': { // 3.2.2 Channels Chunk\n                    const numChannels = await this.tokenizer.readToken(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE);\n                    this.metadata.setFormat('numberOfChannels', numChannels);\n                    await this.handleChannelChunks(sndPropHeader.chunkSize - BigInt(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.len));\n                    break;\n                }\n                case 'CMPR': { // 3.2.3 Compression Type Chunk\n                    const compressionIdCode = (await this.tokenizer.readToken(_common_FourCC_js__WEBPACK_IMPORTED_MODULE_3__.FourCcToken)).trim();\n                    const count = await this.tokenizer.readToken(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8);\n                    const compressionName = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(count, 'ascii'));\n                    if (compressionIdCode === 'DSD') {\n                        this.metadata.setFormat('lossless', true);\n                        this.metadata.setFormat('bitsPerSample', 1);\n                    }\n                    this.metadata.setFormat('codec', `${compressionIdCode} (${compressionName})`);\n                    break;\n                }\n                case 'ABSS': { // 3.2.4 Absolute Start Time Chunk\n                    const hours = await this.tokenizer.readToken(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE);\n                    const minutes = await this.tokenizer.readToken(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8);\n                    const seconds = await this.tokenizer.readToken(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8);\n                    const samples = await this.tokenizer.readToken(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE);\n                    debug(`ABSS ${hours}:${minutes}:${seconds}.${samples}`);\n                    break;\n                }\n                case 'LSCO': { // 3.2.5 Loudspeaker Configuration Chunk\n                    const lsConfig = await this.tokenizer.readToken(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE);\n                    debug(`LSCO lsConfig=${lsConfig}`);\n                    break;\n                }\n                default:\n                    debug(`Unknown sound-property-chunk[ID=${sndPropHeader.chunkID}, size=${sndPropHeader.chunkSize}]`);\n                    await this.tokenizer.ignore(Number(sndPropHeader.chunkSize));\n            }\n            const remaining = sndPropHeader.chunkSize - BigInt(this.tokenizer.position - p0);\n            if (remaining > 0) {\n                debug(`After Parsing sound-property-chunk ${sndPropHeader.chunkSize}, remaining ${remaining} bytes`);\n                await this.tokenizer.ignore(Number(remaining));\n            }\n            remainingSize -= BigInt(_DsdiffToken_js__WEBPACK_IMPORTED_MODULE_6__.ChunkHeader64.len) + sndPropHeader.chunkSize;\n            debug(`Parsing sound-property-chunks, remainingSize=${remainingSize}`);\n        }\n        if (this.metadata.format.lossless && this.metadata.format.sampleRate && this.metadata.format.numberOfChannels && this.metadata.format.bitsPerSample) {\n            const bitrate = this.metadata.format.sampleRate * this.metadata.format.numberOfChannels * this.metadata.format.bitsPerSample;\n            this.metadata.setFormat('bitrate', bitrate);\n        }\n    }\n    async handleChannelChunks(remainingSize) {\n        debug(`Parsing channel-chunks, remainingSize=${remainingSize}`);\n        const channels = [];\n        while (remainingSize >= _common_FourCC_js__WEBPACK_IMPORTED_MODULE_3__.FourCcToken.len) {\n            const channelId = await this.tokenizer.readToken(_common_FourCC_js__WEBPACK_IMPORTED_MODULE_3__.FourCcToken);\n            debug(`Channel[ID=${channelId}]`);\n            channels.push(channelId);\n            remainingSize -= BigInt(_common_FourCC_js__WEBPACK_IMPORTED_MODULE_3__.FourCcToken.len);\n        }\n        debug(`Channels: ${channels.join(', ')}`);\n        return channels;\n    }\n}\n//# sourceMappingURL=DsdiffParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/dsdiff/DsdiffParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/dsdiff/DsdiffToken.js":
/*!***************************************************************!*\
  !*** ./node_modules/music-metadata/lib/dsdiff/DsdiffToken.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChunkHeader64: () => (/* binding */ ChunkHeader64)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/FourCC.js */ \"(rsc)/./node_modules/music-metadata/lib/common/FourCC.js\");\n\n\n/**\n * DSDIFF chunk header\n * The data-size encoding is deviating from EA-IFF 85\n * Ref: http://www.sonicstudio.com/pdf/dsd/DSDIFF_1.5_Spec.pdf\n */\nconst ChunkHeader64 = {\n    len: 12,\n    get: (buf, off) => {\n        return {\n            // Group-ID\n            chunkID: _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__.FourCcToken.get(buf, off),\n            // Size\n            chunkSize: token_types__WEBPACK_IMPORTED_MODULE_0__.INT64_BE.get(buf, off + 4)\n        };\n    }\n};\n//# sourceMappingURL=DsdiffToken.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2RzZGlmZi9Ec2RpZmZUb2tlbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDYTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwwREFBVztBQUNoQztBQUNBLHVCQUF1QixpREFBYztBQUNyQztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvZHNkaWZmL0RzZGlmZlRva2VuLmpzP2M0NjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVG9rZW4gZnJvbSAndG9rZW4tdHlwZXMnO1xuaW1wb3J0IHsgRm91ckNjVG9rZW4gfSBmcm9tICcuLi9jb21tb24vRm91ckNDLmpzJztcbi8qKlxuICogRFNESUZGIGNodW5rIGhlYWRlclxuICogVGhlIGRhdGEtc2l6ZSBlbmNvZGluZyBpcyBkZXZpYXRpbmcgZnJvbSBFQS1JRkYgODVcbiAqIFJlZjogaHR0cDovL3d3dy5zb25pY3N0dWRpby5jb20vcGRmL2RzZC9EU0RJRkZfMS41X1NwZWMucGRmXG4gKi9cbmV4cG9ydCBjb25zdCBDaHVua0hlYWRlcjY0ID0ge1xuICAgIGxlbjogMTIsXG4gICAgZ2V0OiAoYnVmLCBvZmYpID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC8vIEdyb3VwLUlEXG4gICAgICAgICAgICBjaHVua0lEOiBGb3VyQ2NUb2tlbi5nZXQoYnVmLCBvZmYpLFxuICAgICAgICAgICAgLy8gU2l6ZVxuICAgICAgICAgICAgY2h1bmtTaXplOiBUb2tlbi5JTlQ2NF9CRS5nZXQoYnVmLCBvZmYgKyA0KVxuICAgICAgICB9O1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ec2RpZmZUb2tlbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/dsdiff/DsdiffToken.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/dsf/DsfChunk.js":
/*!*********************************************************!*\
  !*** ./node_modules/music-metadata/lib/dsf/DsfChunk.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChannelType: () => (/* binding */ ChannelType),\n/* harmony export */   ChunkHeader: () => (/* binding */ ChunkHeader),\n/* harmony export */   DsdChunk: () => (/* binding */ DsdChunk),\n/* harmony export */   FormatChunk: () => (/* binding */ FormatChunk)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/FourCC.js */ \"(rsc)/./node_modules/music-metadata/lib/common/FourCC.js\");\n\n\n/**\n * Common chunk DSD header: the 'chunk name (Four-CC)' & chunk size\n */\nconst ChunkHeader = {\n    len: 12,\n    get: (buf, off) => {\n        return { id: _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__.FourCcToken.get(buf, off), size: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_LE.get(buf, off + 4) };\n    }\n};\n/**\n * Common chunk DSD header: the 'chunk name (Four-CC)' & chunk size\n */\nconst DsdChunk = {\n    len: 16,\n    get: (buf, off) => {\n        return {\n            fileSize: token_types__WEBPACK_IMPORTED_MODULE_0__.INT64_LE.get(buf, off),\n            metadataPointer: token_types__WEBPACK_IMPORTED_MODULE_0__.INT64_LE.get(buf, off + 8)\n        };\n    }\n};\nvar ChannelType;\n(function (ChannelType) {\n    ChannelType[ChannelType[\"mono\"] = 1] = \"mono\";\n    ChannelType[ChannelType[\"stereo\"] = 2] = \"stereo\";\n    ChannelType[ChannelType[\"channels\"] = 3] = \"channels\";\n    ChannelType[ChannelType[\"quad\"] = 4] = \"quad\";\n    ChannelType[ChannelType[\"4 channels\"] = 5] = \"4 channels\";\n    ChannelType[ChannelType[\"5 channels\"] = 6] = \"5 channels\";\n    ChannelType[ChannelType[\"5.1 channels\"] = 7] = \"5.1 channels\";\n})(ChannelType || (ChannelType = {}));\n/**\n * Common chunk DSD header: the 'chunk name (Four-CC)' & chunk size\n */\nconst FormatChunk = {\n    len: 40,\n    get: (buf, off) => {\n        return {\n            formatVersion: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off),\n            formatID: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 4),\n            channelType: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 8),\n            channelNum: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 12),\n            samplingFrequency: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 16),\n            bitsPerSample: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 20),\n            sampleCount: token_types__WEBPACK_IMPORTED_MODULE_0__.INT64_LE.get(buf, off + 24),\n            blockSizePerChannel: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 32)\n        };\n    }\n};\n//# sourceMappingURL=DsfChunk.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2RzZi9Ec2ZDaHVuay5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBcUM7QUFDYTtBQUNsRDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxpQkFBaUIsSUFBSSwwREFBVyxzQkFBc0Isa0RBQWU7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGlEQUFjO0FBQ3BDLDZCQUE2QixpREFBYztBQUMzQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGtDQUFrQztBQUNuQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpREFBYztBQUN6QyxzQkFBc0IsaURBQWM7QUFDcEMseUJBQXlCLGlEQUFjO0FBQ3ZDLHdCQUF3QixpREFBYztBQUN0QywrQkFBK0IsaURBQWM7QUFDN0MsMkJBQTJCLGlEQUFjO0FBQ3pDLHlCQUF5QixpREFBYztBQUN2QyxpQ0FBaUMsaURBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2RzZi9Ec2ZDaHVuay5qcz80YWVmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFRva2VuIGZyb20gJ3Rva2VuLXR5cGVzJztcbmltcG9ydCB7IEZvdXJDY1Rva2VuIH0gZnJvbSAnLi4vY29tbW9uL0ZvdXJDQy5qcyc7XG4vKipcbiAqIENvbW1vbiBjaHVuayBEU0QgaGVhZGVyOiB0aGUgJ2NodW5rIG5hbWUgKEZvdXItQ0MpJyAmIGNodW5rIHNpemVcbiAqL1xuZXhwb3J0IGNvbnN0IENodW5rSGVhZGVyID0ge1xuICAgIGxlbjogMTIsXG4gICAgZ2V0OiAoYnVmLCBvZmYpID0+IHtcbiAgICAgICAgcmV0dXJuIHsgaWQ6IEZvdXJDY1Rva2VuLmdldChidWYsIG9mZiksIHNpemU6IFRva2VuLlVJTlQ2NF9MRS5nZXQoYnVmLCBvZmYgKyA0KSB9O1xuICAgIH1cbn07XG4vKipcbiAqIENvbW1vbiBjaHVuayBEU0QgaGVhZGVyOiB0aGUgJ2NodW5rIG5hbWUgKEZvdXItQ0MpJyAmIGNodW5rIHNpemVcbiAqL1xuZXhwb3J0IGNvbnN0IERzZENodW5rID0ge1xuICAgIGxlbjogMTYsXG4gICAgZ2V0OiAoYnVmLCBvZmYpID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGZpbGVTaXplOiBUb2tlbi5JTlQ2NF9MRS5nZXQoYnVmLCBvZmYpLFxuICAgICAgICAgICAgbWV0YWRhdGFQb2ludGVyOiBUb2tlbi5JTlQ2NF9MRS5nZXQoYnVmLCBvZmYgKyA4KVxuICAgICAgICB9O1xuICAgIH1cbn07XG5leHBvcnQgdmFyIENoYW5uZWxUeXBlO1xuKGZ1bmN0aW9uIChDaGFubmVsVHlwZSkge1xuICAgIENoYW5uZWxUeXBlW0NoYW5uZWxUeXBlW1wibW9ub1wiXSA9IDFdID0gXCJtb25vXCI7XG4gICAgQ2hhbm5lbFR5cGVbQ2hhbm5lbFR5cGVbXCJzdGVyZW9cIl0gPSAyXSA9IFwic3RlcmVvXCI7XG4gICAgQ2hhbm5lbFR5cGVbQ2hhbm5lbFR5cGVbXCJjaGFubmVsc1wiXSA9IDNdID0gXCJjaGFubmVsc1wiO1xuICAgIENoYW5uZWxUeXBlW0NoYW5uZWxUeXBlW1wicXVhZFwiXSA9IDRdID0gXCJxdWFkXCI7XG4gICAgQ2hhbm5lbFR5cGVbQ2hhbm5lbFR5cGVbXCI0IGNoYW5uZWxzXCJdID0gNV0gPSBcIjQgY2hhbm5lbHNcIjtcbiAgICBDaGFubmVsVHlwZVtDaGFubmVsVHlwZVtcIjUgY2hhbm5lbHNcIl0gPSA2XSA9IFwiNSBjaGFubmVsc1wiO1xuICAgIENoYW5uZWxUeXBlW0NoYW5uZWxUeXBlW1wiNS4xIGNoYW5uZWxzXCJdID0gN10gPSBcIjUuMSBjaGFubmVsc1wiO1xufSkoQ2hhbm5lbFR5cGUgfHwgKENoYW5uZWxUeXBlID0ge30pKTtcbi8qKlxuICogQ29tbW9uIGNodW5rIERTRCBoZWFkZXI6IHRoZSAnY2h1bmsgbmFtZSAoRm91ci1DQyknICYgY2h1bmsgc2l6ZVxuICovXG5leHBvcnQgY29uc3QgRm9ybWF0Q2h1bmsgPSB7XG4gICAgbGVuOiA0MCxcbiAgICBnZXQ6IChidWYsIG9mZikgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZm9ybWF0VmVyc2lvbjogVG9rZW4uSU5UMzJfTEUuZ2V0KGJ1Ziwgb2ZmKSxcbiAgICAgICAgICAgIGZvcm1hdElEOiBUb2tlbi5JTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyA0KSxcbiAgICAgICAgICAgIGNoYW5uZWxUeXBlOiBUb2tlbi5JTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyA4KSxcbiAgICAgICAgICAgIGNoYW5uZWxOdW06IFRva2VuLklOVDMyX0xFLmdldChidWYsIG9mZiArIDEyKSxcbiAgICAgICAgICAgIHNhbXBsaW5nRnJlcXVlbmN5OiBUb2tlbi5JTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyAxNiksXG4gICAgICAgICAgICBiaXRzUGVyU2FtcGxlOiBUb2tlbi5JTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyAyMCksXG4gICAgICAgICAgICBzYW1wbGVDb3VudDogVG9rZW4uSU5UNjRfTEUuZ2V0KGJ1Ziwgb2ZmICsgMjQpLFxuICAgICAgICAgICAgYmxvY2tTaXplUGVyQ2hhbm5lbDogVG9rZW4uSU5UMzJfTEUuZ2V0KGJ1Ziwgb2ZmICsgMzIpXG4gICAgICAgIH07XG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURzZkNodW5rLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/dsf/DsfChunk.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/dsf/DsfLoader.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/dsf/DsfLoader.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dsfParserLoader: () => (/* binding */ dsfParserLoader)\n/* harmony export */ });\nconst dsfParserLoader = {\n    parserType: 'dsf',\n    extensions: ['.dsf'],\n    async load(metadata, tokenizer, options) {\n        return new (await __webpack_require__.e(/*! import() */ \"vendor-chunks/music-metadata\").then(__webpack_require__.bind(__webpack_require__, /*! ./DsfParser.js */ \"(rsc)/./node_modules/music-metadata/lib/dsf/DsfParser.js\"))).DsfParser(metadata, tokenizer, options);\n    }\n};\n//# sourceMappingURL=DsfLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2RzZi9Ec2ZMb2FkZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJNQUF3QjtBQUNsRDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2RzZi9Ec2ZMb2FkZXIuanM/ZTQ5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZHNmUGFyc2VyTG9hZGVyID0ge1xuICAgIHBhcnNlclR5cGU6ICdkc2YnLFxuICAgIGV4dGVuc2lvbnM6IFsnLmRzZiddLFxuICAgIGFzeW5jIGxvYWQobWV0YWRhdGEsIHRva2VuaXplciwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IChhd2FpdCBpbXBvcnQoJy4vRHNmUGFyc2VyLmpzJykpLkRzZlBhcnNlcihtZXRhZGF0YSwgdG9rZW5pemVyLCBvcHRpb25zKTtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RHNmTG9hZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/dsf/DsfLoader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/dsf/DsfParser.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/dsf/DsfParser.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DsdContentParseError: () => (/* binding */ DsdContentParseError),\n/* harmony export */   DsfParser: () => (/* binding */ DsfParser)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _id3v2_AbstractID3Parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../id3v2/AbstractID3Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/AbstractID3Parser.js\");\n/* harmony import */ var _DsfChunk_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DsfChunk.js */ \"(rsc)/./node_modules/music-metadata/lib/dsf/DsfChunk.js\");\n/* harmony import */ var _id3v2_ID3v2Parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../id3v2/ID3v2Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v2Parser.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('music-metadata:parser:DSF');\nclass DsdContentParseError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_4__.makeUnexpectedFileContentError)('DSD') {\n}\n/**\n * DSF (dsd stream file) File Parser\n * Ref: https://dsd-guide.com/sites/default/files/white-papers/DSFFileFormatSpec_E.pdf\n */\nclass DsfParser extends _id3v2_AbstractID3Parser_js__WEBPACK_IMPORTED_MODULE_1__.AbstractID3Parser {\n    async postId3v2Parse() {\n        const p0 = this.tokenizer.position; // mark start position, normally 0\n        const chunkHeader = await this.tokenizer.readToken(_DsfChunk_js__WEBPACK_IMPORTED_MODULE_2__.ChunkHeader);\n        if (chunkHeader.id !== 'DSD ')\n            throw new DsdContentParseError('Invalid chunk signature');\n        this.metadata.setFormat('container', 'DSF');\n        this.metadata.setFormat('lossless', true);\n        const dsdChunk = await this.tokenizer.readToken(_DsfChunk_js__WEBPACK_IMPORTED_MODULE_2__.DsdChunk);\n        if (dsdChunk.metadataPointer === BigInt(0)) {\n            debug(\"No ID3v2 tag present\");\n        }\n        else {\n            debug(`expect ID3v2 at offset=${dsdChunk.metadataPointer}`);\n            await this.parseChunks(dsdChunk.fileSize - chunkHeader.size);\n            // Jump to ID3 header\n            await this.tokenizer.ignore(Number(dsdChunk.metadataPointer) - this.tokenizer.position - p0);\n            return new _id3v2_ID3v2Parser_js__WEBPACK_IMPORTED_MODULE_3__.ID3v2Parser().parse(this.metadata, this.tokenizer, this.options);\n        }\n    }\n    async parseChunks(bytesRemaining) {\n        while (bytesRemaining >= _DsfChunk_js__WEBPACK_IMPORTED_MODULE_2__.ChunkHeader.len) {\n            const chunkHeader = await this.tokenizer.readToken(_DsfChunk_js__WEBPACK_IMPORTED_MODULE_2__.ChunkHeader);\n            debug(`Parsing chunk name=${chunkHeader.id} size=${chunkHeader.size}`);\n            switch (chunkHeader.id) {\n                case 'fmt ': {\n                    const formatChunk = await this.tokenizer.readToken(_DsfChunk_js__WEBPACK_IMPORTED_MODULE_2__.FormatChunk);\n                    this.metadata.setFormat('numberOfChannels', formatChunk.channelNum);\n                    this.metadata.setFormat('sampleRate', formatChunk.samplingFrequency);\n                    this.metadata.setFormat('bitsPerSample', formatChunk.bitsPerSample);\n                    this.metadata.setFormat('numberOfSamples', formatChunk.sampleCount);\n                    this.metadata.setFormat('duration', Number(formatChunk.sampleCount) / formatChunk.samplingFrequency);\n                    const bitrate = formatChunk.bitsPerSample * formatChunk.samplingFrequency * formatChunk.channelNum;\n                    this.metadata.setFormat('bitrate', bitrate);\n                    return; // We got what we want, stop further processing of chunks\n                }\n                default:\n                    this.tokenizer.ignore(Number(chunkHeader.size) - _DsfChunk_js__WEBPACK_IMPORTED_MODULE_2__.ChunkHeader.len);\n                    break;\n            }\n            bytesRemaining -= chunkHeader.size;\n        }\n    }\n}\n//# sourceMappingURL=DsfParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2RzZi9Ec2ZQYXJzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE4QjtBQUNvQztBQUNDO0FBQ2I7QUFDWTtBQUNsRSxjQUFjLGtDQUFTO0FBQ2hCLG1DQUFtQyw4RUFBOEI7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdCQUF3QiwwRUFBaUI7QUFDaEQ7QUFDQSw0Q0FBNEM7QUFDNUMsMkRBQTJELHFEQUFXO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELGtEQUFRO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLHlCQUF5QjtBQUNyRTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsOERBQVc7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLHFEQUFXO0FBQzVDLCtEQUErRCxxREFBVztBQUMxRSx3Q0FBd0MsZ0JBQWdCLE9BQU8saUJBQWlCO0FBQ2hGO0FBQ0E7QUFDQSx1RUFBdUUscURBQVc7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBLHFFQUFxRSxxREFBVztBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvZHNmL0RzZlBhcnNlci5qcz8yNjliIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpbml0RGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IHsgQWJzdHJhY3RJRDNQYXJzZXIgfSBmcm9tICcuLi9pZDN2Mi9BYnN0cmFjdElEM1BhcnNlci5qcyc7XG5pbXBvcnQgeyBDaHVua0hlYWRlciwgRHNkQ2h1bmssIEZvcm1hdENodW5rIH0gZnJvbSAnLi9Ec2ZDaHVuay5qcyc7XG5pbXBvcnQgeyBJRDN2MlBhcnNlciB9IGZyb20gXCIuLi9pZDN2Mi9JRDN2MlBhcnNlci5qc1wiO1xuaW1wb3J0IHsgbWFrZVVuZXhwZWN0ZWRGaWxlQ29udGVudEVycm9yIH0gZnJvbSAnLi4vUGFyc2VFcnJvci5qcyc7XG5jb25zdCBkZWJ1ZyA9IGluaXREZWJ1ZygnbXVzaWMtbWV0YWRhdGE6cGFyc2VyOkRTRicpO1xuZXhwb3J0IGNsYXNzIERzZENvbnRlbnRQYXJzZUVycm9yIGV4dGVuZHMgbWFrZVVuZXhwZWN0ZWRGaWxlQ29udGVudEVycm9yKCdEU0QnKSB7XG59XG4vKipcbiAqIERTRiAoZHNkIHN0cmVhbSBmaWxlKSBGaWxlIFBhcnNlclxuICogUmVmOiBodHRwczovL2RzZC1ndWlkZS5jb20vc2l0ZXMvZGVmYXVsdC9maWxlcy93aGl0ZS1wYXBlcnMvRFNGRmlsZUZvcm1hdFNwZWNfRS5wZGZcbiAqL1xuZXhwb3J0IGNsYXNzIERzZlBhcnNlciBleHRlbmRzIEFic3RyYWN0SUQzUGFyc2VyIHtcbiAgICBhc3luYyBwb3N0SWQzdjJQYXJzZSgpIHtcbiAgICAgICAgY29uc3QgcDAgPSB0aGlzLnRva2VuaXplci5wb3NpdGlvbjsgLy8gbWFyayBzdGFydCBwb3NpdGlvbiwgbm9ybWFsbHkgMFxuICAgICAgICBjb25zdCBjaHVua0hlYWRlciA9IGF3YWl0IHRoaXMudG9rZW5pemVyLnJlYWRUb2tlbihDaHVua0hlYWRlcik7XG4gICAgICAgIGlmIChjaHVua0hlYWRlci5pZCAhPT0gJ0RTRCAnKVxuICAgICAgICAgICAgdGhyb3cgbmV3IERzZENvbnRlbnRQYXJzZUVycm9yKCdJbnZhbGlkIGNodW5rIHNpZ25hdHVyZScpO1xuICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnY29udGFpbmVyJywgJ0RTRicpO1xuICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnbG9zc2xlc3MnLCB0cnVlKTtcbiAgICAgICAgY29uc3QgZHNkQ2h1bmsgPSBhd2FpdCB0aGlzLnRva2VuaXplci5yZWFkVG9rZW4oRHNkQ2h1bmspO1xuICAgICAgICBpZiAoZHNkQ2h1bmsubWV0YWRhdGFQb2ludGVyID09PSBCaWdJbnQoMCkpIHtcbiAgICAgICAgICAgIGRlYnVnKFwiTm8gSUQzdjIgdGFnIHByZXNlbnRcIik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBkZWJ1ZyhgZXhwZWN0IElEM3YyIGF0IG9mZnNldD0ke2RzZENodW5rLm1ldGFkYXRhUG9pbnRlcn1gKTtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMucGFyc2VDaHVua3MoZHNkQ2h1bmsuZmlsZVNpemUgLSBjaHVua0hlYWRlci5zaXplKTtcbiAgICAgICAgICAgIC8vIEp1bXAgdG8gSUQzIGhlYWRlclxuICAgICAgICAgICAgYXdhaXQgdGhpcy50b2tlbml6ZXIuaWdub3JlKE51bWJlcihkc2RDaHVuay5tZXRhZGF0YVBvaW50ZXIpIC0gdGhpcy50b2tlbml6ZXIucG9zaXRpb24gLSBwMCk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IElEM3YyUGFyc2VyKCkucGFyc2UodGhpcy5tZXRhZGF0YSwgdGhpcy50b2tlbml6ZXIsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgcGFyc2VDaHVua3MoYnl0ZXNSZW1haW5pbmcpIHtcbiAgICAgICAgd2hpbGUgKGJ5dGVzUmVtYWluaW5nID49IENodW5rSGVhZGVyLmxlbikge1xuICAgICAgICAgICAgY29uc3QgY2h1bmtIZWFkZXIgPSBhd2FpdCB0aGlzLnRva2VuaXplci5yZWFkVG9rZW4oQ2h1bmtIZWFkZXIpO1xuICAgICAgICAgICAgZGVidWcoYFBhcnNpbmcgY2h1bmsgbmFtZT0ke2NodW5rSGVhZGVyLmlkfSBzaXplPSR7Y2h1bmtIZWFkZXIuc2l6ZX1gKTtcbiAgICAgICAgICAgIHN3aXRjaCAoY2h1bmtIZWFkZXIuaWQpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdmbXQgJzoge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmb3JtYXRDaHVuayA9IGF3YWl0IHRoaXMudG9rZW5pemVyLnJlYWRUb2tlbihGb3JtYXRDaHVuayk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWV0YWRhdGEuc2V0Rm9ybWF0KCdudW1iZXJPZkNoYW5uZWxzJywgZm9ybWF0Q2h1bmsuY2hhbm5lbE51bSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWV0YWRhdGEuc2V0Rm9ybWF0KCdzYW1wbGVSYXRlJywgZm9ybWF0Q2h1bmsuc2FtcGxpbmdGcmVxdWVuY3kpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnYml0c1BlclNhbXBsZScsIGZvcm1hdENodW5rLmJpdHNQZXJTYW1wbGUpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnbnVtYmVyT2ZTYW1wbGVzJywgZm9ybWF0Q2h1bmsuc2FtcGxlQ291bnQpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnZHVyYXRpb24nLCBOdW1iZXIoZm9ybWF0Q2h1bmsuc2FtcGxlQ291bnQpIC8gZm9ybWF0Q2h1bmsuc2FtcGxpbmdGcmVxdWVuY3kpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBiaXRyYXRlID0gZm9ybWF0Q2h1bmsuYml0c1BlclNhbXBsZSAqIGZvcm1hdENodW5rLnNhbXBsaW5nRnJlcXVlbmN5ICogZm9ybWF0Q2h1bmsuY2hhbm5lbE51bTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXRhZGF0YS5zZXRGb3JtYXQoJ2JpdHJhdGUnLCBiaXRyYXRlKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOyAvLyBXZSBnb3Qgd2hhdCB3ZSB3YW50LCBzdG9wIGZ1cnRoZXIgcHJvY2Vzc2luZyBvZiBjaHVua3NcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50b2tlbml6ZXIuaWdub3JlKE51bWJlcihjaHVua0hlYWRlci5zaXplKSAtIENodW5rSGVhZGVyLmxlbik7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnl0ZXNSZW1haW5pbmcgLT0gY2h1bmtIZWFkZXIuc2l6ZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURzZlBhcnNlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/dsf/DsfParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/ebml/EbmlIterator.js":
/*!**************************************************************!*\
  !*** ./node_modules/music-metadata/lib/ebml/EbmlIterator.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EbmlContentError: () => (/* binding */ EbmlContentError),\n/* harmony export */   EbmlIterator: () => (/* binding */ EbmlIterator),\n/* harmony export */   ParseAction: () => (/* binding */ ParseAction),\n/* harmony export */   getElementPath: () => (/* binding */ getElementPath)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var strtok3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! strtok3 */ \"(rsc)/./node_modules/strtok3/lib/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/music-metadata/lib/ebml/types.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_1__('music-metadata:parser:ebml');\nclass EbmlContentError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_4__.makeUnexpectedFileContentError)('EBML') {\n}\nvar ParseAction;\n(function (ParseAction) {\n    ParseAction[ParseAction[\"ReadNext\"] = 0] = \"ReadNext\";\n    ParseAction[ParseAction[\"IgnoreElement\"] = 2] = \"IgnoreElement\";\n    ParseAction[ParseAction[\"SkipSiblings\"] = 3] = \"SkipSiblings\";\n    ParseAction[ParseAction[\"TerminateParsing\"] = 4] = \"TerminateParsing\";\n    ParseAction[ParseAction[\"SkipElement\"] = 5] = \"SkipElement\"; // Consider the element has read, assume position is at the next element\n})(ParseAction || (ParseAction = {}));\n/**\n * Extensible Binary Meta Language (EBML) iterator\n * https://en.wikipedia.org/wiki/Extensible_Binary_Meta_Language\n * http://matroska.sourceforge.net/technical/specs/rfc/index.html\n *\n * WEBM VP8 AUDIO FILE\n */\nclass EbmlIterator {\n    /**\n     * @param {ITokenizer} tokenizer Input\n     * @param tokenizer\n     */\n    constructor(tokenizer) {\n        this.tokenizer = tokenizer;\n        this.padding = 0;\n        this.parserMap = new Map();\n        this.ebmlMaxIDLength = 4;\n        this.ebmlMaxSizeLength = 8;\n        this.parserMap.set(_types_js__WEBPACK_IMPORTED_MODULE_3__.DataType.uint, e => this.readUint(e));\n        this.parserMap.set(_types_js__WEBPACK_IMPORTED_MODULE_3__.DataType.string, e => this.readString(e));\n        this.parserMap.set(_types_js__WEBPACK_IMPORTED_MODULE_3__.DataType.binary, e => this.readBuffer(e));\n        this.parserMap.set(_types_js__WEBPACK_IMPORTED_MODULE_3__.DataType.uid, async (e) => this.readBuffer(e));\n        this.parserMap.set(_types_js__WEBPACK_IMPORTED_MODULE_3__.DataType.bool, e => this.readFlag(e));\n        this.parserMap.set(_types_js__WEBPACK_IMPORTED_MODULE_3__.DataType.float, e => this.readFloat(e));\n    }\n    async iterate(dtdElement, posDone, listener) {\n        return this.parseContainer(linkParents(dtdElement), posDone, listener);\n    }\n    async parseContainer(dtdElement, posDone, listener) {\n        const tree = {};\n        while (this.tokenizer.position < posDone) {\n            let element;\n            const elementPosition = this.tokenizer.position;\n            try {\n                element = await this.readElement();\n            }\n            catch (error) {\n                if (error instanceof strtok3__WEBPACK_IMPORTED_MODULE_2__.EndOfStreamError) {\n                    break;\n                }\n                throw error;\n            }\n            const child = dtdElement.container[element.id];\n            if (child) {\n                const action = listener.startNext(child);\n                switch (action) {\n                    case ParseAction.ReadNext:\n                        {\n                            if (element.id === 0x1F43B675) {\n                                // Hack to ignore remaining segment, when cluster element received\n                                // await this.tokenizer.ignore(posDone - this.tokenizer.position);\n                                // break;\n                            }\n                            debug(`Read element: name=${getElementPath(child)}{id=0x${element.id.toString(16)}, container=${!!child.container}} at position=${elementPosition}`);\n                            if (child.container) {\n                                const res = await this.parseContainer(child, element.len >= 0 ? this.tokenizer.position + element.len : -1, listener);\n                                if (child.multiple) {\n                                    if (!tree[child.name]) {\n                                        tree[child.name] = [];\n                                    }\n                                    tree[child.name].push(res);\n                                }\n                                else {\n                                    tree[child.name] = res;\n                                }\n                                await listener.elementValue(child, res, elementPosition);\n                            }\n                            else {\n                                const parser = this.parserMap.get(child.value);\n                                if (typeof parser === 'function') {\n                                    const value = await parser(element);\n                                    tree[child.name] = value;\n                                    await listener.elementValue(child, value, elementPosition);\n                                }\n                            }\n                        }\n                        break;\n                    case ParseAction.SkipElement:\n                        debug(`Go to next element: name=${getElementPath(child)}, element.id=0x${element.id}, container=${!!child.container} at position=${elementPosition}`);\n                        break;\n                    case ParseAction.IgnoreElement:\n                        debug(`Ignore element: name=${getElementPath(child)}, element.id=0x${element.id}, container=${!!child.container} at position=${elementPosition}`);\n                        await this.tokenizer.ignore(element.len);\n                        break;\n                    case ParseAction.SkipSiblings:\n                        debug(`Ignore remaining container, at: name=${getElementPath(child)}, element.id=0x${element.id}, container=${!!child.container} at position=${elementPosition}`);\n                        await this.tokenizer.ignore(posDone - this.tokenizer.position);\n                        break;\n                    case ParseAction.TerminateParsing:\n                        debug(`Terminate parsing at element: name=${getElementPath(child)}, element.id=0x${element.id}, container=${!!child.container} at position=${elementPosition}`);\n                        return tree;\n                }\n            }\n            else {\n                switch (element.id) {\n                    case 0xec: // void\n                        this.padding += element.len;\n                        await this.tokenizer.ignore(element.len);\n                        break;\n                    default:\n                        debug(`parseEbml: parent=${getElementPath(dtdElement)}, unknown child: id=${element.id.toString(16)} at position=${elementPosition}`);\n                        this.padding += element.len;\n                        await this.tokenizer.ignore(element.len);\n                }\n            }\n        }\n        return tree;\n    }\n    async readVintData(maxLength) {\n        const msb = await this.tokenizer.peekNumber(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8);\n        let mask = 0x80;\n        let oc = 1;\n        // Calculate VINT_WIDTH\n        while ((msb & mask) === 0) {\n            if (oc > maxLength) {\n                throw new EbmlContentError('VINT value exceeding maximum size');\n            }\n            ++oc;\n            mask >>= 1;\n        }\n        const id = new Uint8Array(oc);\n        await this.tokenizer.readBuffer(id);\n        return id;\n    }\n    async readElement() {\n        const id = await this.readVintData(this.ebmlMaxIDLength);\n        const lenField = await this.readVintData(this.ebmlMaxSizeLength);\n        lenField[0] ^= 0x80 >> (lenField.length - 1);\n        return {\n            id: readUIntBE(id, id.length),\n            len: readUIntBE(lenField, lenField.length)\n        };\n    }\n    async readFloat(e) {\n        switch (e.len) {\n            case 0:\n                return 0.0;\n            case 4:\n                return this.tokenizer.readNumber(token_types__WEBPACK_IMPORTED_MODULE_0__.Float32_BE);\n            case 8:\n                return this.tokenizer.readNumber(token_types__WEBPACK_IMPORTED_MODULE_0__.Float64_BE);\n            case 10:\n                return this.tokenizer.readNumber(token_types__WEBPACK_IMPORTED_MODULE_0__.Float64_BE);\n            default:\n                throw new EbmlContentError(`Invalid IEEE-754 float length: ${e.len}`);\n        }\n    }\n    async readFlag(e) {\n        return (await this.readUint(e)) === 1;\n    }\n    async readUint(e) {\n        const buf = await this.readBuffer(e);\n        return readUIntBE(buf, e.len);\n    }\n    async readString(e) {\n        const rawString = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(e.len, 'utf-8'));\n        return rawString.replace(/\\x00.*$/g, '');\n    }\n    async readBuffer(e) {\n        const buf = new Uint8Array(e.len);\n        await this.tokenizer.readBuffer(buf);\n        return buf;\n    }\n}\nfunction readUIntBE(buf, len) {\n    return Number(readUIntBeAsBigInt(buf, len));\n}\n/**\n * Reeds an unsigned integer from a big endian buffer of length `len`\n * @param buf Buffer to decode from\n * @param len Number of bytes\n * @private\n */\nfunction readUIntBeAsBigInt(buf, len) {\n    const normalizedNumber = new Uint8Array(8);\n    const cleanNumber = buf.subarray(0, len);\n    try {\n        normalizedNumber.set(cleanNumber, 8 - len);\n        return token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_BE.get(normalizedNumber, 0);\n    }\n    catch (error) {\n        return BigInt(-1);\n    }\n}\nfunction linkParents(element) {\n    if (element.container) {\n        Object.keys(element.container)\n            .map(id => {\n            const child = element.container[id];\n            child.id = Number.parseInt(id);\n            return child;\n        }).forEach(child => {\n            child.parent = element;\n            linkParents(child);\n        });\n    }\n    return element;\n}\nfunction getElementPath(element) {\n    let path = '';\n    if (element.parent && element.parent.name !== 'dtd') {\n        path += `${getElementPath(element.parent)}/`;\n    }\n    return path + element.name;\n}\n//# sourceMappingURL=EbmlIterator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ebml/EbmlIterator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/ebml/types.js":
/*!*******************************************************!*\
  !*** ./node_modules/music-metadata/lib/ebml/types.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataType: () => (/* binding */ DataType)\n/* harmony export */ });\nvar DataType;\n(function (DataType) {\n    DataType[DataType[\"string\"] = 0] = \"string\";\n    DataType[DataType[\"uint\"] = 1] = \"uint\";\n    DataType[DataType[\"uid\"] = 2] = \"uid\";\n    DataType[DataType[\"bool\"] = 3] = \"bool\";\n    DataType[DataType[\"binary\"] = 4] = \"binary\";\n    DataType[DataType[\"float\"] = 5] = \"float\";\n})(DataType || (DataType = {}));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2VibWwvdHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRCQUE0QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvZWJtbC90eXBlcy5qcz8zNGZmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgRGF0YVR5cGU7XG4oZnVuY3Rpb24gKERhdGFUeXBlKSB7XG4gICAgRGF0YVR5cGVbRGF0YVR5cGVbXCJzdHJpbmdcIl0gPSAwXSA9IFwic3RyaW5nXCI7XG4gICAgRGF0YVR5cGVbRGF0YVR5cGVbXCJ1aW50XCJdID0gMV0gPSBcInVpbnRcIjtcbiAgICBEYXRhVHlwZVtEYXRhVHlwZVtcInVpZFwiXSA9IDJdID0gXCJ1aWRcIjtcbiAgICBEYXRhVHlwZVtEYXRhVHlwZVtcImJvb2xcIl0gPSAzXSA9IFwiYm9vbFwiO1xuICAgIERhdGFUeXBlW0RhdGFUeXBlW1wiYmluYXJ5XCJdID0gNF0gPSBcImJpbmFyeVwiO1xuICAgIERhdGFUeXBlW0RhdGFUeXBlW1wiZmxvYXRcIl0gPSA1XSA9IFwiZmxvYXRcIjtcbn0pKERhdGFUeXBlIHx8IChEYXRhVHlwZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ebml/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/flac/FlacLoader.js":
/*!************************************************************!*\
  !*** ./node_modules/music-metadata/lib/flac/FlacLoader.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flacParserLoader: () => (/* binding */ flacParserLoader)\n/* harmony export */ });\nconst flacParserLoader = {\n    parserType: 'flac',\n    extensions: ['.flac'],\n    async load(metadata, tokenizer, options) {\n        return new (await __webpack_require__.e(/*! import() */ \"vendor-chunks/music-metadata\").then(__webpack_require__.bind(__webpack_require__, /*! ./FlacParser.js */ \"(rsc)/./node_modules/music-metadata/lib/flac/FlacParser.js\"))).FlacParser(metadata, tokenizer, options);\n    }\n};\n//# sourceMappingURL=FlacLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2ZsYWMvRmxhY0xvYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsOE1BQXlCO0FBQ25EO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvZmxhYy9GbGFjTG9hZGVyLmpzPzQ5NDUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGZsYWNQYXJzZXJMb2FkZXIgPSB7XG4gICAgcGFyc2VyVHlwZTogJ2ZsYWMnLFxuICAgIGV4dGVuc2lvbnM6IFsnLmZsYWMnXSxcbiAgICBhc3luYyBsb2FkKG1ldGFkYXRhLCB0b2tlbml6ZXIsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyAoYXdhaXQgaW1wb3J0KCcuL0ZsYWNQYXJzZXIuanMnKSkuRmxhY1BhcnNlcihtZXRhZGF0YSwgdG9rZW5pemVyLCBvcHRpb25zKTtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RmxhY0xvYWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/flac/FlacLoader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/flac/FlacParser.js":
/*!************************************************************!*\
  !*** ./node_modules/music-metadata/lib/flac/FlacParser.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FlacParser: () => (/* binding */ FlacParser)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n/* harmony import */ var _ogg_vorbis_Vorbis_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ogg/vorbis/Vorbis.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/Vorbis.js\");\n/* harmony import */ var _id3v2_AbstractID3Parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../id3v2/AbstractID3Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/AbstractID3Parser.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/FourCC.js */ \"(rsc)/./node_modules/music-metadata/lib/common/FourCC.js\");\n/* harmony import */ var _ogg_vorbis_VorbisParser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ogg/vorbis/VorbisParser.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/VorbisParser.js\");\n/* harmony import */ var _ogg_vorbis_VorbisDecoder_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ogg/vorbis/VorbisDecoder.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/VorbisDecoder.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\n\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_1__('music-metadata:parser:FLAC');\nclass FlacContentError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_8__.makeUnexpectedFileContentError)('FLAC') {\n}\n/**\n * FLAC supports up to 128 kinds of metadata blocks; currently the following are defined:\n * ref: https://xiph.org/flac/format.html#metadata_block\n */\nvar BlockType;\n(function (BlockType) {\n    BlockType[BlockType[\"STREAMINFO\"] = 0] = \"STREAMINFO\";\n    BlockType[BlockType[\"PADDING\"] = 1] = \"PADDING\";\n    BlockType[BlockType[\"APPLICATION\"] = 2] = \"APPLICATION\";\n    BlockType[BlockType[\"SEEKTABLE\"] = 3] = \"SEEKTABLE\";\n    BlockType[BlockType[\"VORBIS_COMMENT\"] = 4] = \"VORBIS_COMMENT\";\n    BlockType[BlockType[\"CUESHEET\"] = 5] = \"CUESHEET\";\n    BlockType[BlockType[\"PICTURE\"] = 6] = \"PICTURE\";\n})(BlockType || (BlockType = {}));\nclass FlacParser extends _id3v2_AbstractID3Parser_js__WEBPACK_IMPORTED_MODULE_4__.AbstractID3Parser {\n    constructor() {\n        super(...arguments);\n        this.vorbisParser = new _ogg_vorbis_VorbisParser_js__WEBPACK_IMPORTED_MODULE_6__.VorbisParser(this.metadata, this.options);\n        this.padding = 0;\n    }\n    async postId3v2Parse() {\n        const fourCC = await this.tokenizer.readToken(_common_FourCC_js__WEBPACK_IMPORTED_MODULE_5__.FourCcToken);\n        if (fourCC.toString() !== 'fLaC') {\n            throw new FlacContentError('Invalid FLAC preamble');\n        }\n        let blockHeader;\n        do {\n            // Read block header\n            blockHeader = await this.tokenizer.readToken(BlockHeader);\n            // Parse block data\n            await this.parseDataBlock(blockHeader);\n        } while (!blockHeader.lastBlock);\n        if (this.tokenizer.fileInfo.size && this.metadata.format.duration) {\n            const dataSize = this.tokenizer.fileInfo.size - this.tokenizer.position;\n            this.metadata.setFormat('bitrate', 8 * dataSize / this.metadata.format.duration);\n        }\n    }\n    async parseDataBlock(blockHeader) {\n        debug(`blockHeader type=${blockHeader.type}, length=${blockHeader.length}`);\n        switch (blockHeader.type) {\n            case BlockType.STREAMINFO:\n                return this.parseBlockStreamInfo(blockHeader.length);\n            case BlockType.PADDING:\n                this.padding += blockHeader.length;\n                break;\n            case BlockType.APPLICATION:\n                break;\n            case BlockType.SEEKTABLE:\n                break;\n            case BlockType.VORBIS_COMMENT:\n                return this.parseComment(blockHeader.length);\n            case BlockType.CUESHEET:\n                break;\n            case BlockType.PICTURE:\n                await this.parsePicture(blockHeader.length);\n                return;\n            default:\n                this.metadata.addWarning(`Unknown block type: ${blockHeader.type}`);\n        }\n        // Ignore data block\n        return this.tokenizer.ignore(blockHeader.length).then();\n    }\n    /**\n     * Parse STREAMINFO\n     */\n    async parseBlockStreamInfo(dataLen) {\n        if (dataLen !== BlockStreamInfo.len)\n            throw new FlacContentError('Unexpected block-stream-info length');\n        const streamInfo = await this.tokenizer.readToken(BlockStreamInfo);\n        this.metadata.setFormat('container', 'FLAC');\n        this.metadata.setFormat('codec', 'FLAC');\n        this.metadata.setFormat('lossless', true);\n        this.metadata.setFormat('numberOfChannels', streamInfo.channels);\n        this.metadata.setFormat('bitsPerSample', streamInfo.bitsPerSample);\n        this.metadata.setFormat('sampleRate', streamInfo.sampleRate);\n        if (streamInfo.totalSamples > 0) {\n            this.metadata.setFormat('duration', streamInfo.totalSamples / streamInfo.sampleRate);\n        }\n    }\n    /**\n     * Parse VORBIS_COMMENT\n     * Ref: https://www.xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-640004.2.3\n     */\n    async parseComment(dataLen) {\n        const data = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayType(dataLen));\n        const decoder = new _ogg_vorbis_VorbisDecoder_js__WEBPACK_IMPORTED_MODULE_7__.VorbisDecoder(data, 0);\n        decoder.readStringUtf8(); // vendor (skip)\n        const commentListLength = decoder.readInt32();\n        const tags = new Array(commentListLength);\n        for (let i = 0; i < commentListLength; i++) {\n            tags[i] = decoder.parseUserComment();\n        }\n        await Promise.all(tags.map(tag => this.vorbisParser.addTag(tag.key, tag.value)));\n    }\n    async parsePicture(dataLen) {\n        if (this.options.skipCovers) {\n            return this.tokenizer.ignore(dataLen);\n        }\n        const picture = await this.tokenizer.readToken(new _ogg_vorbis_Vorbis_js__WEBPACK_IMPORTED_MODULE_3__.VorbisPictureToken(dataLen));\n        this.vorbisParser.addTag('METADATA_BLOCK_PICTURE', picture);\n    }\n}\nconst BlockHeader = {\n    len: 4,\n    get: (buf, off) => {\n        return {\n            lastBlock: _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.getBit(buf, off, 7),\n            type: _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.getBitAllignedNumber(buf, off, 1, 7),\n            length: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_BE.get(buf, off + 1)\n        };\n    }\n};\n/**\n * METADATA_BLOCK_DATA\n * Ref: https://xiph.org/flac/format.html#metadata_block_streaminfo\n */\nconst BlockStreamInfo = {\n    len: 34,\n    get: (buf, off) => {\n        return {\n            // The minimum block size (in samples) used in the stream.\n            minimumBlockSize: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off),\n            // The maximum block size (in samples) used in the stream.\n            // (Minimum blocksize == maximum blocksize) implies a fixed-blocksize stream.\n            maximumBlockSize: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 2) / 1000,\n            // The minimum frame size (in bytes) used in the stream.\n            // May be 0 to imply the value is not known.\n            minimumFrameSize: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_BE.get(buf, off + 4),\n            // The maximum frame size (in bytes) used in the stream.\n            // May be 0 to imply the value is not known.\n            maximumFrameSize: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_BE.get(buf, off + 7),\n            // Sample rate in Hz. Though 20 bits are available,\n            // the maximum sample rate is limited by the structure of frame headers to 655350Hz.\n            // Also, a value of 0 is invalid.\n            sampleRate: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_BE.get(buf, off + 10) >> 4,\n            // probably slower: sampleRate: common.getBitAllignedNumber(buf, off + 10, 0, 20),\n            // (number of channels)-1. FLAC supports from 1 to 8 channels\n            channels: _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.getBitAllignedNumber(buf, off + 12, 4, 3) + 1,\n            // bits per sample)-1.\n            // FLAC supports from 4 to 32 bits per sample. Currently the reference encoder and decoders only support up to 24 bits per sample.\n            bitsPerSample: _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.getBitAllignedNumber(buf, off + 12, 7, 5) + 1,\n            // Total samples in stream.\n            // 'Samples' means inter-channel sample, i.e. one second of 44.1Khz audio will have 44100 samples regardless of the number of channels.\n            // A value of zero here means the number of total samples is unknown.\n            totalSamples: _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.getBitAllignedNumber(buf, off + 13, 4, 36),\n            // the MD5 hash of the file (see notes for usage... it's a littly tricky)\n            fileMD5: new token_types__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayType(16).get(buf, off + 18)\n        };\n    }\n};\n//# sourceMappingURL=FlacParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/flac/FlacParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/id3v1/ID3v1Parser.js":
/*!**************************************************************!*\
  !*** ./node_modules/music-metadata/lib/id3v1/ID3v1Parser.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Genres: () => (/* binding */ Genres),\n/* harmony export */   ID3v1Parser: () => (/* binding */ ID3v1Parser),\n/* harmony export */   hasID3v1Header: () => (/* binding */ hasID3v1Header)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/BasicParser.js */ \"(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js\");\n/* harmony import */ var _apev2_APEv2Parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../apev2/APEv2Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/apev2/APEv2Parser.js\");\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('music-metadata:parser:ID3v1');\n/**\n * ID3v1 Genre mappings\n * Ref: https://de.wikipedia.org/wiki/Liste_der_ID3v1-Genres\n */\nconst Genres = [\n    'Blues', 'Classic Rock', 'Country', 'Dance', 'Disco', 'Funk', 'Grunge', 'Hip-Hop',\n    'Jazz', 'Metal', 'New Age', 'Oldies', 'Other', 'Pop', 'R&B', 'Rap', 'Reggae', 'Rock',\n    'Techno', 'Industrial', 'Alternative', 'Ska', 'Death Metal', 'Pranks', 'Soundtrack',\n    'Euro-Techno', 'Ambient', 'Trip-Hop', 'Vocal', 'Jazz+Funk', 'Fusion', 'Trance',\n    'Classical', 'Instrumental', 'Acid', 'House', 'Game', 'Sound Clip', 'Gospel', 'Noise',\n    'Alt. Rock', 'Bass', 'Soul', 'Punk', 'Space', 'Meditative', 'Instrumental Pop',\n    'Instrumental Rock', 'Ethnic', 'Gothic', 'Darkwave', 'Techno-Industrial',\n    'Electronic', 'Pop-Folk', 'Eurodance', 'Dream', 'Southern Rock', 'Comedy', 'Cult',\n    'Gangsta Rap', 'Top 40', 'Christian Rap', 'Pop/Funk', 'Jungle', 'Native American',\n    'Cabaret', 'New Wave', 'Psychedelic', 'Rave', 'Showtunes', 'Trailer', 'Lo-Fi', 'Tribal',\n    'Acid Punk', 'Acid Jazz', 'Polka', 'Retro', 'Musical', 'Rock & Roll', 'Hard Rock',\n    'Folk', 'Folk/Rock', 'National Folk', 'Swing', 'Fast-Fusion', 'Bebob', 'Latin', 'Revival',\n    'Celtic', 'Bluegrass', 'Avantgarde', 'Gothic Rock', 'Progressive Rock', 'Psychedelic Rock',\n    'Symphonic Rock', 'Slow Rock', 'Big Band', 'Chorus', 'Easy Listening', 'Acoustic', 'Humour',\n    'Speech', 'Chanson', 'Opera', 'Chamber Music', 'Sonata', 'Symphony', 'Booty Bass', 'Primus',\n    'Porn Groove', 'Satire', 'Slow Jam', 'Club', 'Tango', 'Samba', 'Folklore',\n    'Ballad', 'Power Ballad', 'Rhythmic Soul', 'Freestyle', 'Duet', 'Punk Rock', 'Drum Solo',\n    'A Cappella', 'Euro-House', 'Dance Hall', 'Goa', 'Drum & Bass', 'Club-House',\n    'Hardcore', 'Terror', 'Indie', 'BritPop', 'Negerpunk', 'Polsk Punk', 'Beat',\n    'Christian Gangsta Rap', 'Heavy Metal', 'Black Metal', 'Crossover', 'Contemporary Christian',\n    'Christian Rock', 'Merengue', 'Salsa', 'Thrash Metal', 'Anime', 'JPop', 'Synthpop',\n    'Abstract', 'Art Rock', 'Baroque', 'Bhangra', 'Big Beat', 'Breakbeat', 'Chillout',\n    'Downtempo', 'Dub', 'EBM', 'Eclectic', 'Electro', 'Electroclash', 'Emo', 'Experimental',\n    'Garage', 'Global', 'IDM', 'Illbient', 'Industro-Goth', 'Jam Band', 'Krautrock',\n    'Leftfield', 'Lounge', 'Math Rock', 'New Romantic', 'Nu-Breakz', 'Post-Punk', 'Post-Rock',\n    'Psytrance', 'Shoegaze', 'Space Rock', 'Trop Rock', 'World Music', 'Neoclassical', 'Audiobook',\n    'Audio Theatre', 'Neue Deutsche Welle', 'Podcast', 'Indie Rock', 'G-Funk', 'Dubstep',\n    'Garage Rock', 'Psybient'\n];\n/**\n * Spec: http://id3.org/ID3v1\n * Wiki: https://en.wikipedia.org/wiki/ID3\n */\nconst Iid3v1Token = {\n    len: 128,\n    /**\n     * @param buf Buffer possibly holding the 128 bytes ID3v1.1 metadata header\n     * @param off Offset in buffer in bytes\n     * @returns ID3v1.1 header if first 3 bytes equals 'TAG', otherwise null is returned\n     */\n    get: (buf, off) => {\n        const header = new Id3v1StringType(3).get(buf, off);\n        return header === 'TAG' ? {\n            header,\n            title: new Id3v1StringType(30).get(buf, off + 3),\n            artist: new Id3v1StringType(30).get(buf, off + 33),\n            album: new Id3v1StringType(30).get(buf, off + 63),\n            year: new Id3v1StringType(4).get(buf, off + 93),\n            comment: new Id3v1StringType(28).get(buf, off + 97),\n            // ID3v1.1 separator for track\n            zeroByte: token_types__WEBPACK_IMPORTED_MODULE_1__.UINT8.get(buf, off + 127),\n            // track: ID3v1.1 field added by Michael Mutschler\n            track: token_types__WEBPACK_IMPORTED_MODULE_1__.UINT8.get(buf, off + 126),\n            genre: token_types__WEBPACK_IMPORTED_MODULE_1__.UINT8.get(buf, off + 127)\n        } : null;\n    }\n};\nclass Id3v1StringType {\n    constructor(len) {\n        this.len = len;\n        this.stringType = new token_types__WEBPACK_IMPORTED_MODULE_1__.StringType(len, 'latin1');\n    }\n    get(buf, off) {\n        let value = this.stringType.get(buf, off);\n        value = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.trimRightNull(value);\n        value = value.trim();\n        return value.length > 0 ? value : undefined;\n    }\n}\nclass ID3v1Parser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_3__.BasicParser {\n    constructor(metadata, tokenizer, options) {\n        super(metadata, tokenizer, options);\n        this.apeHeader = options.apeHeader;\n    }\n    static getGenre(genreIndex) {\n        if (genreIndex < Genres.length) {\n            return Genres[genreIndex];\n        }\n        return undefined; // ToDO: generate warning\n    }\n    async parse() {\n        if (!this.tokenizer.fileInfo.size) {\n            debug('Skip checking for ID3v1 because the file-size is unknown');\n            return;\n        }\n        if (this.apeHeader) {\n            this.tokenizer.ignore(this.apeHeader.offset - this.tokenizer.position);\n            const apeParser = new _apev2_APEv2Parser_js__WEBPACK_IMPORTED_MODULE_4__.APEv2Parser(this.metadata, this.tokenizer, this.options);\n            await apeParser.parseTags(this.apeHeader.footer);\n        }\n        const offset = this.tokenizer.fileInfo.size - Iid3v1Token.len;\n        if (this.tokenizer.position > offset) {\n            debug('Already consumed the last 128 bytes');\n            return;\n        }\n        const header = await this.tokenizer.readToken(Iid3v1Token, offset);\n        if (header) {\n            debug('ID3v1 header found at: pos=%s', this.tokenizer.fileInfo.size - Iid3v1Token.len);\n            const props = ['title', 'artist', 'album', 'comment', 'track', 'year'];\n            for (const id of props) {\n                if (header[id] && header[id] !== '')\n                    await this.addTag(id, header[id]);\n            }\n            const genre = ID3v1Parser.getGenre(header.genre);\n            if (genre)\n                await this.addTag('genre', genre);\n        }\n        else {\n            debug('ID3v1 header not found at: pos=%s', this.tokenizer.fileInfo.size - Iid3v1Token.len);\n        }\n    }\n    async addTag(id, value) {\n        await this.metadata.addTag('ID3v1', id, value);\n    }\n}\nasync function hasID3v1Header(tokenizer) {\n    if (tokenizer.fileInfo.size >= 128) {\n        const tag = new Uint8Array(3);\n        const position = tokenizer.position;\n        await tokenizer.readBuffer(tag, { position: tokenizer.fileInfo.size - 128 });\n        tokenizer.setPosition(position); // Restore tokenizer position\n        return new TextDecoder('latin1').decode(tag) === 'TAG';\n    }\n    return false;\n}\n//# sourceMappingURL=ID3v1Parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/id3v1/ID3v1Parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/id3v1/ID3v1TagMap.js":
/*!**************************************************************!*\
  !*** ./node_modules/music-metadata/lib/id3v1/ID3v1TagMap.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ID3v1TagMapper: () => (/* binding */ ID3v1TagMapper)\n/* harmony export */ });\n/* harmony import */ var _common_GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/GenericTagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/common/GenericTagMapper.js\");\n\n/**\n * ID3v1 tag mappings\n */\nconst id3v1TagMap = {\n    title: 'title',\n    artist: 'artist',\n    album: 'album',\n    year: 'year',\n    comment: 'comment',\n    track: 'track',\n    genre: 'genre'\n};\nclass ID3v1TagMapper extends _common_GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_0__.CommonTagMapper {\n    constructor() {\n        super(['ID3v1'], id3v1TagMap);\n    }\n}\n//# sourceMappingURL=ID3v1TagMap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2lkM3YxL0lEM3YxVGFnTWFwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdFO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDZCQUE2Qix3RUFBZTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9pZDN2MS9JRDN2MVRhZ01hcC5qcz8wZTJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vblRhZ01hcHBlciB9IGZyb20gJy4uL2NvbW1vbi9HZW5lcmljVGFnTWFwcGVyLmpzJztcbi8qKlxuICogSUQzdjEgdGFnIG1hcHBpbmdzXG4gKi9cbmNvbnN0IGlkM3YxVGFnTWFwID0ge1xuICAgIHRpdGxlOiAndGl0bGUnLFxuICAgIGFydGlzdDogJ2FydGlzdCcsXG4gICAgYWxidW06ICdhbGJ1bScsXG4gICAgeWVhcjogJ3llYXInLFxuICAgIGNvbW1lbnQ6ICdjb21tZW50JyxcbiAgICB0cmFjazogJ3RyYWNrJyxcbiAgICBnZW5yZTogJ2dlbnJlJ1xufTtcbmV4cG9ydCBjbGFzcyBJRDN2MVRhZ01hcHBlciBleHRlbmRzIENvbW1vblRhZ01hcHBlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKFsnSUQzdjEnXSwgaWQzdjFUYWdNYXApO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlEM3YxVGFnTWFwLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/id3v1/ID3v1TagMap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/id3v2/AbstractID3Parser.js":
/*!********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/id3v2/AbstractID3Parser.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractID3Parser: () => (/* binding */ AbstractID3Parser)\n/* harmony export */ });\n/* harmony import */ var strtok3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! strtok3 */ \"(rsc)/./node_modules/strtok3/lib/index.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ID3v2Token.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v2Token.js\");\n/* harmony import */ var _ID3v2Parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ID3v2Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v2Parser.js\");\n/* harmony import */ var _id3v1_ID3v1Parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../id3v1/ID3v1Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v1/ID3v1Parser.js\");\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/BasicParser.js */ \"(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js\");\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_1__('music-metadata:parser:ID3');\n/**\n * Abstract parser which tries take ID3v2 and ID3v1 headers.\n */\nclass AbstractID3Parser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_5__.BasicParser {\n    constructor() {\n        super(...arguments);\n        this.id3parser = new _ID3v2Parser_js__WEBPACK_IMPORTED_MODULE_3__.ID3v2Parser();\n    }\n    static async startsWithID3v2Header(tokenizer) {\n        return (await tokenizer.peekToken(_ID3v2Token_js__WEBPACK_IMPORTED_MODULE_2__.ID3v2Header)).fileIdentifier === 'ID3';\n    }\n    async parse() {\n        try {\n            await this.parseID3v2();\n        }\n        catch (err) {\n            if (err instanceof strtok3__WEBPACK_IMPORTED_MODULE_0__.EndOfStreamError) {\n                debug(\"End-of-stream\");\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    finalize() {\n        return;\n    }\n    async parseID3v2() {\n        await this.tryReadId3v2Headers();\n        debug('End of ID3v2 header, go to MPEG-parser: pos=%s', this.tokenizer.position);\n        await this.postId3v2Parse();\n        if (this.options.skipPostHeaders && this.metadata.hasAny()) {\n            this.finalize();\n        }\n        else {\n            const id3v1parser = new _id3v1_ID3v1Parser_js__WEBPACK_IMPORTED_MODULE_4__.ID3v1Parser(this.metadata, this.tokenizer, this.options);\n            await id3v1parser.parse();\n            this.finalize();\n        }\n    }\n    async tryReadId3v2Headers() {\n        const id3Header = await this.tokenizer.peekToken(_ID3v2Token_js__WEBPACK_IMPORTED_MODULE_2__.ID3v2Header);\n        if (id3Header.fileIdentifier === 'ID3') {\n            debug('Found ID3v2 header, pos=%s', this.tokenizer.position);\n            await this.id3parser.parse(this.metadata, this.tokenizer, this.options);\n            return this.tryReadId3v2Headers();\n        }\n    }\n}\n//# sourceMappingURL=AbstractID3Parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2lkM3YyL0Fic3RyYWN0SUQzUGFyc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMkM7QUFDYjtBQUNnQjtBQUNDO0FBQ087QUFDQztBQUN2RCxjQUFjLGtDQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNPLGdDQUFnQywrREFBVztBQUNsRDtBQUNBO0FBQ0EsNkJBQTZCLHdEQUFXO0FBQ3hDO0FBQ0E7QUFDQSwwQ0FBMEMsdURBQVc7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHFEQUFnQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsOERBQVc7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCx1REFBVztBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9pZDN2Mi9BYnN0cmFjdElEM1BhcnNlci5qcz9kY2JkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVuZE9mU3RyZWFtRXJyb3IgfSBmcm9tICdzdHJ0b2szJztcbmltcG9ydCBpbml0RGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IHsgSUQzdjJIZWFkZXIgfSBmcm9tICcuL0lEM3YyVG9rZW4uanMnO1xuaW1wb3J0IHsgSUQzdjJQYXJzZXIgfSBmcm9tICcuL0lEM3YyUGFyc2VyLmpzJztcbmltcG9ydCB7IElEM3YxUGFyc2VyIH0gZnJvbSAnLi4vaWQzdjEvSUQzdjFQYXJzZXIuanMnO1xuaW1wb3J0IHsgQmFzaWNQYXJzZXIgfSBmcm9tICcuLi9jb21tb24vQmFzaWNQYXJzZXIuanMnO1xuY29uc3QgZGVidWcgPSBpbml0RGVidWcoJ211c2ljLW1ldGFkYXRhOnBhcnNlcjpJRDMnKTtcbi8qKlxuICogQWJzdHJhY3QgcGFyc2VyIHdoaWNoIHRyaWVzIHRha2UgSUQzdjIgYW5kIElEM3YxIGhlYWRlcnMuXG4gKi9cbmV4cG9ydCBjbGFzcyBBYnN0cmFjdElEM1BhcnNlciBleHRlbmRzIEJhc2ljUGFyc2VyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5pZDNwYXJzZXIgPSBuZXcgSUQzdjJQYXJzZXIoKTtcbiAgICB9XG4gICAgc3RhdGljIGFzeW5jIHN0YXJ0c1dpdGhJRDN2MkhlYWRlcih0b2tlbml6ZXIpIHtcbiAgICAgICAgcmV0dXJuIChhd2FpdCB0b2tlbml6ZXIucGVla1Rva2VuKElEM3YySGVhZGVyKSkuZmlsZUlkZW50aWZpZXIgPT09ICdJRDMnO1xuICAgIH1cbiAgICBhc3luYyBwYXJzZSgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMucGFyc2VJRDN2MigpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIGlmIChlcnIgaW5zdGFuY2VvZiBFbmRPZlN0cmVhbUVycm9yKSB7XG4gICAgICAgICAgICAgICAgZGVidWcoXCJFbmQtb2Ytc3RyZWFtXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGZpbmFsaXplKCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGFzeW5jIHBhcnNlSUQzdjIoKSB7XG4gICAgICAgIGF3YWl0IHRoaXMudHJ5UmVhZElkM3YySGVhZGVycygpO1xuICAgICAgICBkZWJ1ZygnRW5kIG9mIElEM3YyIGhlYWRlciwgZ28gdG8gTVBFRy1wYXJzZXI6IHBvcz0lcycsIHRoaXMudG9rZW5pemVyLnBvc2l0aW9uKTtcbiAgICAgICAgYXdhaXQgdGhpcy5wb3N0SWQzdjJQYXJzZSgpO1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnNraXBQb3N0SGVhZGVycyAmJiB0aGlzLm1ldGFkYXRhLmhhc0FueSgpKSB7XG4gICAgICAgICAgICB0aGlzLmZpbmFsaXplKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBpZDN2MXBhcnNlciA9IG5ldyBJRDN2MVBhcnNlcih0aGlzLm1ldGFkYXRhLCB0aGlzLnRva2VuaXplciwgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgICAgIGF3YWl0IGlkM3YxcGFyc2VyLnBhcnNlKCk7XG4gICAgICAgICAgICB0aGlzLmZpbmFsaXplKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgdHJ5UmVhZElkM3YySGVhZGVycygpIHtcbiAgICAgICAgY29uc3QgaWQzSGVhZGVyID0gYXdhaXQgdGhpcy50b2tlbml6ZXIucGVla1Rva2VuKElEM3YySGVhZGVyKTtcbiAgICAgICAgaWYgKGlkM0hlYWRlci5maWxlSWRlbnRpZmllciA9PT0gJ0lEMycpIHtcbiAgICAgICAgICAgIGRlYnVnKCdGb3VuZCBJRDN2MiBoZWFkZXIsIHBvcz0lcycsIHRoaXMudG9rZW5pemVyLnBvc2l0aW9uKTtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuaWQzcGFyc2VyLnBhcnNlKHRoaXMubWV0YWRhdGEsIHRoaXMudG9rZW5pemVyLCB0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudHJ5UmVhZElkM3YySGVhZGVycygpO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWJzdHJhY3RJRDNQYXJzZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/id3v2/AbstractID3Parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/id3v2/FrameParser.js":
/*!**************************************************************!*\
  !*** ./node_modules/music-metadata/lib/id3v2/FrameParser.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FrameParser: () => (/* binding */ FrameParser),\n/* harmony export */   Id3v2ContentError: () => (/* binding */ Id3v2ContentError),\n/* harmony export */   parseGenre: () => (/* binding */ parseGenre)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n/* harmony import */ var _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ID3v2Token.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v2Token.js\");\n/* harmony import */ var _id3v1_ID3v1Parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../id3v1/ID3v1Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v1/ID3v1Parser.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('music-metadata:id3v2:frame-parser');\nconst defaultEnc = 'latin1'; // latin1 == iso-8859-1;\nfunction parseGenre(origVal) {\n    // match everything inside parentheses\n    const genres = [];\n    let code;\n    let word = '';\n    for (const c of origVal) {\n        if (typeof code === 'string') {\n            if (c === '(' && code === '') {\n                word += '(';\n                code = undefined;\n            }\n            else if (c === ')') {\n                if (word !== '') {\n                    genres.push(word);\n                    word = '';\n                }\n                const genre = parseGenreCode(code);\n                if (genre) {\n                    genres.push(genre);\n                }\n                code = undefined;\n            }\n            else\n                code += c;\n        }\n        else if (c === '(') {\n            code = '';\n        }\n        else {\n            word += c;\n        }\n    }\n    if (word) {\n        if (genres.length === 0 && word.match(/^\\d*$/)) {\n            word = parseGenreCode(word);\n        }\n        if (word) {\n            genres.push(word);\n        }\n    }\n    return genres;\n}\nfunction parseGenreCode(code) {\n    if (code === 'RX')\n        return 'Remix';\n    if (code === 'CR')\n        return 'Cover';\n    if (code.match(/^\\d*$/)) {\n        return _id3v1_ID3v1Parser_js__WEBPACK_IMPORTED_MODULE_4__.Genres[Number.parseInt(code)];\n    }\n}\nclass FrameParser {\n    /**\n     * Create id3v2 frame parser\n     * @param major - Major version, e.g. (4) for  id3v2.4\n     * @param warningCollector - Used to collect decode issue\n     */\n    constructor(major, warningCollector) {\n        this.major = major;\n        this.warningCollector = warningCollector;\n    }\n    readData(uint8Array, type, includeCovers) {\n        if (uint8Array.length === 0) {\n            this.warningCollector.addWarning(`id3v2.${this.major} header has empty tag type=${type}`);\n            return;\n        }\n        const { encoding, bom } = _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.TextEncodingToken.get(uint8Array, 0);\n        const length = uint8Array.length;\n        let offset = 0;\n        let output = []; // ToDo\n        const nullTerminatorLength = FrameParser.getNullTerminatorLength(encoding);\n        let fzero;\n        debug(`Parsing tag type=${type}, encoding=${encoding}, bom=${bom}`);\n        switch (type !== 'TXXX' && type[0] === 'T' ? 'T*' : type) {\n            case 'T*': // 4.2.1. Text information frames - details\n            case 'GRP1': // iTunes-specific ID3v2 grouping field\n            case 'IPLS': // v2.3: Involved people list\n            case 'MVIN':\n            case 'MVNM':\n            case 'PCS':\n            case 'PCST': {\n                let text;\n                try {\n                    text = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(1), encoding).replace(/\\x00+$/, '');\n                }\n                catch (error) {\n                    if (error instanceof Error) {\n                        this.warningCollector.addWarning(`id3v2.${this.major} type=${type} header has invalid string value: ${error.message}`);\n                        break;\n                    }\n                    throw error;\n                }\n                switch (type) {\n                    case 'TMCL': // Musician credits list\n                    case 'TIPL': // Involved people list\n                    case 'IPLS': // Involved people list\n                        output = FrameParser.functionList(this.splitValue(type, text));\n                        break;\n                    case 'TRK':\n                    case 'TRCK':\n                    case 'TPOS':\n                        output = text;\n                        break;\n                    case 'TCOM':\n                    case 'TEXT':\n                    case 'TOLY':\n                    case 'TOPE':\n                    case 'TPE1':\n                    case 'TSRC':\n                        // id3v2.3 defines that TCOM, TEXT, TOLY, TOPE & TPE1 values are separated by /\n                        output = this.splitValue(type, text);\n                        break;\n                    case 'TCO':\n                    case 'TCON':\n                        output = this.splitValue(type, text).map(v => parseGenre(v)).reduce((acc, val) => acc.concat(val), []);\n                        break;\n                    case 'PCS':\n                    case 'PCST':\n                        // TODO: Why `default` not results `1` but `''`?\n                        output = this.major >= 4 ? this.splitValue(type, text) : [text];\n                        output = (Array.isArray(output) && output[0] === '') ? 1 : 0;\n                        break;\n                    default:\n                        output = this.major >= 4 ? this.splitValue(type, text) : [text];\n                }\n                break;\n            }\n            case 'TXXX': {\n                const idAndData = FrameParser.readIdentifierAndData(uint8Array, offset + 1, length, encoding);\n                const textTag = {\n                    description: idAndData.id,\n                    text: this.splitValue(type, _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(idAndData.data, encoding).replace(/\\x00+$/, ''))\n                };\n                output = textTag;\n                break;\n            }\n            case 'PIC':\n            case 'APIC':\n                if (includeCovers) {\n                    const pic = {};\n                    offset += 1;\n                    switch (this.major) {\n                        case 2:\n                            pic.format = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, offset + 3), 'latin1'); // 'latin1'; // latin1 == iso-8859-1;\n                            offset += 3;\n                            break;\n                        case 3:\n                        case 4:\n                            fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset, length, defaultEnc);\n                            pic.format = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, fzero), defaultEnc);\n                            offset = fzero + 1;\n                            break;\n                        default:\n                            throw makeUnexpectedMajorVersionError(this.major);\n                    }\n                    pic.format = FrameParser.fixPictureMimeType(pic.format);\n                    pic.type = _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.AttachedPictureType[uint8Array[offset]];\n                    offset += 1;\n                    fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset, length, encoding);\n                    pic.description = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, fzero), encoding);\n                    offset = fzero + nullTerminatorLength;\n                    pic.data = uint8Array.slice(offset, length);\n                    output = pic;\n                }\n                break;\n            case 'CNT':\n            case 'PCNT':\n                output = token_types__WEBPACK_IMPORTED_MODULE_1__.UINT32_BE.get(uint8Array, 0);\n                break;\n            case 'SYLT': {\n                const syltHeader = _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.SyncTextHeader.get(uint8Array, 0);\n                offset += _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.SyncTextHeader.len;\n                const result = {\n                    descriptor: '',\n                    language: syltHeader.language,\n                    contentType: syltHeader.contentType,\n                    timeStampFormat: syltHeader.timeStampFormat,\n                    syncText: []\n                };\n                let readSyllables = false;\n                while (offset < length) {\n                    const nullStr = FrameParser.readNullTerminatedString(uint8Array.subarray(offset), syltHeader.encoding);\n                    offset += nullStr.len;\n                    if (readSyllables) {\n                        const timestamp = token_types__WEBPACK_IMPORTED_MODULE_1__.UINT32_BE.get(uint8Array, offset);\n                        offset += token_types__WEBPACK_IMPORTED_MODULE_1__.UINT32_BE.len;\n                        result.syncText.push({\n                            text: nullStr.text,\n                            timestamp\n                        });\n                    }\n                    else {\n                        result.descriptor = nullStr.text;\n                        readSyllables = true;\n                    }\n                }\n                output = result;\n                break;\n            }\n            case 'ULT':\n            case 'USLT':\n            case 'COM':\n            case 'COMM': {\n                const textHeader = _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.TextHeader.get(uint8Array, offset);\n                offset += _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.TextHeader.len;\n                const descriptorStr = FrameParser.readNullTerminatedString(uint8Array.subarray(offset), textHeader.encoding);\n                offset += descriptorStr.len;\n                const textStr = FrameParser.readNullTerminatedString(uint8Array.subarray(offset), textHeader.encoding);\n                const comment = {\n                    language: textHeader.language,\n                    descriptor: descriptorStr.text,\n                    text: textStr.text\n                };\n                output = comment;\n                break;\n            }\n            case 'UFID': {\n                const ufid = FrameParser.readIdentifierAndData(uint8Array, offset, length, defaultEnc);\n                output = { owner_identifier: ufid.id, identifier: ufid.data };\n                break;\n            }\n            case 'PRIV': { // private frame\n                const priv = FrameParser.readIdentifierAndData(uint8Array, offset, length, defaultEnc);\n                output = { owner_identifier: priv.id, data: priv.data };\n                break;\n            }\n            case 'POPM': { // Popularimeter\n                fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset, length, defaultEnc);\n                const email = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, fzero), defaultEnc);\n                offset = fzero + 1;\n                const dataLen = length - offset;\n                output = {\n                    email,\n                    rating: token_types__WEBPACK_IMPORTED_MODULE_1__.UINT8.get(uint8Array, offset),\n                    counter: dataLen >= 5 ? token_types__WEBPACK_IMPORTED_MODULE_1__.UINT32_BE.get(uint8Array, offset + 1) : undefined\n                };\n                break;\n            }\n            case 'GEOB': { // General encapsulated object\n                fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset + 1, length, encoding);\n                const mimeType = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset + 1, fzero), defaultEnc);\n                offset = fzero + 1;\n                fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset, length, encoding);\n                const filename = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, fzero), defaultEnc);\n                offset = fzero + 1;\n                fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset, length, encoding);\n                const description = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, fzero), defaultEnc);\n                offset = fzero + 1;\n                const geob = {\n                    type: mimeType,\n                    filename,\n                    description,\n                    data: uint8Array.slice(offset, length)\n                };\n                output = geob;\n                break;\n            }\n            // W-Frames:\n            case 'WCOM':\n            case 'WCOP':\n            case 'WOAF':\n            case 'WOAR':\n            case 'WOAS':\n            case 'WORS':\n            case 'WPAY':\n            case 'WPUB':\n                // Decode URL\n                fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset + 1, length, encoding);\n                output = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, fzero), defaultEnc);\n                break;\n            case 'WXXX': {\n                // Decode URL\n                fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset + 1, length, encoding);\n                const description = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset + 1, fzero), encoding);\n                offset = fzero + (encoding === 'utf-16le' ? 2 : 1);\n                output = { description, url: _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, length), defaultEnc) };\n                break;\n            }\n            case 'WFD':\n            case 'WFED':\n                output = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset + 1, _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset + 1, length, encoding)), encoding);\n                break;\n            case 'MCDI': {\n                // Music CD identifier\n                output = uint8Array.slice(0, length);\n                break;\n            }\n            default:\n                debug(`Warning: unsupported id3v2-tag-type: ${type}`);\n                break;\n        }\n        return output;\n    }\n    static readNullTerminatedString(uint8Array, encoding) {\n        let offset = encoding.bom ? 2 : 0;\n        const zeroIndex = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset, uint8Array.length, encoding.encoding);\n        const txt = uint8Array.slice(offset, zeroIndex);\n        if (encoding.encoding === 'utf-16le') {\n            offset = zeroIndex + 2;\n        }\n        else {\n            offset = zeroIndex + 1;\n        }\n        return {\n            text: _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(txt, encoding.encoding),\n            len: offset\n        };\n    }\n    static fixPictureMimeType(pictureType) {\n        pictureType = pictureType.toLocaleLowerCase();\n        switch (pictureType) {\n            case 'jpg':\n                return 'image/jpeg';\n            case 'png':\n                return 'image/png';\n        }\n        return pictureType;\n    }\n    /**\n     * Converts TMCL (Musician credits list) or TIPL (Involved people list)\n     * @param entries\n     */\n    static functionList(entries) {\n        const res = {};\n        for (let i = 0; i + 1 < entries.length; i += 2) {\n            const names = entries[i + 1].split(',');\n            res[entries[i]] = res[entries[i]] ? res[entries[i]].concat(names) : names;\n        }\n        return res;\n    }\n    /**\n     * id3v2.4 defines that multiple T* values are separated by 0x00\n     * id3v2.3 defines that TCOM, TEXT, TOLY, TOPE & TPE1 values are separated by /\n     * @param tag - Tag name\n     * @param text - Concatenated tag value\n     * @returns Split tag value\n     */\n    splitValue(tag, text) {\n        let values;\n        if (this.major < 4) {\n            values = text.split(/\\x00/g);\n            if (values.length > 1) {\n                this.warningCollector.addWarning(`ID3v2.${this.major} ${tag} uses non standard null-separator.`);\n            }\n            else {\n                values = text.split(/\\//g);\n            }\n        }\n        else {\n            values = text.split(/\\x00/g);\n        }\n        return FrameParser.trimArray(values);\n    }\n    static trimArray(values) {\n        return values.map(value => value.replace(/\\x00+$/, '').trim());\n    }\n    static readIdentifierAndData(uint8Array, offset, length, encoding) {\n        const fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset, length, encoding);\n        const id = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, fzero), encoding);\n        offset = fzero + FrameParser.getNullTerminatorLength(encoding);\n        return { id, data: uint8Array.slice(offset, length) };\n    }\n    static getNullTerminatorLength(enc) {\n        return enc === 'utf-16le' ? 2 : 1;\n    }\n}\nclass Id3v2ContentError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_5__.makeUnexpectedFileContentError)('id3v2') {\n}\nfunction makeUnexpectedMajorVersionError(majorVer) {\n    throw new Id3v2ContentError(`Unexpected majorVer: ${majorVer}`);\n}\n//# sourceMappingURL=FrameParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/id3v2/FrameParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v22TagMapper.js":
/*!******************************************************************!*\
  !*** ./node_modules/music-metadata/lib/id3v2/ID3v22TagMapper.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ID3v22TagMapper: () => (/* binding */ ID3v22TagMapper),\n/* harmony export */   id3v22TagMap: () => (/* binding */ id3v22TagMap)\n/* harmony export */ });\n/* harmony import */ var _common_CaseInsensitiveTagMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/CaseInsensitiveTagMap.js */ \"(rsc)/./node_modules/music-metadata/lib/common/CaseInsensitiveTagMap.js\");\n\n/**\n * ID3v2.2 tag mappings\n */\nconst id3v22TagMap = {\n    TT2: 'title',\n    TP1: 'artist',\n    TP2: 'albumartist',\n    TAL: 'album',\n    TYE: 'year',\n    COM: 'comment',\n    TRK: 'track',\n    TPA: 'disk',\n    TCO: 'genre',\n    PIC: 'picture',\n    TCM: 'composer',\n    TOR: 'originaldate',\n    TOT: 'originalalbum',\n    TXT: 'lyricist',\n    TP3: 'conductor',\n    TPB: 'label',\n    TT1: 'grouping',\n    TT3: 'subtitle',\n    TLA: 'language',\n    TCR: 'copyright',\n    WCP: 'license',\n    TEN: 'encodedby',\n    TSS: 'encodersettings',\n    WAR: 'website',\n    PCS: 'podcast',\n    TCP: \"compilation\",\n    TDR: 'date',\n    TS2: 'albumartistsort',\n    TSA: 'albumsort',\n    TSC: 'composersort',\n    TSP: 'artistsort',\n    TST: 'titlesort',\n    WFD: 'podcasturl',\n    TBP: 'bpm'\n};\nclass ID3v22TagMapper extends _common_CaseInsensitiveTagMap_js__WEBPACK_IMPORTED_MODULE_0__.CaseInsensitiveTagMap {\n    constructor() {\n        super(['ID3v2.2'], id3v22TagMap);\n    }\n}\n//# sourceMappingURL=ID3v22TagMapper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2lkM3YyL0lEM3YyMlRhZ01hcHBlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkU7QUFDM0U7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sOEJBQThCLG1GQUFxQjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9pZDN2Mi9JRDN2MjJUYWdNYXBwZXIuanM/OTZlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlSW5zZW5zaXRpdmVUYWdNYXAgfSBmcm9tICcuLi9jb21tb24vQ2FzZUluc2Vuc2l0aXZlVGFnTWFwLmpzJztcbi8qKlxuICogSUQzdjIuMiB0YWcgbWFwcGluZ3NcbiAqL1xuZXhwb3J0IGNvbnN0IGlkM3YyMlRhZ01hcCA9IHtcbiAgICBUVDI6ICd0aXRsZScsXG4gICAgVFAxOiAnYXJ0aXN0JyxcbiAgICBUUDI6ICdhbGJ1bWFydGlzdCcsXG4gICAgVEFMOiAnYWxidW0nLFxuICAgIFRZRTogJ3llYXInLFxuICAgIENPTTogJ2NvbW1lbnQnLFxuICAgIFRSSzogJ3RyYWNrJyxcbiAgICBUUEE6ICdkaXNrJyxcbiAgICBUQ086ICdnZW5yZScsXG4gICAgUElDOiAncGljdHVyZScsXG4gICAgVENNOiAnY29tcG9zZXInLFxuICAgIFRPUjogJ29yaWdpbmFsZGF0ZScsXG4gICAgVE9UOiAnb3JpZ2luYWxhbGJ1bScsXG4gICAgVFhUOiAnbHlyaWNpc3QnLFxuICAgIFRQMzogJ2NvbmR1Y3RvcicsXG4gICAgVFBCOiAnbGFiZWwnLFxuICAgIFRUMTogJ2dyb3VwaW5nJyxcbiAgICBUVDM6ICdzdWJ0aXRsZScsXG4gICAgVExBOiAnbGFuZ3VhZ2UnLFxuICAgIFRDUjogJ2NvcHlyaWdodCcsXG4gICAgV0NQOiAnbGljZW5zZScsXG4gICAgVEVOOiAnZW5jb2RlZGJ5JyxcbiAgICBUU1M6ICdlbmNvZGVyc2V0dGluZ3MnLFxuICAgIFdBUjogJ3dlYnNpdGUnLFxuICAgIFBDUzogJ3BvZGNhc3QnLFxuICAgIFRDUDogXCJjb21waWxhdGlvblwiLFxuICAgIFREUjogJ2RhdGUnLFxuICAgIFRTMjogJ2FsYnVtYXJ0aXN0c29ydCcsXG4gICAgVFNBOiAnYWxidW1zb3J0JyxcbiAgICBUU0M6ICdjb21wb3NlcnNvcnQnLFxuICAgIFRTUDogJ2FydGlzdHNvcnQnLFxuICAgIFRTVDogJ3RpdGxlc29ydCcsXG4gICAgV0ZEOiAncG9kY2FzdHVybCcsXG4gICAgVEJQOiAnYnBtJ1xufTtcbmV4cG9ydCBjbGFzcyBJRDN2MjJUYWdNYXBwZXIgZXh0ZW5kcyBDYXNlSW5zZW5zaXRpdmVUYWdNYXAge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcihbJ0lEM3YyLjInXSwgaWQzdjIyVGFnTWFwKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JRDN2MjJUYWdNYXBwZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v22TagMapper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v24TagMapper.js":
/*!******************************************************************!*\
  !*** ./node_modules/music-metadata/lib/id3v2/ID3v24TagMapper.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ID3v24TagMapper: () => (/* binding */ ID3v24TagMapper)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/GenericTagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/common/GenericTagMapper.js\");\n/* harmony import */ var _common_CaseInsensitiveTagMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/CaseInsensitiveTagMap.js */ \"(rsc)/./node_modules/music-metadata/lib/common/CaseInsensitiveTagMap.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n\n\n\n\n/**\n * ID3v2.3/ID3v2.4 tag mappings\n */\nconst id3v24TagMap = {\n    // id3v2.3\n    TIT2: 'title',\n    TPE1: 'artist',\n    'TXXX:Artists': 'artists',\n    TPE2: 'albumartist',\n    TALB: 'album',\n    TDRV: 'date', // [ 'date', 'year' ] ToDo: improve 'year' mapping\n    /**\n     * Original release year\n     */\n    TORY: 'originalyear',\n    TPOS: 'disk',\n    TCON: 'genre',\n    APIC: 'picture',\n    TCOM: 'composer',\n    USLT: 'lyrics',\n    TSOA: 'albumsort',\n    TSOT: 'titlesort',\n    TOAL: 'originalalbum',\n    TSOP: 'artistsort',\n    TSO2: 'albumartistsort',\n    TSOC: 'composersort',\n    TEXT: 'lyricist',\n    'TXXX:Writer': 'writer',\n    TPE3: 'conductor',\n    // 'IPLS:instrument': 'performer:instrument', // ToDo\n    TPE4: 'remixer',\n    'IPLS:arranger': 'arranger',\n    'IPLS:engineer': 'engineer',\n    'IPLS:producer': 'producer',\n    'IPLS:DJ-mix': 'djmixer',\n    'IPLS:mix': 'mixer',\n    TPUB: 'label',\n    TIT1: 'grouping',\n    TIT3: 'subtitle',\n    TRCK: 'track',\n    TCMP: 'compilation',\n    POPM: 'rating',\n    TBPM: 'bpm',\n    TMED: 'media',\n    'TXXX:CATALOGNUMBER': 'catalognumber',\n    'TXXX:MusicBrainz Album Status': 'releasestatus',\n    'TXXX:MusicBrainz Album Type': 'releasetype',\n    /**\n     * Release country as documented: https://picard.musicbrainz.org/docs/mappings/#cite_note-0\n     */\n    'TXXX:MusicBrainz Album Release Country': 'releasecountry',\n    /**\n     * Release country as implemented // ToDo: report\n     */\n    'TXXX:RELEASECOUNTRY': 'releasecountry',\n    'TXXX:SCRIPT': 'script',\n    TLAN: 'language',\n    TCOP: 'copyright',\n    WCOP: 'license',\n    TENC: 'encodedby',\n    TSSE: 'encodersettings',\n    'TXXX:BARCODE': 'barcode',\n    'TXXX:ISRC': 'isrc',\n    TSRC: 'isrc',\n    'TXXX:ASIN': 'asin',\n    'TXXX:originalyear': 'originalyear',\n    'UFID:http://musicbrainz.org': 'musicbrainz_recordingid',\n    'TXXX:MusicBrainz Release Track Id': 'musicbrainz_trackid',\n    'TXXX:MusicBrainz Album Id': 'musicbrainz_albumid',\n    'TXXX:MusicBrainz Artist Id': 'musicbrainz_artistid',\n    'TXXX:MusicBrainz Album Artist Id': 'musicbrainz_albumartistid',\n    'TXXX:MusicBrainz Release Group Id': 'musicbrainz_releasegroupid',\n    'TXXX:MusicBrainz Work Id': 'musicbrainz_workid',\n    'TXXX:MusicBrainz TRM Id': 'musicbrainz_trmid',\n    'TXXX:MusicBrainz Disc Id': 'musicbrainz_discid',\n    'TXXX:ACOUSTID_ID': 'acoustid_id',\n    'TXXX:Acoustid Id': 'acoustid_id',\n    'TXXX:Acoustid Fingerprint': 'acoustid_fingerprint',\n    'TXXX:MusicIP PUID': 'musicip_puid',\n    'TXXX:MusicMagic Fingerprint': 'musicip_fingerprint',\n    WOAR: 'website',\n    // id3v2.4\n    // ToDo: In same sequence as defined at http://id3.org/id3v2.4.0-frames\n    TDRC: 'date', // date YYYY-MM-DD\n    TYER: 'year',\n    TDOR: 'originaldate',\n    // 'TMCL:instrument': 'performer:instrument',\n    'TIPL:arranger': 'arranger',\n    'TIPL:engineer': 'engineer',\n    'TIPL:producer': 'producer',\n    'TIPL:DJ-mix': 'djmixer',\n    'TIPL:mix': 'mixer',\n    TMOO: 'mood',\n    // additional mappings:\n    SYLT: 'lyrics',\n    TSST: 'discsubtitle',\n    TKEY: 'key',\n    COMM: 'comment',\n    TOPE: 'originalartist',\n    // Windows Media Player\n    'PRIV:AverageLevel': 'averageLevel',\n    'PRIV:PeakLevel': 'peakLevel',\n    // Discogs\n    'TXXX:DISCOGS_ARTIST_ID': 'discogs_artist_id',\n    'TXXX:DISCOGS_ARTISTS': 'artists',\n    'TXXX:DISCOGS_ARTIST_NAME': 'artists',\n    'TXXX:DISCOGS_ALBUM_ARTISTS': 'albumartist',\n    'TXXX:DISCOGS_CATALOG': 'catalognumber',\n    'TXXX:DISCOGS_COUNTRY': 'releasecountry',\n    'TXXX:DISCOGS_DATE': 'originaldate',\n    'TXXX:DISCOGS_LABEL': 'label',\n    'TXXX:DISCOGS_LABEL_ID': 'discogs_label_id',\n    'TXXX:DISCOGS_MASTER_RELEASE_ID': 'discogs_master_release_id',\n    'TXXX:DISCOGS_RATING': 'discogs_rating',\n    'TXXX:DISCOGS_RELEASED': 'date',\n    'TXXX:DISCOGS_RELEASE_ID': 'discogs_release_id',\n    'TXXX:DISCOGS_VOTES': 'discogs_votes',\n    'TXXX:CATALOGID': 'catalognumber',\n    'TXXX:STYLE': 'genre',\n    'TXXX:REPLAYGAIN_TRACK_PEAK': 'replaygain_track_peak',\n    'TXXX:REPLAYGAIN_TRACK_GAIN': 'replaygain_track_gain',\n    'TXXX:REPLAYGAIN_ALBUM_PEAK': 'replaygain_album_peak',\n    'TXXX:REPLAYGAIN_ALBUM_GAIN': 'replaygain_album_gain',\n    'TXXX:MP3GAIN_MINMAX': 'replaygain_track_minmax',\n    'TXXX:MP3GAIN_ALBUM_MINMAX': 'replaygain_album_minmax',\n    'TXXX:MP3GAIN_UNDO': 'replaygain_undo',\n    MVNM: 'movement',\n    MVIN: 'movementIndex',\n    PCST: 'podcast',\n    TCAT: 'category',\n    TDES: 'description',\n    TDRL: 'releasedate',\n    TGID: 'podcastId',\n    TKWD: 'keywords',\n    WFED: 'podcasturl',\n    GRP1: 'grouping'\n};\nclass ID3v24TagMapper extends _common_CaseInsensitiveTagMap_js__WEBPACK_IMPORTED_MODULE_2__.CaseInsensitiveTagMap {\n    static toRating(popm) {\n        return {\n            source: popm.email,\n            rating: popm.rating > 0 ? (popm.rating - 1) / 254 * _common_GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_1__.CommonTagMapper.maxRatingScore : undefined\n        };\n    }\n    constructor() {\n        super(['ID3v2.3', 'ID3v2.4'], id3v24TagMap);\n    }\n    /**\n     * Handle post mapping exceptions / correction\n     * @param tag to post map\n     * @param warnings Wil be used to register (collect) warnings\n     */\n    postMap(tag, warnings) {\n        switch (tag.id) {\n            case 'UFID':\n                {\n                    // decode MusicBrainz Recording Id\n                    const idTag = tag.value;\n                    if (idTag.owner_identifier === 'http://musicbrainz.org') {\n                        tag.id += `:${idTag.owner_identifier}`;\n                        tag.value = (0,_common_Util_js__WEBPACK_IMPORTED_MODULE_3__.decodeString)(idTag.identifier, 'latin1'); // latin1 == iso-8859-1\n                    }\n                }\n                break;\n            case 'PRIV':\n                {\n                    const customTag = tag.value;\n                    switch (customTag.owner_identifier) {\n                        // decode Windows Media Player\n                        case 'AverageLevel':\n                        case 'PeakValue':\n                            tag.id += `:${customTag.owner_identifier}`;\n                            tag.value = customTag.data.length === 4 ? token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(customTag.data, 0) : null;\n                            if (tag.value === null) {\n                                warnings.addWarning('Failed to parse PRIV:PeakValue');\n                            }\n                            break;\n                        default:\n                            warnings.addWarning(`Unknown PRIV owner-identifier: ${customTag.data}`);\n                    }\n                }\n                break;\n            case 'POPM':\n                tag.value = ID3v24TagMapper.toRating(tag.value);\n                break;\n            default:\n                break;\n        }\n    }\n}\n//# sourceMappingURL=ID3v24TagMapper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v24TagMapper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v2Parser.js":
/*!**************************************************************!*\
  !*** ./node_modules/music-metadata/lib/id3v2/ID3v2Parser.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ID3v2Parser: () => (/* binding */ ID3v2Parser)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n/* harmony import */ var _FrameParser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FrameParser.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/FrameParser.js\");\n/* harmony import */ var _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ID3v2Token.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v2Token.js\");\n\n\n\n\nconst asciiDecoder = new TextDecoder('ascii');\nclass ID3v2Parser {\n    constructor() {\n        this.tokenizer = undefined;\n        this.id3Header = undefined;\n        this.metadata = undefined;\n        this.headerType = undefined;\n        this.options = undefined;\n    }\n    static removeUnsyncBytes(buffer) {\n        let readI = 0;\n        let writeI = 0;\n        while (readI < buffer.length - 1) {\n            if (readI !== writeI) {\n                buffer[writeI] = buffer[readI];\n            }\n            readI += (buffer[readI] === 0xFF && buffer[readI + 1] === 0) ? 2 : 1;\n            writeI++;\n        }\n        if (readI < buffer.length) {\n            buffer[writeI++] = buffer[readI];\n        }\n        return buffer.slice(0, writeI);\n    }\n    static getFrameHeaderLength(majorVer) {\n        switch (majorVer) {\n            case 2:\n                return 6;\n            case 3:\n            case 4:\n                return 10;\n            default:\n                throw makeUnexpectedMajorVersionError(majorVer);\n        }\n    }\n    static readFrameFlags(b) {\n        return {\n            status: {\n                tag_alter_preservation: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 0, 6),\n                file_alter_preservation: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 0, 5),\n                read_only: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 0, 4)\n            },\n            format: {\n                grouping_identity: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 1, 7),\n                compression: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 1, 3),\n                encryption: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 1, 2),\n                unsynchronisation: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 1, 1),\n                data_length_indicator: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 1, 0)\n            }\n        };\n    }\n    static readFrameData(uint8Array, frameHeader, majorVer, includeCovers, warningCollector) {\n        const frameParser = new _FrameParser_js__WEBPACK_IMPORTED_MODULE_2__.FrameParser(majorVer, warningCollector);\n        switch (majorVer) {\n            case 2:\n                return frameParser.readData(uint8Array, frameHeader.id, includeCovers);\n            case 3:\n            case 4:\n                if (frameHeader.flags?.format.unsynchronisation) {\n                    uint8Array = ID3v2Parser.removeUnsyncBytes(uint8Array);\n                }\n                if (frameHeader.flags?.format.data_length_indicator) {\n                    uint8Array = uint8Array.slice(4, uint8Array.length);\n                }\n                return frameParser.readData(uint8Array, frameHeader.id, includeCovers);\n            default:\n                throw makeUnexpectedMajorVersionError(majorVer);\n        }\n    }\n    /**\n     * Create a combined tag key, of tag & description\n     * @param tag e.g.: COM\n     * @param description e.g. iTunPGAP\n     * @returns string e.g. COM:iTunPGAP\n     */\n    static makeDescriptionTagName(tag, description) {\n        return tag + (description ? `:${description}` : '');\n    }\n    async parse(metadata, tokenizer, options) {\n        this.tokenizer = tokenizer;\n        this.metadata = metadata;\n        this.options = options;\n        const id3Header = await this.tokenizer.readToken(_ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.ID3v2Header);\n        if (id3Header.fileIdentifier !== 'ID3') {\n            throw new _FrameParser_js__WEBPACK_IMPORTED_MODULE_2__.Id3v2ContentError('expected ID3-header file-identifier \\'ID3\\' was not found');\n        }\n        this.id3Header = id3Header;\n        this.headerType = (`ID3v2.${id3Header.version.major}`);\n        return id3Header.flags.isExtendedHeader ? this.parseExtendedHeader() : this.parseId3Data(id3Header.size);\n    }\n    async parseExtendedHeader() {\n        const extendedHeader = await this.tokenizer.readToken(_ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.ExtendedHeader);\n        const dataRemaining = extendedHeader.size - _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.ExtendedHeader.len;\n        return dataRemaining > 0 ? this.parseExtendedHeaderData(dataRemaining, extendedHeader.size) : this.parseId3Data(this.id3Header.size - extendedHeader.size);\n    }\n    async parseExtendedHeaderData(dataRemaining, extendedHeaderSize) {\n        await this.tokenizer.ignore(dataRemaining);\n        return this.parseId3Data(this.id3Header.size - extendedHeaderSize);\n    }\n    async parseId3Data(dataLen) {\n        const uint8Array = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayType(dataLen));\n        for (const tag of this.parseMetadata(uint8Array)) {\n            switch (tag.id) {\n                case 'TXXX':\n                    if (tag.value) {\n                        await this.handleTag(tag, tag.value.text, () => tag.value.description);\n                    }\n                    break;\n                default:\n                    await (Array.isArray(tag.value) ? Promise.all(tag.value.map(value => this.addTag(tag.id, value))) : this.addTag(tag.id, tag.value));\n            }\n        }\n    }\n    async handleTag(tag, values, descriptor, resolveValue = value => value) {\n        await Promise.all(values.map(value => this.addTag(ID3v2Parser.makeDescriptionTagName(tag.id, descriptor(value)), resolveValue(value))));\n    }\n    async addTag(id, value) {\n        await this.metadata.addTag(this.headerType, id, value);\n    }\n    parseMetadata(data) {\n        let offset = 0;\n        const tags = [];\n        while (true) {\n            if (offset === data.length)\n                break;\n            const frameHeaderLength = ID3v2Parser.getFrameHeaderLength(this.id3Header.version.major);\n            if (offset + frameHeaderLength > data.length) {\n                this.metadata.addWarning('Illegal ID3v2 tag length');\n                break;\n            }\n            const frameHeaderBytes = data.slice(offset, offset + frameHeaderLength);\n            offset += frameHeaderLength;\n            const frameHeader = this.readFrameHeader(frameHeaderBytes, this.id3Header.version.major);\n            const frameDataBytes = data.slice(offset, offset + frameHeader.length);\n            offset += frameHeader.length;\n            const values = ID3v2Parser.readFrameData(frameDataBytes, frameHeader, this.id3Header.version.major, !this.options.skipCovers, this.metadata);\n            if (values) {\n                tags.push({ id: frameHeader.id, value: values });\n            }\n        }\n        return tags;\n    }\n    readFrameHeader(uint8Array, majorVer) {\n        let header;\n        switch (majorVer) {\n            case 2:\n                header = {\n                    id: asciiDecoder.decode(uint8Array.slice(0, 3)),\n                    length: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_BE.get(uint8Array, 3)\n                };\n                if (!header.id.match(/[A-Z0-9]{3}/g)) {\n                    this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${header.id}`);\n                }\n                break;\n            case 3:\n            case 4:\n                header = {\n                    id: asciiDecoder.decode(uint8Array.slice(0, 4)),\n                    length: (majorVer === 4 ? _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.UINT32SYNCSAFE : token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE).get(uint8Array, 4),\n                    flags: ID3v2Parser.readFrameFlags(uint8Array.slice(8, 10))\n                };\n                if (!header.id.match(/[A-Z0-9]{4}/g)) {\n                    this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${header.id}`);\n                }\n                break;\n            default:\n                throw makeUnexpectedMajorVersionError(majorVer);\n        }\n        return header;\n    }\n}\nfunction makeUnexpectedMajorVersionError(majorVer) {\n    throw new _FrameParser_js__WEBPACK_IMPORTED_MODULE_2__.Id3v2ContentError(`Unexpected majorVer: ${majorVer}`);\n}\n//# sourceMappingURL=ID3v2Parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v2Parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v2Token.js":
/*!*************************************************************!*\
  !*** ./node_modules/music-metadata/lib/id3v2/ID3v2Token.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AttachedPictureType: () => (/* binding */ AttachedPictureType),\n/* harmony export */   ExtendedHeader: () => (/* binding */ ExtendedHeader),\n/* harmony export */   ID3v2Header: () => (/* binding */ ID3v2Header),\n/* harmony export */   LyricsContentType: () => (/* binding */ LyricsContentType),\n/* harmony export */   SyncTextHeader: () => (/* binding */ SyncTextHeader),\n/* harmony export */   TextEncodingToken: () => (/* binding */ TextEncodingToken),\n/* harmony export */   TextHeader: () => (/* binding */ TextHeader),\n/* harmony export */   TimestampFormat: () => (/* binding */ TimestampFormat),\n/* harmony export */   UINT32SYNCSAFE: () => (/* binding */ UINT32SYNCSAFE)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n\n\n/**\n * The picture type according to the ID3v2 APIC frame\n * Ref: http://id3.org/id3v2.3.0#Attached_picture\n */\nvar AttachedPictureType;\n(function (AttachedPictureType) {\n    AttachedPictureType[AttachedPictureType[\"Other\"] = 0] = \"Other\";\n    AttachedPictureType[AttachedPictureType[\"32x32 pixels 'file icon' (PNG only)\"] = 1] = \"32x32 pixels 'file icon' (PNG only)\";\n    AttachedPictureType[AttachedPictureType[\"Other file icon\"] = 2] = \"Other file icon\";\n    AttachedPictureType[AttachedPictureType[\"Cover (front)\"] = 3] = \"Cover (front)\";\n    AttachedPictureType[AttachedPictureType[\"Cover (back)\"] = 4] = \"Cover (back)\";\n    AttachedPictureType[AttachedPictureType[\"Leaflet page\"] = 5] = \"Leaflet page\";\n    AttachedPictureType[AttachedPictureType[\"Media (e.g. label side of CD)\"] = 6] = \"Media (e.g. label side of CD)\";\n    AttachedPictureType[AttachedPictureType[\"Lead artist/lead performer/soloist\"] = 7] = \"Lead artist/lead performer/soloist\";\n    AttachedPictureType[AttachedPictureType[\"Artist/performer\"] = 8] = \"Artist/performer\";\n    AttachedPictureType[AttachedPictureType[\"Conductor\"] = 9] = \"Conductor\";\n    AttachedPictureType[AttachedPictureType[\"Band/Orchestra\"] = 10] = \"Band/Orchestra\";\n    AttachedPictureType[AttachedPictureType[\"Composer\"] = 11] = \"Composer\";\n    AttachedPictureType[AttachedPictureType[\"Lyricist/text writer\"] = 12] = \"Lyricist/text writer\";\n    AttachedPictureType[AttachedPictureType[\"Recording Location\"] = 13] = \"Recording Location\";\n    AttachedPictureType[AttachedPictureType[\"During recording\"] = 14] = \"During recording\";\n    AttachedPictureType[AttachedPictureType[\"During performance\"] = 15] = \"During performance\";\n    AttachedPictureType[AttachedPictureType[\"Movie/video screen capture\"] = 16] = \"Movie/video screen capture\";\n    AttachedPictureType[AttachedPictureType[\"A bright coloured fish\"] = 17] = \"A bright coloured fish\";\n    AttachedPictureType[AttachedPictureType[\"Illustration\"] = 18] = \"Illustration\";\n    AttachedPictureType[AttachedPictureType[\"Band/artist logotype\"] = 19] = \"Band/artist logotype\";\n    AttachedPictureType[AttachedPictureType[\"Publisher/Studio logotype\"] = 20] = \"Publisher/Studio logotype\";\n})(AttachedPictureType || (AttachedPictureType = {}));\n/**\n * https://id3.org/id3v2.3.0#Synchronised_lyrics.2Ftext\n */\nvar LyricsContentType;\n(function (LyricsContentType) {\n    LyricsContentType[LyricsContentType[\"other\"] = 0] = \"other\";\n    LyricsContentType[LyricsContentType[\"lyrics\"] = 1] = \"lyrics\";\n    LyricsContentType[LyricsContentType[\"text\"] = 2] = \"text\";\n    LyricsContentType[LyricsContentType[\"movement_part\"] = 3] = \"movement_part\";\n    LyricsContentType[LyricsContentType[\"events\"] = 4] = \"events\";\n    LyricsContentType[LyricsContentType[\"chord\"] = 5] = \"chord\";\n    LyricsContentType[LyricsContentType[\"trivia_pop\"] = 6] = \"trivia_pop\";\n})(LyricsContentType || (LyricsContentType = {}));\nvar TimestampFormat;\n(function (TimestampFormat) {\n    TimestampFormat[TimestampFormat[\"notSynchronized0\"] = 0] = \"notSynchronized0\";\n    TimestampFormat[TimestampFormat[\"mpegFrameNumber\"] = 1] = \"mpegFrameNumber\";\n    TimestampFormat[TimestampFormat[\"milliseconds\"] = 2] = \"milliseconds\";\n})(TimestampFormat || (TimestampFormat = {}));\n/**\n * 28 bits (representing up to 256MB) integer, the msb is 0 to avoid 'false syncsignals'.\n * 4 * %0xxxxxxx\n */\nconst UINT32SYNCSAFE = {\n    get: (buf, off) => {\n        return buf[off + 3] & 0x7f | ((buf[off + 2]) << 7) |\n            ((buf[off + 1]) << 14) | ((buf[off]) << 21);\n    },\n    len: 4\n};\n/**\n * ID3v2 header\n * Ref: http://id3.org/id3v2.3.0#ID3v2_header\n * ToDo\n */\nconst ID3v2Header = {\n    len: 10,\n    get: (buf, off) => {\n        return {\n            // ID3v2/file identifier   \"ID3\"\n            fileIdentifier: new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(3, 'ascii').get(buf, off),\n            // ID3v2 versionIndex\n            version: {\n                major: token_types__WEBPACK_IMPORTED_MODULE_0__.INT8.get(buf, off + 3),\n                revision: token_types__WEBPACK_IMPORTED_MODULE_0__.INT8.get(buf, off + 4)\n            },\n            // ID3v2 flags\n            flags: {\n                // Unsynchronisation\n                unsynchronisation: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(buf, off + 5, 7),\n                // Extended header\n                isExtendedHeader: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(buf, off + 5, 6),\n                // Experimental indicator\n                expIndicator: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(buf, off + 5, 5),\n                footer: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(buf, off + 5, 4)\n            },\n            size: UINT32SYNCSAFE.get(buf, off + 6)\n        };\n    }\n};\nconst ExtendedHeader = {\n    len: 10,\n    get: (buf, off) => {\n        return {\n            // Extended header size\n            size: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off),\n            // Extended Flags\n            extendedFlags: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 4),\n            // Size of padding\n            sizeOfPadding: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 6),\n            // CRC data present\n            crcDataPresent: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(buf, off + 4, 31)\n        };\n    }\n};\nconst TextEncodingToken = {\n    len: 1,\n    get: (uint8Array, off) => {\n        switch (uint8Array[off]) {\n            case 0x00:\n                return { encoding: 'latin1' }; // binary\n            case 0x01:\n                return { encoding: 'utf-16le', bom: true };\n            case 0x02:\n                return { encoding: 'utf-16le', bom: false };\n            case 0x03:\n                return { encoding: 'utf8', bom: false };\n            default:\n                return { encoding: 'utf8', bom: false };\n        }\n    }\n};\n/**\n * Used to read first portion of `SYLT` frame\n */\nconst TextHeader = {\n    len: 4,\n    get: (uint8Array, off) => {\n        return {\n            encoding: TextEncodingToken.get(uint8Array, off),\n            language: new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(3, 'latin1').get(uint8Array, off + 1)\n        };\n    }\n};\n/**\n * Used to read first portion of `SYLT` frame\n */\nconst SyncTextHeader = {\n    len: 6,\n    get: (uint8Array, off) => {\n        const text = TextHeader.get(uint8Array, off);\n        return {\n            encoding: text.encoding,\n            language: text.language,\n            timeStampFormat: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(uint8Array, off + 4),\n            contentType: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(uint8Array, off + 5)\n        };\n    }\n};\n//# sourceMappingURL=ID3v2Token.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v2Token.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/iff/index.js":
/*!******************************************************!*\
  !*** ./node_modules/music-metadata/lib/iff/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Header: () => (/* binding */ Header)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/FourCC.js */ \"(rsc)/./node_modules/music-metadata/lib/common/FourCC.js\");\n\n\n/**\n * Common AIFF chunk header\n */\nconst Header = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            // Chunk type ID\n            chunkID: _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__.FourCcToken.get(buf, off),\n            // Chunk size\n            chunkSize: Number(BigInt(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 4)))\n        };\n    }\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2lmZi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDYTtBQUNsRDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDBEQUFXO0FBQ2hDO0FBQ0EscUNBQXFDLGtEQUFlO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9pZmYvaW5kZXguanM/ZjM1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBUb2tlbiBmcm9tICd0b2tlbi10eXBlcyc7XG5pbXBvcnQgeyBGb3VyQ2NUb2tlbiB9IGZyb20gJy4uL2NvbW1vbi9Gb3VyQ0MuanMnO1xuLyoqXG4gKiBDb21tb24gQUlGRiBjaHVuayBoZWFkZXJcbiAqL1xuZXhwb3J0IGNvbnN0IEhlYWRlciA9IHtcbiAgICBsZW46IDgsXG4gICAgZ2V0OiAoYnVmLCBvZmYpID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC8vIENodW5rIHR5cGUgSURcbiAgICAgICAgICAgIGNodW5rSUQ6IEZvdXJDY1Rva2VuLmdldChidWYsIG9mZiksXG4gICAgICAgICAgICAvLyBDaHVuayBzaXplXG4gICAgICAgICAgICBjaHVua1NpemU6IE51bWJlcihCaWdJbnQoVG9rZW4uVUlOVDMyX0JFLmdldChidWYsIG9mZiArIDQpKSlcbiAgICAgICAgfTtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/iff/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/music-metadata/lib/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LyricsContentType: () => (/* reexport safe */ _core_js__WEBPACK_IMPORTED_MODULE_2__.LyricsContentType),\n/* harmony export */   TimestampFormat: () => (/* reexport safe */ _core_js__WEBPACK_IMPORTED_MODULE_2__.TimestampFormat),\n/* harmony export */   orderTags: () => (/* reexport safe */ _core_js__WEBPACK_IMPORTED_MODULE_2__.orderTags),\n/* harmony export */   parseBlob: () => (/* reexport safe */ _core_js__WEBPACK_IMPORTED_MODULE_2__.parseBlob),\n/* harmony export */   parseBuffer: () => (/* reexport safe */ _core_js__WEBPACK_IMPORTED_MODULE_2__.parseBuffer),\n/* harmony export */   parseFile: () => (/* binding */ parseFile),\n/* harmony export */   parseFromTokenizer: () => (/* reexport safe */ _core_js__WEBPACK_IMPORTED_MODULE_2__.parseFromTokenizer),\n/* harmony export */   parseStream: () => (/* binding */ parseStream),\n/* harmony export */   parseWebStream: () => (/* reexport safe */ _core_js__WEBPACK_IMPORTED_MODULE_2__.parseWebStream),\n/* harmony export */   ratingToStars: () => (/* reexport safe */ _core_js__WEBPACK_IMPORTED_MODULE_2__.ratingToStars),\n/* harmony export */   scanAppendingHeaders: () => (/* reexport safe */ _core_js__WEBPACK_IMPORTED_MODULE_2__.scanAppendingHeaders),\n/* harmony export */   selectCover: () => (/* reexport safe */ _core_js__WEBPACK_IMPORTED_MODULE_2__.selectCover)\n/* harmony export */ });\n/* harmony import */ var strtok3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! strtok3 */ \"(rsc)/./node_modules/strtok3/lib/index.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core.js */ \"(rsc)/./node_modules/music-metadata/lib/core.js\");\n/* harmony import */ var _ParserFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ParserFactory.js */ \"(rsc)/./node_modules/music-metadata/lib/ParserFactory.js\");\n/**\n * Node.js specific entry point.\n */\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_1__('music-metadata:parser');\n/**\n * Parse audio from Node Stream.Readable\n * @param stream - Stream to read the audio track from\n * @param fileInfo - File information object or MIME-type, e.g.: 'audio/mpeg'\n * @param options - Parsing options\n * @returns Metadata\n */\nasync function parseStream(stream, fileInfo, options = {}) {\n    const tokenizer = await (0,strtok3__WEBPACK_IMPORTED_MODULE_0__.fromStream)(stream, { fileInfo: typeof fileInfo === 'string' ? { mimeType: fileInfo } : fileInfo });\n    return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.parseFromTokenizer)(tokenizer, options);\n}\n/**\n * Parse audio from Node file\n * @param filePath - Media file to read meta-data from\n * @param options - Parsing options\n * @returns Metadata\n */\nasync function parseFile(filePath, options = {}) {\n    debug(`parseFile: ${filePath}`);\n    const fileTokenizer = await (0,strtok3__WEBPACK_IMPORTED_MODULE_0__.fromFile)(filePath);\n    const parserFactory = new _ParserFactory_js__WEBPACK_IMPORTED_MODULE_3__.ParserFactory();\n    try {\n        const parserLoader = parserFactory.findLoaderForExtension(filePath);\n        if (!parserLoader)\n            debug(' Parser could not be determined by file extension');\n        return await parserFactory.parse(fileTokenizer, parserLoader, options);\n    }\n    finally {\n        await fileTokenizer.close();\n    }\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDK0M7QUFDakI7QUFDa0I7QUFDRztBQUN6QjtBQUMxQixjQUFjLGtDQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08seURBQXlEO0FBQ2hFLDRCQUE0QixtREFBVSxXQUFXLDJDQUEyQyxxQkFBcUIsWUFBWTtBQUM3SCxXQUFXLDREQUFrQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLCtDQUErQztBQUN0RCx3QkFBd0IsU0FBUztBQUNqQyxnQ0FBZ0MsaURBQVE7QUFDeEMsOEJBQThCLDREQUFhO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2luZGV4LmpzPzUyOTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBOb2RlLmpzIHNwZWNpZmljIGVudHJ5IHBvaW50LlxuICovXG5pbXBvcnQgeyBmcm9tRmlsZSwgZnJvbVN0cmVhbSB9IGZyb20gJ3N0cnRvazMnO1xuaW1wb3J0IGluaXREZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5pbXBvcnQgeyBwYXJzZUZyb21Ub2tlbml6ZXIsIH0gZnJvbSAnLi9jb3JlLmpzJztcbmltcG9ydCB7IFBhcnNlckZhY3RvcnkgfSBmcm9tICcuL1BhcnNlckZhY3RvcnkuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9jb3JlLmpzJztcbmNvbnN0IGRlYnVnID0gaW5pdERlYnVnKCdtdXNpYy1tZXRhZGF0YTpwYXJzZXInKTtcbi8qKlxuICogUGFyc2UgYXVkaW8gZnJvbSBOb2RlIFN0cmVhbS5SZWFkYWJsZVxuICogQHBhcmFtIHN0cmVhbSAtIFN0cmVhbSB0byByZWFkIHRoZSBhdWRpbyB0cmFjayBmcm9tXG4gKiBAcGFyYW0gZmlsZUluZm8gLSBGaWxlIGluZm9ybWF0aW9uIG9iamVjdCBvciBNSU1FLXR5cGUsIGUuZy46ICdhdWRpby9tcGVnJ1xuICogQHBhcmFtIG9wdGlvbnMgLSBQYXJzaW5nIG9wdGlvbnNcbiAqIEByZXR1cm5zIE1ldGFkYXRhXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwYXJzZVN0cmVhbShzdHJlYW0sIGZpbGVJbmZvLCBvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCB0b2tlbml6ZXIgPSBhd2FpdCBmcm9tU3RyZWFtKHN0cmVhbSwgeyBmaWxlSW5mbzogdHlwZW9mIGZpbGVJbmZvID09PSAnc3RyaW5nJyA/IHsgbWltZVR5cGU6IGZpbGVJbmZvIH0gOiBmaWxlSW5mbyB9KTtcbiAgICByZXR1cm4gcGFyc2VGcm9tVG9rZW5pemVyKHRva2VuaXplciwgb3B0aW9ucyk7XG59XG4vKipcbiAqIFBhcnNlIGF1ZGlvIGZyb20gTm9kZSBmaWxlXG4gKiBAcGFyYW0gZmlsZVBhdGggLSBNZWRpYSBmaWxlIHRvIHJlYWQgbWV0YS1kYXRhIGZyb21cbiAqIEBwYXJhbSBvcHRpb25zIC0gUGFyc2luZyBvcHRpb25zXG4gKiBAcmV0dXJucyBNZXRhZGF0YVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcGFyc2VGaWxlKGZpbGVQYXRoLCBvcHRpb25zID0ge30pIHtcbiAgICBkZWJ1ZyhgcGFyc2VGaWxlOiAke2ZpbGVQYXRofWApO1xuICAgIGNvbnN0IGZpbGVUb2tlbml6ZXIgPSBhd2FpdCBmcm9tRmlsZShmaWxlUGF0aCk7XG4gICAgY29uc3QgcGFyc2VyRmFjdG9yeSA9IG5ldyBQYXJzZXJGYWN0b3J5KCk7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcGFyc2VyTG9hZGVyID0gcGFyc2VyRmFjdG9yeS5maW5kTG9hZGVyRm9yRXh0ZW5zaW9uKGZpbGVQYXRoKTtcbiAgICAgICAgaWYgKCFwYXJzZXJMb2FkZXIpXG4gICAgICAgICAgICBkZWJ1ZygnIFBhcnNlciBjb3VsZCBub3QgYmUgZGV0ZXJtaW5lZCBieSBmaWxlIGV4dGVuc2lvbicpO1xuICAgICAgICByZXR1cm4gYXdhaXQgcGFyc2VyRmFjdG9yeS5wYXJzZShmaWxlVG9rZW5pemVyLCBwYXJzZXJMb2FkZXIsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgYXdhaXQgZmlsZVRva2VuaXplci5jbG9zZSgpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/lrc/LyricsParser.js":
/*!*************************************************************!*\
  !*** ./node_modules/music-metadata/lib/lrc/LyricsParser.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseLrc: () => (/* binding */ parseLrc)\n/* harmony export */ });\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type.js */ \"(rsc)/./node_modules/music-metadata/lib/type.js\");\n\n/**\n * Parse LRC (Lyrics) formatted text\n * Ref: https://en.wikipedia.org/wiki/LRC_(file_format)\n * @param lrcString\n */\nfunction parseLrc(lrcString) {\n    const lines = lrcString.split('\\n');\n    const syncText = [];\n    // Regular expression to match LRC timestamps (e.g., [00:45.52])\n    const timestampRegex = /\\[(\\d{2}):(\\d{2})\\.(\\d{2})\\]/;\n    for (const line of lines) {\n        const match = line.match(timestampRegex);\n        if (match) {\n            const minutes = Number.parseInt(match[1], 10);\n            const seconds = Number.parseInt(match[2], 10);\n            const hundredths = Number.parseInt(match[3], 10);\n            // Convert the timestamp to milliseconds, as per TimestampFormat.milliseconds\n            const timestamp = (minutes * 60 + seconds) * 1000 + hundredths * 10;\n            // Get the text portion of the line (e.g., \"あの蝶は自由になれたかな\")\n            const text = line.replace(timestampRegex, '').trim();\n            syncText.push({ timestamp, text });\n        }\n    }\n    // Creating the ILyricsTag object\n    return {\n        contentType: _type_js__WEBPACK_IMPORTED_MODULE_0__.LyricsContentType.lyrics,\n        timeStampFormat: _type_js__WEBPACK_IMPORTED_MODULE_0__.TimestampFormat.milliseconds,\n        syncText,\n    };\n}\n//# sourceMappingURL=LyricsParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2xyYy9MeXJpY3NQYXJzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0U7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixpQkFBaUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsdURBQWlCO0FBQ3RDLHlCQUF5QixxREFBZTtBQUN4QztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvbHJjL0x5cmljc1BhcnNlci5qcz83MDBiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEx5cmljc0NvbnRlbnRUeXBlLCBUaW1lc3RhbXBGb3JtYXQgfSBmcm9tICcuLi90eXBlLmpzJztcbi8qKlxuICogUGFyc2UgTFJDIChMeXJpY3MpIGZvcm1hdHRlZCB0ZXh0XG4gKiBSZWY6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0xSQ18oZmlsZV9mb3JtYXQpXG4gKiBAcGFyYW0gbHJjU3RyaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUxyYyhscmNTdHJpbmcpIHtcbiAgICBjb25zdCBsaW5lcyA9IGxyY1N0cmluZy5zcGxpdCgnXFxuJyk7XG4gICAgY29uc3Qgc3luY1RleHQgPSBbXTtcbiAgICAvLyBSZWd1bGFyIGV4cHJlc3Npb24gdG8gbWF0Y2ggTFJDIHRpbWVzdGFtcHMgKGUuZy4sIFswMDo0NS41Ml0pXG4gICAgY29uc3QgdGltZXN0YW1wUmVnZXggPSAvXFxbKFxcZHsyfSk6KFxcZHsyfSlcXC4oXFxkezJ9KVxcXS87XG4gICAgZm9yIChjb25zdCBsaW5lIG9mIGxpbmVzKSB7XG4gICAgICAgIGNvbnN0IG1hdGNoID0gbGluZS5tYXRjaCh0aW1lc3RhbXBSZWdleCk7XG4gICAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICAgICAgY29uc3QgbWludXRlcyA9IE51bWJlci5wYXJzZUludChtYXRjaFsxXSwgMTApO1xuICAgICAgICAgICAgY29uc3Qgc2Vjb25kcyA9IE51bWJlci5wYXJzZUludChtYXRjaFsyXSwgMTApO1xuICAgICAgICAgICAgY29uc3QgaHVuZHJlZHRocyA9IE51bWJlci5wYXJzZUludChtYXRjaFszXSwgMTApO1xuICAgICAgICAgICAgLy8gQ29udmVydCB0aGUgdGltZXN0YW1wIHRvIG1pbGxpc2Vjb25kcywgYXMgcGVyIFRpbWVzdGFtcEZvcm1hdC5taWxsaXNlY29uZHNcbiAgICAgICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IChtaW51dGVzICogNjAgKyBzZWNvbmRzKSAqIDEwMDAgKyBodW5kcmVkdGhzICogMTA7XG4gICAgICAgICAgICAvLyBHZXQgdGhlIHRleHQgcG9ydGlvbiBvZiB0aGUgbGluZSAoZS5nLiwgXCLjgYLjga7onbbjga/oh6rnlLHjgavjgarjgozjgZ/jgYvjgapcIilcbiAgICAgICAgICAgIGNvbnN0IHRleHQgPSBsaW5lLnJlcGxhY2UodGltZXN0YW1wUmVnZXgsICcnKS50cmltKCk7XG4gICAgICAgICAgICBzeW5jVGV4dC5wdXNoKHsgdGltZXN0YW1wLCB0ZXh0IH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIENyZWF0aW5nIHRoZSBJTHlyaWNzVGFnIG9iamVjdFxuICAgIHJldHVybiB7XG4gICAgICAgIGNvbnRlbnRUeXBlOiBMeXJpY3NDb250ZW50VHlwZS5seXJpY3MsXG4gICAgICAgIHRpbWVTdGFtcEZvcm1hdDogVGltZXN0YW1wRm9ybWF0Lm1pbGxpc2Vjb25kcyxcbiAgICAgICAgc3luY1RleHQsXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUx5cmljc1BhcnNlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/lrc/LyricsParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/lyrics3/Lyrics3.js":
/*!************************************************************!*\
  !*** ./node_modules/music-metadata/lib/lyrics3/Lyrics3.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   endTag2: () => (/* binding */ endTag2),\n/* harmony export */   getLyricsHeaderLength: () => (/* binding */ getLyricsHeaderLength)\n/* harmony export */ });\nconst endTag2 = 'LYRICS200';\nasync function getLyricsHeaderLength(tokenizer) {\n    const fileSize = tokenizer.fileInfo.size;\n    if (fileSize >= 143) {\n        const buf = new Uint8Array(15);\n        const position = tokenizer.position;\n        await tokenizer.readBuffer(buf, { position: fileSize - 143 });\n        tokenizer.setPosition(position); // Restore position\n        const txt = new TextDecoder('latin1').decode(buf);\n        const tag = txt.slice(6);\n        if (tag === endTag2) {\n            return Number.parseInt(txt.slice(0, 6), 10) + 15;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=Lyrics3.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2x5cmljczMvTHlyaWNzMy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQywwQkFBMEI7QUFDcEUseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvbHlyaWNzMy9MeXJpY3MzLmpzPzMzYzAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGVuZFRhZzIgPSAnTFlSSUNTMjAwJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRMeXJpY3NIZWFkZXJMZW5ndGgodG9rZW5pemVyKSB7XG4gICAgY29uc3QgZmlsZVNpemUgPSB0b2tlbml6ZXIuZmlsZUluZm8uc2l6ZTtcbiAgICBpZiAoZmlsZVNpemUgPj0gMTQzKSB7XG4gICAgICAgIGNvbnN0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KDE1KTtcbiAgICAgICAgY29uc3QgcG9zaXRpb24gPSB0b2tlbml6ZXIucG9zaXRpb247XG4gICAgICAgIGF3YWl0IHRva2VuaXplci5yZWFkQnVmZmVyKGJ1ZiwgeyBwb3NpdGlvbjogZmlsZVNpemUgLSAxNDMgfSk7XG4gICAgICAgIHRva2VuaXplci5zZXRQb3NpdGlvbihwb3NpdGlvbik7IC8vIFJlc3RvcmUgcG9zaXRpb25cbiAgICAgICAgY29uc3QgdHh0ID0gbmV3IFRleHREZWNvZGVyKCdsYXRpbjEnKS5kZWNvZGUoYnVmKTtcbiAgICAgICAgY29uc3QgdGFnID0gdHh0LnNsaWNlKDYpO1xuICAgICAgICBpZiAodGFnID09PSBlbmRUYWcyKSB7XG4gICAgICAgICAgICByZXR1cm4gTnVtYmVyLnBhcnNlSW50KHR4dC5zbGljZSgwLCA2KSwgMTApICsgMTU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIDA7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1MeXJpY3MzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/lyrics3/Lyrics3.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/matroska/MatroskaDtd.js":
/*!*****************************************************************!*\
  !*** ./node_modules/music-metadata/lib/matroska/MatroskaDtd.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   matroskaDtd: () => (/* binding */ matroskaDtd)\n/* harmony export */ });\n/* harmony import */ var _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ebml/types.js */ \"(rsc)/./node_modules/music-metadata/lib/ebml/types.js\");\n\n/**\n * Elements of document type description\n * Derived from https://github.com/tungol/EBML/blob/master/doctypes/matroska.dtd\n * Extended with:\n * - https://www.matroska.org/technical/specs/index.html\n */\nconst matroskaDtd = {\n    name: 'dtd',\n    container: {\n        0x1a45dfa3: {\n            name: 'ebml',\n            container: {\n                0x4286: { name: 'ebmlVersion', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint }, // 5.1.1\n                0x42f7: { name: 'ebmlReadVersion', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint }, // 5.1.2\n                0x42f2: { name: 'ebmlMaxIDWidth', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint }, // 5.1.3\n                0x42f3: { name: 'ebmlMaxSizeWidth', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint }, // 5.1.4\n                0x4282: { name: 'docType', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string }, // 5.1.5\n                0x4287: { name: 'docTypeVersion', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint }, // 5.1.6\n                0x4285: { name: 'docTypeReadVersion', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint } // 5.1.7\n            }\n        },\n        // Matroska segments\n        0x18538067: {\n            name: 'segment',\n            container: {\n                // Meta Seek Information (also known as MetaSeek)\n                0x114d9b74: {\n                    name: 'seekHead',\n                    container: {\n                        0x4dbb: {\n                            name: 'seek',\n                            multiple: true,\n                            container: {\n                                0x53ab: { name: 'id', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.binary },\n                                0x53ac: { name: 'position', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint }\n                            }\n                        }\n                    }\n                },\n                // Segment Information\n                0x1549a966: {\n                    name: 'info',\n                    container: {\n                        0x73a4: { name: 'uid', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid },\n                        0x7384: { name: 'filename', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                        0x3cb923: { name: 'prevUID', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid },\n                        0x3c83ab: { name: 'prevFilename', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                        0x3eb923: { name: 'nextUID', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid },\n                        0x3e83bb: { name: 'nextFilename', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                        0x2ad7b1: { name: 'timecodeScale', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                        0x4489: { name: 'duration', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.float },\n                        0x4461: { name: 'dateUTC', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                        0x7ba9: { name: 'title', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                        0x4d80: { name: 'muxingApp', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                        0x5741: { name: 'writingApp', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string }\n                    }\n                },\n                // Cluster\n                0x1f43b675: {\n                    name: 'cluster',\n                    multiple: true,\n                    container: {\n                        0xe7: { name: 'timecode', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid },\n                        0x58d7: { name: 'silentTracks ', multiple: true },\n                        0xa7: { name: 'position', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid },\n                        0xab: { name: 'prevSize', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid },\n                        0xa0: { name: 'blockGroup' },\n                        0xa3: { name: 'simpleBlock' }\n                    }\n                },\n                // Track\n                0x1654ae6b: {\n                    name: 'tracks',\n                    container: {\n                        0xae: {\n                            name: 'entries',\n                            multiple: true,\n                            container: {\n                                0xd7: { name: 'trackNumber', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                0x73c5: { name: 'uid', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid },\n                                0x83: { name: 'trackType', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                0xb9: { name: 'flagEnabled', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.bool },\n                                0x88: { name: 'flagDefault', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.bool },\n                                0x55aa: { name: 'flagForced', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.bool }, // extended\n                                0x9c: { name: 'flagLacing', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.bool },\n                                0x6de7: { name: 'minCache', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                0x6de8: { name: 'maxCache', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                0x23e383: { name: 'defaultDuration', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                0x23314f: { name: 'timecodeScale', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.float },\n                                0x536e: { name: 'name', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                                0x22b59c: { name: 'language', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                                0x86: { name: 'codecID', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                                0x63a2: { name: 'codecPrivate', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.binary },\n                                0x258688: { name: 'codecName', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                                0x3a9697: { name: 'codecSettings', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                                0x3b4040: { name: 'codecInfoUrl', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                                0x26b240: { name: 'codecDownloadUrl', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                                0xaa: { name: 'codecDecodeAll', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.bool },\n                                0x6fab: { name: 'trackOverlay', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                // Video\n                                0xe0: {\n                                    name: 'video',\n                                    container: {\n                                        0x9a: { name: 'flagInterlaced', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.bool },\n                                        0x53b8: { name: 'stereoMode', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                        0xb0: { name: 'pixelWidth', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                        0xba: { name: 'pixelHeight', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                        0x54b0: { name: 'displayWidth', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                        0x54ba: { name: 'displayHeight', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                        0x54b3: { name: 'aspectRatioType', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                        0x2eb524: { name: 'colourSpace', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                        0x2fb523: { name: 'gammaValue', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.float }\n                                    }\n                                },\n                                // Audio\n                                0xe1: {\n                                    name: 'audio',\n                                    container: {\n                                        0xb5: { name: 'samplingFrequency', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.float },\n                                        0x78b5: { name: 'outputSamplingFrequency', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.float },\n                                        0x9f: { name: 'channels', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint }, // https://www.matroska.org/technical/specs/index.html\n                                        0x94: { name: 'channels', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                        0x7d7b: { name: 'channelPositions', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.binary },\n                                        0x6264: { name: 'bitDepth', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint }\n                                    }\n                                },\n                                // Content Encoding\n                                0x6d80: {\n                                    name: 'contentEncodings',\n                                    container: {\n                                        0x6240: {\n                                            name: 'contentEncoding',\n                                            container: {\n                                                0x5031: { name: 'order', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                                0x5032: { name: 'scope', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.bool },\n                                                0x5033: { name: 'type', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                                0x5034: {\n                                                    name: 'contentEncoding',\n                                                    container: {\n                                                        0x4254: { name: 'contentCompAlgo', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                                        0x4255: { name: 'contentCompSettings', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.binary }\n                                                    }\n                                                },\n                                                0x5035: {\n                                                    name: 'contentEncoding',\n                                                    container: {\n                                                        0x47e1: { name: 'contentEncAlgo', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                                        0x47e2: { name: 'contentEncKeyID', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.binary },\n                                                        0x47e3: { name: 'contentSignature ', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.binary },\n                                                        0x47e4: { name: 'ContentSigKeyID  ', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.binary },\n                                                        0x47e5: { name: 'contentSigAlgo ', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                                        0x47e6: { name: 'contentSigHashAlgo ', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint }\n                                                    }\n                                                },\n                                                0x6264: { name: 'bitDepth', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                // Cueing Data\n                0x1c53bb6b: {\n                    name: 'cues',\n                    container: {\n                        0xbb: {\n                            name: 'cuePoint',\n                            container: {\n                                0xb3: { name: 'cueTime', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid },\n                                0xb7: {\n                                    name: 'positions',\n                                    container: {\n                                        0xf7: { name: 'track', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                        0xf1: { name: 'clusterPosition', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                        0x5378: { name: 'blockNumber', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                        0xea: { name: 'codecState', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                        0xdb: {\n                                            name: 'reference', container: {\n                                                0x96: { name: 'time', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                                0x97: { name: 'cluster', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                                0x535f: { name: 'number', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                                0xeb: { name: 'codecState', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint }\n                                            }\n                                        },\n                                        0xf0: { name: 'relativePosition', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint } // extended\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                // Attachment\n                0x1941a469: {\n                    name: 'attachments',\n                    container: {\n                        0x61a7: {\n                            name: 'attachedFiles',\n                            multiple: true,\n                            container: {\n                                0x467e: { name: 'description', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                                0x466e: { name: 'name', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                                0x4660: { name: 'mimeType', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                                0x465c: { name: 'data', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.binary },\n                                0x46ae: { name: 'uid', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid }\n                            }\n                        }\n                    }\n                },\n                // Chapters\n                0x1043a770: {\n                    name: 'chapters',\n                    container: {\n                        0x45b9: {\n                            name: 'editionEntry',\n                            container: {\n                                0xb6: {\n                                    name: 'chapterAtom',\n                                    container: {\n                                        0x73c4: { name: 'uid', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid },\n                                        0x91: { name: 'timeStart', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                        0x92: { name: 'timeEnd', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid },\n                                        0x98: { name: 'hidden', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.bool },\n                                        0x4598: { name: 'enabled', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid },\n                                        0x8f: {\n                                            name: 'track', container: {\n                                                0x89: { name: 'trackNumber', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid },\n                                                0x80: {\n                                                    name: 'display', container: {\n                                                        0x85: { name: 'string', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                                                        0x437c: { name: 'language ', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                                                        0x437e: { name: 'country ', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                // Tagging\n                0x1254c367: {\n                    name: 'tags',\n                    container: {\n                        0x7373: {\n                            name: 'tag',\n                            multiple: true,\n                            container: {\n                                0x63c0: {\n                                    name: 'target',\n                                    container: {\n                                        0x63c5: { name: 'tagTrackUID', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid },\n                                        0x63c4: { name: 'tagChapterUID', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint },\n                                        0x63c6: { name: 'tagAttachmentUID', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid },\n                                        0x63ca: { name: 'targetType', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string }, // extended\n                                        0x68ca: { name: 'targetTypeValue', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uint }, // extended\n                                        0x63c9: { name: 'tagEditionUID', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.uid } // extended\n                                    }\n                                },\n                                0x67c8: {\n                                    name: 'simpleTags',\n                                    multiple: true,\n                                    container: {\n                                        0x45a3: { name: 'name', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                                        0x4487: { name: 'string', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string },\n                                        0x4485: { name: 'binary', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.binary },\n                                        0x447a: { name: 'language', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string }, // extended\n                                        0x447b: { name: 'languageIETF', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.string }, // extended\n                                        0x4484: { name: 'default', value: _ebml_types_js__WEBPACK_IMPORTED_MODULE_0__.DataType.bool } // extended\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\n//# sourceMappingURL=MatroskaDtd.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/matroska/MatroskaDtd.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/matroska/MatroskaLoader.js":
/*!********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/matroska/MatroskaLoader.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   matroskaParserLoader: () => (/* binding */ matroskaParserLoader)\n/* harmony export */ });\nconst matroskaParserLoader = {\n    parserType: 'matroska',\n    extensions: ['.mka', '.mkv', '.mk3d', '.mks', 'webm'],\n    async load(metadata, tokenizer, options) {\n        return new (await __webpack_require__.e(/*! import() */ \"vendor-chunks/music-metadata\").then(__webpack_require__.bind(__webpack_require__, /*! ./MatroskaParser.js */ \"(rsc)/./node_modules/music-metadata/lib/matroska/MatroskaParser.js\"))).MatroskaParser(metadata, tokenizer, options);\n    }\n};\n//# sourceMappingURL=MatroskaLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL21hdHJvc2thL01hdHJvc2thTG9hZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiwwTkFBNkI7QUFDdkQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9tYXRyb3NrYS9NYXRyb3NrYUxvYWRlci5qcz9iMTdiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBtYXRyb3NrYVBhcnNlckxvYWRlciA9IHtcbiAgICBwYXJzZXJUeXBlOiAnbWF0cm9za2EnLFxuICAgIGV4dGVuc2lvbnM6IFsnLm1rYScsICcubWt2JywgJy5tazNkJywgJy5ta3MnLCAnd2VibSddLFxuICAgIGFzeW5jIGxvYWQobWV0YWRhdGEsIHRva2VuaXplciwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IChhd2FpdCBpbXBvcnQoJy4vTWF0cm9za2FQYXJzZXIuanMnKSkuTWF0cm9za2FQYXJzZXIobWV0YWRhdGEsIHRva2VuaXplciwgb3B0aW9ucyk7XG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1hdHJvc2thTG9hZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/matroska/MatroskaLoader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/matroska/MatroskaParser.js":
/*!********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/matroska/MatroskaParser.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MatroskaParser: () => (/* binding */ MatroskaParser)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/BasicParser.js */ \"(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js\");\n/* harmony import */ var _MatroskaDtd_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MatroskaDtd.js */ \"(rsc)/./node_modules/music-metadata/lib/matroska/MatroskaDtd.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/music-metadata/lib/matroska/types.js\");\n/* harmony import */ var _ebml_EbmlIterator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ebml/EbmlIterator.js */ \"(rsc)/./node_modules/music-metadata/lib/ebml/EbmlIterator.js\");\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('music-metadata:parser:matroska');\n/**\n * Extensible Binary Meta Language (EBML) parser\n * https://en.wikipedia.org/wiki/Extensible_Binary_Meta_Language\n * http://matroska.sourceforge.net/technical/specs/rfc/index.html\n *\n * WEBM VP8 AUDIO FILE\n */\nclass MatroskaParser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_1__.BasicParser {\n    constructor() {\n        super(...arguments);\n        this.seekHeadOffset = 0;\n        /**\n         * Use index to skip multiple segment/cluster elements at once.\n         * Significant performance impact\n         */\n        this.flagUseIndexToSkipClusters = this.options.mkvUseIndex ?? false;\n    }\n    async parse() {\n        const containerSize = this.tokenizer.fileInfo.size ?? Number.MAX_SAFE_INTEGER;\n        const matroskaIterator = new _ebml_EbmlIterator_js__WEBPACK_IMPORTED_MODULE_4__.EbmlIterator(this.tokenizer);\n        debug('Initializing DTD end MatroskaIterator');\n        await matroskaIterator.iterate(_MatroskaDtd_js__WEBPACK_IMPORTED_MODULE_2__.matroskaDtd, containerSize, {\n            startNext: (element) => {\n                switch (element.id) {\n                    // case 0x1f43b675: // cluster\n                    case 0x1c53bb6b: // Cueing Data\n                        debug(`Skip element: name=${element.name}, id=0x${element.id.toString(16)}`);\n                        return _ebml_EbmlIterator_js__WEBPACK_IMPORTED_MODULE_4__.ParseAction.IgnoreElement;\n                    case 0x1f43b675: // cluster\n                        if (this.flagUseIndexToSkipClusters && this.seekHead) {\n                            const index = this.seekHead.seek.find(index => index.position + this.seekHeadOffset > this.tokenizer.position);\n                            if (index) {\n                                // Go to next index position\n                                const ignoreSize = index.position + this.seekHeadOffset - this.tokenizer.position;\n                                debug(`Use index to go to next position, ignoring ${ignoreSize} bytes`);\n                                this.tokenizer.ignore(ignoreSize);\n                                return _ebml_EbmlIterator_js__WEBPACK_IMPORTED_MODULE_4__.ParseAction.SkipElement;\n                            }\n                        }\n                        return _ebml_EbmlIterator_js__WEBPACK_IMPORTED_MODULE_4__.ParseAction.IgnoreElement;\n                    default:\n                        return _ebml_EbmlIterator_js__WEBPACK_IMPORTED_MODULE_4__.ParseAction.ReadNext;\n                }\n            },\n            elementValue: async (element, value, offset) => {\n                debug(`Received: name=${element.name}, value=${value}`);\n                switch (element.id) {\n                    case 0x4282: // docType\n                        this.metadata.setFormat('container', `EBML/${value}`);\n                        break;\n                    case 0x114d9b74:\n                        this.seekHead = value;\n                        this.seekHeadOffset = offset;\n                        break;\n                    case 0x1549a966:\n                        { // Info (Segment Information)\n                            const info = value;\n                            const timecodeScale = info.timecodeScale ? info.timecodeScale : 1000000;\n                            if (typeof info.duration === 'number') {\n                                const duration = info.duration * timecodeScale / 1000000000;\n                                await this.addTag('segment:title', info.title);\n                                this.metadata.setFormat('duration', Number(duration));\n                            }\n                        }\n                        break;\n                    case 0x1654ae6b:\n                        { // tracks\n                            const audioTracks = value;\n                            if (audioTracks?.entries) {\n                                audioTracks.entries.forEach(entry => {\n                                    const stream = {\n                                        codecName: entry.codecID.replace('A_', '').replace('V_', ''),\n                                        codecSettings: entry.codecSettings,\n                                        flagDefault: entry.flagDefault,\n                                        flagLacing: entry.flagLacing,\n                                        flagEnabled: entry.flagEnabled,\n                                        language: entry.language,\n                                        name: entry.name,\n                                        type: entry.trackType,\n                                        audio: entry.audio,\n                                        video: entry.video\n                                    };\n                                    this.metadata.addStreamInfo(stream);\n                                });\n                                const audioTrack = audioTracks.entries\n                                    .filter(entry => entry.trackType === _types_js__WEBPACK_IMPORTED_MODULE_3__.TrackType.audio)\n                                    .reduce((acc, cur) => {\n                                    if (!acc)\n                                        return cur;\n                                    if (cur.flagDefault && !acc.flagDefault)\n                                        return cur;\n                                    if (cur.trackNumber < acc.trackNumber)\n                                        return cur;\n                                    return acc;\n                                }, null);\n                                if (audioTrack) {\n                                    this.metadata.setFormat('codec', audioTrack.codecID.replace('A_', ''));\n                                    this.metadata.setFormat('sampleRate', audioTrack.audio.samplingFrequency);\n                                    this.metadata.setFormat('numberOfChannels', audioTrack.audio.channels);\n                                }\n                            }\n                        }\n                        break;\n                    case 0x1254c367:\n                        { // tags\n                            const tags = value;\n                            await Promise.all(tags.tag.map(async (tag) => {\n                                const target = tag.target;\n                                const targetType = target?.targetTypeValue ? _types_js__WEBPACK_IMPORTED_MODULE_3__.TargetType[target.targetTypeValue] : (target?.targetType ? target.targetType : 'track');\n                                await Promise.all(tag.simpleTags.map(async (simpleTag) => {\n                                    const value = simpleTag.string ? simpleTag.string : simpleTag.binary;\n                                    await this.addTag(`${targetType}:${simpleTag.name}`, value);\n                                }));\n                            }));\n                        }\n                        break;\n                    case 0x1941a469:\n                        { // attachments\n                            const attachments = value;\n                            await Promise.all(attachments.attachedFiles\n                                .filter(file => file.mimeType.startsWith('image/'))\n                                .map(file => this.addTag('picture', {\n                                data: file.data,\n                                format: file.mimeType,\n                                description: file.description,\n                                name: file.name\n                            })));\n                        }\n                        break;\n                }\n            }\n        });\n    }\n    async addTag(tagId, value) {\n        await this.metadata.addTag('matroska', tagId, value);\n    }\n}\n//# sourceMappingURL=MatroskaParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/matroska/MatroskaParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/matroska/MatroskaTagMapper.js":
/*!***********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/matroska/MatroskaTagMapper.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MatroskaTagMapper: () => (/* binding */ MatroskaTagMapper)\n/* harmony export */ });\n/* harmony import */ var _common_CaseInsensitiveTagMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/CaseInsensitiveTagMap.js */ \"(rsc)/./node_modules/music-metadata/lib/common/CaseInsensitiveTagMap.js\");\n\n/**\n * EBML Tag map\n */\nconst ebmlTagMap = {\n    'segment:title': 'title',\n    'album:ARTIST': 'albumartist',\n    'album:ARTISTSORT': 'albumartistsort',\n    'album:TITLE': 'album',\n    'album:DATE_RECORDED': 'originaldate',\n    'album:DATE_RELEASED': 'releasedate',\n    'album:PART_NUMBER': 'disk',\n    'album:TOTAL_PARTS': 'totaltracks',\n    'track:ARTIST': 'artist',\n    'track:ARTISTSORT': 'artistsort',\n    'track:TITLE': 'title',\n    'track:PART_NUMBER': 'track',\n    'track:MUSICBRAINZ_TRACKID': 'musicbrainz_recordingid',\n    'track:MUSICBRAINZ_ALBUMID': 'musicbrainz_albumid',\n    'track:MUSICBRAINZ_ARTISTID': 'musicbrainz_artistid',\n    'track:PUBLISHER': 'label',\n    'track:GENRE': 'genre',\n    'track:ENCODER': 'encodedby',\n    'track:ENCODER_OPTIONS': 'encodersettings',\n    'edition:TOTAL_PARTS': 'totaldiscs',\n    picture: 'picture'\n};\nclass MatroskaTagMapper extends _common_CaseInsensitiveTagMap_js__WEBPACK_IMPORTED_MODULE_0__.CaseInsensitiveTagMap {\n    constructor() {\n        super(['matroska'], ebmlTagMap);\n    }\n}\n//# sourceMappingURL=MatroskaTagMapper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL21hdHJvc2thL01hdHJvc2thVGFnTWFwcGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJFO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnQ0FBZ0MsbUZBQXFCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL21hdHJvc2thL01hdHJvc2thVGFnTWFwcGVyLmpzP2ZmNGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZUluc2Vuc2l0aXZlVGFnTWFwIH0gZnJvbSAnLi4vY29tbW9uL0Nhc2VJbnNlbnNpdGl2ZVRhZ01hcC5qcyc7XG4vKipcbiAqIEVCTUwgVGFnIG1hcFxuICovXG5jb25zdCBlYm1sVGFnTWFwID0ge1xuICAgICdzZWdtZW50OnRpdGxlJzogJ3RpdGxlJyxcbiAgICAnYWxidW06QVJUSVNUJzogJ2FsYnVtYXJ0aXN0JyxcbiAgICAnYWxidW06QVJUSVNUU09SVCc6ICdhbGJ1bWFydGlzdHNvcnQnLFxuICAgICdhbGJ1bTpUSVRMRSc6ICdhbGJ1bScsXG4gICAgJ2FsYnVtOkRBVEVfUkVDT1JERUQnOiAnb3JpZ2luYWxkYXRlJyxcbiAgICAnYWxidW06REFURV9SRUxFQVNFRCc6ICdyZWxlYXNlZGF0ZScsXG4gICAgJ2FsYnVtOlBBUlRfTlVNQkVSJzogJ2Rpc2snLFxuICAgICdhbGJ1bTpUT1RBTF9QQVJUUyc6ICd0b3RhbHRyYWNrcycsXG4gICAgJ3RyYWNrOkFSVElTVCc6ICdhcnRpc3QnLFxuICAgICd0cmFjazpBUlRJU1RTT1JUJzogJ2FydGlzdHNvcnQnLFxuICAgICd0cmFjazpUSVRMRSc6ICd0aXRsZScsXG4gICAgJ3RyYWNrOlBBUlRfTlVNQkVSJzogJ3RyYWNrJyxcbiAgICAndHJhY2s6TVVTSUNCUkFJTlpfVFJBQ0tJRCc6ICdtdXNpY2JyYWluel9yZWNvcmRpbmdpZCcsXG4gICAgJ3RyYWNrOk1VU0lDQlJBSU5aX0FMQlVNSUQnOiAnbXVzaWNicmFpbnpfYWxidW1pZCcsXG4gICAgJ3RyYWNrOk1VU0lDQlJBSU5aX0FSVElTVElEJzogJ211c2ljYnJhaW56X2FydGlzdGlkJyxcbiAgICAndHJhY2s6UFVCTElTSEVSJzogJ2xhYmVsJyxcbiAgICAndHJhY2s6R0VOUkUnOiAnZ2VucmUnLFxuICAgICd0cmFjazpFTkNPREVSJzogJ2VuY29kZWRieScsXG4gICAgJ3RyYWNrOkVOQ09ERVJfT1BUSU9OUyc6ICdlbmNvZGVyc2V0dGluZ3MnLFxuICAgICdlZGl0aW9uOlRPVEFMX1BBUlRTJzogJ3RvdGFsZGlzY3MnLFxuICAgIHBpY3R1cmU6ICdwaWN0dXJlJ1xufTtcbmV4cG9ydCBjbGFzcyBNYXRyb3NrYVRhZ01hcHBlciBleHRlbmRzIENhc2VJbnNlbnNpdGl2ZVRhZ01hcCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKFsnbWF0cm9za2EnXSwgZWJtbFRhZ01hcCk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWF0cm9za2FUYWdNYXBwZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/matroska/MatroskaTagMapper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/matroska/types.js":
/*!***********************************************************!*\
  !*** ./node_modules/music-metadata/lib/matroska/types.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TargetType: () => (/* binding */ TargetType),\n/* harmony export */   TrackType: () => (/* binding */ TrackType)\n/* harmony export */ });\nvar TargetType;\n(function (TargetType) {\n    TargetType[TargetType[\"shot\"] = 10] = \"shot\";\n    TargetType[TargetType[\"scene\"] = 20] = \"scene\";\n    TargetType[TargetType[\"track\"] = 30] = \"track\";\n    TargetType[TargetType[\"part\"] = 40] = \"part\";\n    TargetType[TargetType[\"album\"] = 50] = \"album\";\n    TargetType[TargetType[\"edition\"] = 60] = \"edition\";\n    TargetType[TargetType[\"collection\"] = 70] = \"collection\";\n})(TargetType || (TargetType = {}));\nvar TrackType;\n(function (TrackType) {\n    TrackType[TrackType[\"video\"] = 1] = \"video\";\n    TrackType[TrackType[\"audio\"] = 2] = \"audio\";\n    TrackType[TrackType[\"complex\"] = 3] = \"complex\";\n    TrackType[TrackType[\"logo\"] = 4] = \"logo\";\n    TrackType[TrackType[\"subtitle\"] = 17] = \"subtitle\";\n    TrackType[TrackType[\"button\"] = 18] = \"button\";\n    TrackType[TrackType[\"control\"] = 32] = \"control\";\n})(TrackType || (TrackType = {}));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL21hdHJvc2thL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnQ0FBZ0M7QUFDMUI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw4QkFBOEI7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL21hdHJvc2thL3R5cGVzLmpzP2JhYzkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBUYXJnZXRUeXBlO1xuKGZ1bmN0aW9uIChUYXJnZXRUeXBlKSB7XG4gICAgVGFyZ2V0VHlwZVtUYXJnZXRUeXBlW1wic2hvdFwiXSA9IDEwXSA9IFwic2hvdFwiO1xuICAgIFRhcmdldFR5cGVbVGFyZ2V0VHlwZVtcInNjZW5lXCJdID0gMjBdID0gXCJzY2VuZVwiO1xuICAgIFRhcmdldFR5cGVbVGFyZ2V0VHlwZVtcInRyYWNrXCJdID0gMzBdID0gXCJ0cmFja1wiO1xuICAgIFRhcmdldFR5cGVbVGFyZ2V0VHlwZVtcInBhcnRcIl0gPSA0MF0gPSBcInBhcnRcIjtcbiAgICBUYXJnZXRUeXBlW1RhcmdldFR5cGVbXCJhbGJ1bVwiXSA9IDUwXSA9IFwiYWxidW1cIjtcbiAgICBUYXJnZXRUeXBlW1RhcmdldFR5cGVbXCJlZGl0aW9uXCJdID0gNjBdID0gXCJlZGl0aW9uXCI7XG4gICAgVGFyZ2V0VHlwZVtUYXJnZXRUeXBlW1wiY29sbGVjdGlvblwiXSA9IDcwXSA9IFwiY29sbGVjdGlvblwiO1xufSkoVGFyZ2V0VHlwZSB8fCAoVGFyZ2V0VHlwZSA9IHt9KSk7XG5leHBvcnQgdmFyIFRyYWNrVHlwZTtcbihmdW5jdGlvbiAoVHJhY2tUeXBlKSB7XG4gICAgVHJhY2tUeXBlW1RyYWNrVHlwZVtcInZpZGVvXCJdID0gMV0gPSBcInZpZGVvXCI7XG4gICAgVHJhY2tUeXBlW1RyYWNrVHlwZVtcImF1ZGlvXCJdID0gMl0gPSBcImF1ZGlvXCI7XG4gICAgVHJhY2tUeXBlW1RyYWNrVHlwZVtcImNvbXBsZXhcIl0gPSAzXSA9IFwiY29tcGxleFwiO1xuICAgIFRyYWNrVHlwZVtUcmFja1R5cGVbXCJsb2dvXCJdID0gNF0gPSBcImxvZ29cIjtcbiAgICBUcmFja1R5cGVbVHJhY2tUeXBlW1wic3VidGl0bGVcIl0gPSAxN10gPSBcInN1YnRpdGxlXCI7XG4gICAgVHJhY2tUeXBlW1RyYWNrVHlwZVtcImJ1dHRvblwiXSA9IDE4XSA9IFwiYnV0dG9uXCI7XG4gICAgVHJhY2tUeXBlW1RyYWNrVHlwZVtcImNvbnRyb2xcIl0gPSAzMl0gPSBcImNvbnRyb2xcIjtcbn0pKFRyYWNrVHlwZSB8fCAoVHJhY2tUeXBlID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/matroska/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/mp4/Atom.js":
/*!*****************************************************!*\
  !*** ./node_modules/music-metadata/lib/mp4/Atom.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Atom: () => (/* binding */ Atom)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _AtomToken_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AtomToken.js */ \"(rsc)/./node_modules/music-metadata/lib/mp4/AtomToken.js\");\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('music-metadata:parser:MP4:Atom');\nclass Atom {\n    static async readAtom(tokenizer, dataHandler, parent, remaining) {\n        // Parse atom header\n        const offset = tokenizer.position;\n        debug(`Reading next token on offset=${offset}...`); //  buf.toString('ascii')\n        const header = await tokenizer.readToken(_AtomToken_js__WEBPACK_IMPORTED_MODULE_1__.Header);\n        const extended = header.length === 1n;\n        if (extended) {\n            header.length = await tokenizer.readToken(_AtomToken_js__WEBPACK_IMPORTED_MODULE_1__.ExtendedSize);\n        }\n        const atomBean = new Atom(header, extended, parent);\n        const payloadLength = atomBean.getPayloadLength(remaining);\n        debug(`parse atom name=${atomBean.atomPath}, extended=${atomBean.extended}, offset=${offset}, len=${atomBean.header.length}`); //  buf.toString('ascii')\n        await atomBean.readData(tokenizer, dataHandler, payloadLength);\n        return atomBean;\n    }\n    constructor(header, extended, parent) {\n        this.header = header;\n        this.extended = extended;\n        this.parent = parent;\n        this.children = [];\n        this.atomPath = (this.parent ? `${this.parent.atomPath}.` : '') + this.header.name;\n    }\n    getHeaderLength() {\n        return this.extended ? 16 : 8;\n    }\n    getPayloadLength(remaining) {\n        return (this.header.length === 0n ? remaining : Number(this.header.length)) - this.getHeaderLength();\n    }\n    async readAtoms(tokenizer, dataHandler, size) {\n        while (size > 0) {\n            const atomBean = await Atom.readAtom(tokenizer, dataHandler, this, size);\n            this.children.push(atomBean);\n            size -= atomBean.header.length === 0n ? size : Number(atomBean.header.length);\n        }\n    }\n    async readData(tokenizer, dataHandler, remaining) {\n        switch (this.header.name) {\n            // \"Container\" atoms, contains nested atoms\n            case 'moov': // The Movie Atom: contains other atoms\n            case 'udta': // User defined atom\n            case 'trak':\n            case 'mdia': // Media atom\n            case 'minf': // Media Information Atom\n            case 'stbl': // The Sample Table Atom\n            case '<id>':\n            case 'ilst':\n            case 'tref':\n                return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining));\n            case 'meta': { // Metadata Atom, ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW8\n                // meta has 4 bytes of padding, ignore\n                const peekHeader = await tokenizer.peekToken(_AtomToken_js__WEBPACK_IMPORTED_MODULE_1__.Header);\n                const paddingLength = peekHeader.name === 'hdlr' ? 0 : 4;\n                await tokenizer.ignore(paddingLength);\n                return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining) - paddingLength);\n            }\n            default:\n                return dataHandler(this, remaining);\n        }\n    }\n}\n//# sourceMappingURL=Atom.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL21wNC9BdG9tLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QjtBQUNjO0FBQ0o7QUFDeEMsY0FBYyxrQ0FBUztBQUNoQjtBQUNQO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxPQUFPLE9BQU87QUFDNUQsaURBQWlELGlEQUFnQjtBQUNqRTtBQUNBO0FBQ0Esc0RBQXNELHVEQUFzQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsa0JBQWtCLGFBQWEsa0JBQWtCLFdBQVcsT0FBTyxRQUFRLHVCQUF1QixJQUFJO0FBQ3ZJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMscUJBQXFCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLDZEQUE2RCxpREFBTTtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvbXA0L0F0b20uanM/ZjBjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaW5pdERlYnVnIGZyb20gJ2RlYnVnJztcbmltcG9ydCAqIGFzIEF0b21Ub2tlbiBmcm9tICcuL0F0b21Ub2tlbi5qcyc7XG5pbXBvcnQgeyBIZWFkZXIgfSBmcm9tICcuL0F0b21Ub2tlbi5qcyc7XG5jb25zdCBkZWJ1ZyA9IGluaXREZWJ1ZygnbXVzaWMtbWV0YWRhdGE6cGFyc2VyOk1QNDpBdG9tJyk7XG5leHBvcnQgY2xhc3MgQXRvbSB7XG4gICAgc3RhdGljIGFzeW5jIHJlYWRBdG9tKHRva2VuaXplciwgZGF0YUhhbmRsZXIsIHBhcmVudCwgcmVtYWluaW5nKSB7XG4gICAgICAgIC8vIFBhcnNlIGF0b20gaGVhZGVyXG4gICAgICAgIGNvbnN0IG9mZnNldCA9IHRva2VuaXplci5wb3NpdGlvbjtcbiAgICAgICAgZGVidWcoYFJlYWRpbmcgbmV4dCB0b2tlbiBvbiBvZmZzZXQ9JHtvZmZzZXR9Li4uYCk7IC8vICBidWYudG9TdHJpbmcoJ2FzY2lpJylcbiAgICAgICAgY29uc3QgaGVhZGVyID0gYXdhaXQgdG9rZW5pemVyLnJlYWRUb2tlbihBdG9tVG9rZW4uSGVhZGVyKTtcbiAgICAgICAgY29uc3QgZXh0ZW5kZWQgPSBoZWFkZXIubGVuZ3RoID09PSAxbjtcbiAgICAgICAgaWYgKGV4dGVuZGVkKSB7XG4gICAgICAgICAgICBoZWFkZXIubGVuZ3RoID0gYXdhaXQgdG9rZW5pemVyLnJlYWRUb2tlbihBdG9tVG9rZW4uRXh0ZW5kZWRTaXplKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhdG9tQmVhbiA9IG5ldyBBdG9tKGhlYWRlciwgZXh0ZW5kZWQsIHBhcmVudCk7XG4gICAgICAgIGNvbnN0IHBheWxvYWRMZW5ndGggPSBhdG9tQmVhbi5nZXRQYXlsb2FkTGVuZ3RoKHJlbWFpbmluZyk7XG4gICAgICAgIGRlYnVnKGBwYXJzZSBhdG9tIG5hbWU9JHthdG9tQmVhbi5hdG9tUGF0aH0sIGV4dGVuZGVkPSR7YXRvbUJlYW4uZXh0ZW5kZWR9LCBvZmZzZXQ9JHtvZmZzZXR9LCBsZW49JHthdG9tQmVhbi5oZWFkZXIubGVuZ3RofWApOyAvLyAgYnVmLnRvU3RyaW5nKCdhc2NpaScpXG4gICAgICAgIGF3YWl0IGF0b21CZWFuLnJlYWREYXRhKHRva2VuaXplciwgZGF0YUhhbmRsZXIsIHBheWxvYWRMZW5ndGgpO1xuICAgICAgICByZXR1cm4gYXRvbUJlYW47XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKGhlYWRlciwgZXh0ZW5kZWQsIHBhcmVudCkge1xuICAgICAgICB0aGlzLmhlYWRlciA9IGhlYWRlcjtcbiAgICAgICAgdGhpcy5leHRlbmRlZCA9IGV4dGVuZGVkO1xuICAgICAgICB0aGlzLnBhcmVudCA9IHBhcmVudDtcbiAgICAgICAgdGhpcy5jaGlsZHJlbiA9IFtdO1xuICAgICAgICB0aGlzLmF0b21QYXRoID0gKHRoaXMucGFyZW50ID8gYCR7dGhpcy5wYXJlbnQuYXRvbVBhdGh9LmAgOiAnJykgKyB0aGlzLmhlYWRlci5uYW1lO1xuICAgIH1cbiAgICBnZXRIZWFkZXJMZW5ndGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmV4dGVuZGVkID8gMTYgOiA4O1xuICAgIH1cbiAgICBnZXRQYXlsb2FkTGVuZ3RoKHJlbWFpbmluZykge1xuICAgICAgICByZXR1cm4gKHRoaXMuaGVhZGVyLmxlbmd0aCA9PT0gMG4gPyByZW1haW5pbmcgOiBOdW1iZXIodGhpcy5oZWFkZXIubGVuZ3RoKSkgLSB0aGlzLmdldEhlYWRlckxlbmd0aCgpO1xuICAgIH1cbiAgICBhc3luYyByZWFkQXRvbXModG9rZW5pemVyLCBkYXRhSGFuZGxlciwgc2l6ZSkge1xuICAgICAgICB3aGlsZSAoc2l6ZSA+IDApIHtcbiAgICAgICAgICAgIGNvbnN0IGF0b21CZWFuID0gYXdhaXQgQXRvbS5yZWFkQXRvbSh0b2tlbml6ZXIsIGRhdGFIYW5kbGVyLCB0aGlzLCBzaXplKTtcbiAgICAgICAgICAgIHRoaXMuY2hpbGRyZW4ucHVzaChhdG9tQmVhbik7XG4gICAgICAgICAgICBzaXplIC09IGF0b21CZWFuLmhlYWRlci5sZW5ndGggPT09IDBuID8gc2l6ZSA6IE51bWJlcihhdG9tQmVhbi5oZWFkZXIubGVuZ3RoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhc3luYyByZWFkRGF0YSh0b2tlbml6ZXIsIGRhdGFIYW5kbGVyLCByZW1haW5pbmcpIHtcbiAgICAgICAgc3dpdGNoICh0aGlzLmhlYWRlci5uYW1lKSB7XG4gICAgICAgICAgICAvLyBcIkNvbnRhaW5lclwiIGF0b21zLCBjb250YWlucyBuZXN0ZWQgYXRvbXNcbiAgICAgICAgICAgIGNhc2UgJ21vb3YnOiAvLyBUaGUgTW92aWUgQXRvbTogY29udGFpbnMgb3RoZXIgYXRvbXNcbiAgICAgICAgICAgIGNhc2UgJ3VkdGEnOiAvLyBVc2VyIGRlZmluZWQgYXRvbVxuICAgICAgICAgICAgY2FzZSAndHJhayc6XG4gICAgICAgICAgICBjYXNlICdtZGlhJzogLy8gTWVkaWEgYXRvbVxuICAgICAgICAgICAgY2FzZSAnbWluZic6IC8vIE1lZGlhIEluZm9ybWF0aW9uIEF0b21cbiAgICAgICAgICAgIGNhc2UgJ3N0YmwnOiAvLyBUaGUgU2FtcGxlIFRhYmxlIEF0b21cbiAgICAgICAgICAgIGNhc2UgJzxpZD4nOlxuICAgICAgICAgICAgY2FzZSAnaWxzdCc6XG4gICAgICAgICAgICBjYXNlICd0cmVmJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZWFkQXRvbXModG9rZW5pemVyLCBkYXRhSGFuZGxlciwgdGhpcy5nZXRQYXlsb2FkTGVuZ3RoKHJlbWFpbmluZykpO1xuICAgICAgICAgICAgY2FzZSAnbWV0YSc6IHsgLy8gTWV0YWRhdGEgQXRvbSwgcmVmOiBodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vbGlicmFyeS9jb250ZW50L2RvY3VtZW50YXRpb24vUXVpY2tUaW1lL1FURkYvTWV0YWRhdGEvTWV0YWRhdGEuaHRtbCMvL2FwcGxlX3JlZi9kb2MvdWlkL1RQNDAwMDA5MzktQ0gxLVNXOFxuICAgICAgICAgICAgICAgIC8vIG1ldGEgaGFzIDQgYnl0ZXMgb2YgcGFkZGluZywgaWdub3JlXG4gICAgICAgICAgICAgICAgY29uc3QgcGVla0hlYWRlciA9IGF3YWl0IHRva2VuaXplci5wZWVrVG9rZW4oSGVhZGVyKTtcbiAgICAgICAgICAgICAgICBjb25zdCBwYWRkaW5nTGVuZ3RoID0gcGVla0hlYWRlci5uYW1lID09PSAnaGRscicgPyAwIDogNDtcbiAgICAgICAgICAgICAgICBhd2FpdCB0b2tlbml6ZXIuaWdub3JlKHBhZGRpbmdMZW5ndGgpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnJlYWRBdG9tcyh0b2tlbml6ZXIsIGRhdGFIYW5kbGVyLCB0aGlzLmdldFBheWxvYWRMZW5ndGgocmVtYWluaW5nKSAtIHBhZGRpbmdMZW5ndGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gZGF0YUhhbmRsZXIodGhpcywgcmVtYWluaW5nKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF0b20uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/mp4/Atom.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/mp4/AtomToken.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/mp4/AtomToken.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChapterText: () => (/* binding */ ChapterText),\n/* harmony export */   DataAtom: () => (/* binding */ DataAtom),\n/* harmony export */   ExtendedSize: () => (/* binding */ ExtendedSize),\n/* harmony export */   FixedLengthAtom: () => (/* binding */ FixedLengthAtom),\n/* harmony export */   Header: () => (/* binding */ Header),\n/* harmony export */   MdhdAtom: () => (/* binding */ MdhdAtom),\n/* harmony export */   Mp4ContentError: () => (/* binding */ Mp4ContentError),\n/* harmony export */   MvhdAtom: () => (/* binding */ MvhdAtom),\n/* harmony export */   NameAtom: () => (/* binding */ NameAtom),\n/* harmony export */   SampleToChunkToken: () => (/* binding */ SampleToChunkToken),\n/* harmony export */   SoundSampleDescriptionV0: () => (/* binding */ SoundSampleDescriptionV0),\n/* harmony export */   SoundSampleDescriptionVersion: () => (/* binding */ SoundSampleDescriptionVersion),\n/* harmony export */   StcoAtom: () => (/* binding */ StcoAtom),\n/* harmony export */   StscAtom: () => (/* binding */ StscAtom),\n/* harmony export */   StsdAtom: () => (/* binding */ StsdAtom),\n/* harmony export */   StszAtom: () => (/* binding */ StszAtom),\n/* harmony export */   SttsAtom: () => (/* binding */ SttsAtom),\n/* harmony export */   TimeToSampleToken: () => (/* binding */ TimeToSampleToken),\n/* harmony export */   TrackHeaderAtom: () => (/* binding */ TrackHeaderAtom),\n/* harmony export */   ftyp: () => (/* binding */ ftyp),\n/* harmony export */   mhdr: () => (/* binding */ mhdr),\n/* harmony export */   tkhd: () => (/* binding */ tkhd)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/FourCC.js */ \"(rsc)/./node_modules/music-metadata/lib/common/FourCC.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_1__('music-metadata:parser:MP4:atom');\nclass Mp4ContentError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_3__.makeUnexpectedFileContentError)('MP4') {\n}\nconst Header = {\n    len: 8,\n    get: (buf, off) => {\n        const length = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off);\n        if (length < 0)\n            throw new Mp4ContentError('Invalid atom header length');\n        return {\n            length: BigInt(length),\n            name: new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(4, 'latin1').get(buf, off + 4)\n        };\n    },\n    put: (buf, off, hdr) => {\n        token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.put(buf, off, Number(hdr.length));\n        return _common_FourCC_js__WEBPACK_IMPORTED_MODULE_2__.FourCcToken.put(buf, off + 4, hdr.name);\n    }\n};\n/**\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap1/qtff1.html#//apple_ref/doc/uid/TP40000939-CH203-38190\n */\nconst ExtendedSize = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_BE;\nconst ftyp = {\n    len: 4,\n    get: (buf, off) => {\n        return {\n            type: new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(4, 'ascii').get(buf, off)\n        };\n    }\n};\nconst tkhd = {\n    len: 4,\n    get: (buf, off) => {\n        return {\n            type: new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(4, 'ascii').get(buf, off)\n        };\n    }\n};\n/**\n * Token: Movie Header Atom\n */\nconst mhdr = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off),\n            flags: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_BE.get(buf, off + 1),\n            nextItemID: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Base class for 'fixed' length atoms.\n * In some cases these atoms are longer then the sum of the described fields.\n * Issue: https://github.com/Borewit/music-metadata/issues/120\n */\nclass FixedLengthAtom {\n    /**\n     *\n     * @param {number} len Length as specified in the size field\n     * @param {number} expLen Total length of sum of specified fields in the standard\n     * @param atomId Atom ID\n     */\n    constructor(len, expLen, atomId) {\n        this.len = len;\n        if (len < expLen) {\n            throw new Mp4ContentError(`Atom ${atomId} expected to be ${expLen}, but specifies ${len} bytes long.`);\n        }\n        if (len > expLen) {\n            debug(`Warning: atom ${atomId} expected to be ${expLen}, but was actually ${len} bytes long.`);\n        }\n    }\n}\n/**\n * Timestamp stored in seconds since Mac Epoch (1 January 1904)\n */\nconst SecondsSinceMacEpoch = {\n    len: 4,\n    get: (buf, off) => {\n        const secondsSinceUnixEpoch = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off) - 2082844800;\n        return new Date(secondsSinceUnixEpoch * 1000);\n    }\n};\n/**\n * Token: Media Header Atom\n * Ref:\n * - https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-SW34\n * - https://wiki.multimedia.cx/index.php/QuickTime_container#mdhd\n */\nclass MdhdAtom extends FixedLengthAtom {\n    constructor(len) {\n        super(len, 24, 'mdhd');\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off + 0),\n            flags: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_BE.get(buf, off + 1),\n            creationTime: SecondsSinceMacEpoch.get(buf, off + 4),\n            modificationTime: SecondsSinceMacEpoch.get(buf, off + 8),\n            timeScale: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 12),\n            duration: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 16),\n            language: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 20),\n            quality: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 22)\n        };\n    }\n}\n/**\n * Token: Movie Header Atom\n */\nclass MvhdAtom extends FixedLengthAtom {\n    constructor(len) {\n        super(len, 100, 'mvhd');\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off),\n            flags: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_BE.get(buf, off + 1),\n            creationTime: SecondsSinceMacEpoch.get(buf, off + 4),\n            modificationTime: SecondsSinceMacEpoch.get(buf, off + 8),\n            timeScale: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 12),\n            duration: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 16),\n            preferredRate: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 20),\n            preferredVolume: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 24),\n            // ignore reserver: 10 bytes\n            // ignore matrix structure: 36 bytes\n            previewTime: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 72),\n            previewDuration: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 76),\n            posterTime: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 80),\n            selectionTime: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 84),\n            selectionDuration: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 88),\n            currentTime: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 92),\n            nextTrackID: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 96)\n        };\n    }\n}\n/**\n * Data Atom Structure\n */\nclass DataAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            type: {\n                set: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off + 0),\n                type: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_BE.get(buf, off + 1)\n            },\n            locale: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_BE.get(buf, off + 4),\n            value: new token_types__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayType(this.len - 8).get(buf, off + 8)\n        };\n    }\n}\n/**\n * Data Atom Structure\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW31\n */\nclass NameAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off),\n            flags: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_BE.get(buf, off + 1),\n            name: new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(this.len - 4, 'utf-8').get(buf, off + 4)\n        };\n    }\n}\n/**\n * Track Header Atoms structure\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25550\n */\nclass TrackHeaderAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off),\n            flags: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_BE.get(buf, off + 1),\n            creationTime: SecondsSinceMacEpoch.get(buf, off + 4),\n            modificationTime: SecondsSinceMacEpoch.get(buf, off + 8),\n            trackId: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 12),\n            // reserved 4 bytes\n            duration: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 20),\n            layer: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 24),\n            alternateGroup: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 26),\n            volume: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 28) // ToDo: fixed point\n            // ToDo: add remaining fields\n        };\n    }\n}\n/**\n * Atom: Sample Description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\nconst stsdHeader = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off),\n            flags: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_BE.get(buf, off + 1),\n            numberOfEntries: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Atom: Sample Description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\nclass SampleDescriptionTable {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            dataFormat: _common_FourCC_js__WEBPACK_IMPORTED_MODULE_2__.FourCcToken.get(buf, off),\n            dataReferenceIndex: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 10),\n            description: new token_types__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayType(this.len - 12).get(buf, off + 12)\n        };\n    }\n}\n/**\n * Atom: Sample-description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\nclass StsdAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const header = stsdHeader.get(buf, off);\n        off += stsdHeader.len;\n        const table = [];\n        for (let n = 0; n < header.numberOfEntries; ++n) {\n            const size = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off); // Sample description size\n            off += token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.len;\n            table.push(new SampleDescriptionTable(size).get(buf, off));\n            off += size;\n        }\n        return {\n            header,\n            table\n        };\n    }\n}\n/**\n * Common Sound Sample Description (version & revision)\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-57317\n */\nconst SoundSampleDescriptionVersion = {\n    len: 8,\n    get(buf, off) {\n        return {\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.INT16_BE.get(buf, off),\n            revision: token_types__WEBPACK_IMPORTED_MODULE_0__.INT16_BE.get(buf, off + 2),\n            vendor: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Sound Sample Description (Version 0)\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-130736\n */\nconst SoundSampleDescriptionV0 = {\n    len: 12,\n    get(buf, off) {\n        return {\n            numAudioChannels: token_types__WEBPACK_IMPORTED_MODULE_0__.INT16_BE.get(buf, off + 0),\n            sampleSize: token_types__WEBPACK_IMPORTED_MODULE_0__.INT16_BE.get(buf, off + 2),\n            compressionId: token_types__WEBPACK_IMPORTED_MODULE_0__.INT16_BE.get(buf, off + 4),\n            packetSize: token_types__WEBPACK_IMPORTED_MODULE_0__.INT16_BE.get(buf, off + 6),\n            sampleRate: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 8) + token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 10) / 10000\n        };\n    }\n};\nclass SimpleTableAtom {\n    constructor(len, token) {\n        this.len = len;\n        this.token = token;\n    }\n    get(buf, off) {\n        const nrOfEntries = token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_BE.get(buf, off + 4);\n        return {\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.INT8.get(buf, off + 0),\n            flags: token_types__WEBPACK_IMPORTED_MODULE_0__.INT24_BE.get(buf, off + 1),\n            numberOfEntries: nrOfEntries,\n            entries: readTokenTable(buf, this.token, off + 8, this.len - 8, nrOfEntries)\n        };\n    }\n}\nconst TimeToSampleToken = {\n    len: 8,\n    get(buf, off) {\n        return {\n            count: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_BE.get(buf, off + 0),\n            duration: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Time-to-sample('stts') atom.\n * Store duration information for a media’s samples.\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25696\n */\nclass SttsAtom extends SimpleTableAtom {\n    constructor(len) {\n        super(len, TimeToSampleToken);\n        this.len = len;\n    }\n}\nconst SampleToChunkToken = {\n    len: 12,\n    get(buf, off) {\n        return {\n            firstChunk: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_BE.get(buf, off),\n            samplesPerChunk: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_BE.get(buf, off + 4),\n            sampleDescriptionId: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_BE.get(buf, off + 8)\n        };\n    }\n};\n/**\n * Sample-to-Chunk ('stsc') atom interface\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25706\n */\nclass StscAtom extends SimpleTableAtom {\n    constructor(len) {\n        super(len, SampleToChunkToken);\n        this.len = len;\n    }\n}\n/**\n * Sample-size ('stsz') atom\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25710\n */\nclass StszAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const nrOfEntries = token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_BE.get(buf, off + 8);\n        return {\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.INT8.get(buf, off),\n            flags: token_types__WEBPACK_IMPORTED_MODULE_0__.INT24_BE.get(buf, off + 1),\n            sampleSize: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_BE.get(buf, off + 4),\n            numberOfEntries: nrOfEntries,\n            entries: readTokenTable(buf, token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_BE, off + 12, this.len - 12, nrOfEntries)\n        };\n    }\n}\n/**\n * Chunk offset atom, 'stco'\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25715\n */\nclass StcoAtom extends SimpleTableAtom {\n    constructor(len) {\n        super(len, token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_BE);\n        this.len = len;\n    }\n}\n/**\n * Token used to decode text-track from 'mdat' atom (raw data stream)\n */\nclass ChapterText {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const titleLen = token_types__WEBPACK_IMPORTED_MODULE_0__.INT16_BE.get(buf, off + 0);\n        const str = new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(titleLen, 'utf-8');\n        return str.get(buf, off + 2);\n    }\n}\nfunction readTokenTable(buf, token, off, remainingLen, numberOfEntries) {\n    debug(`remainingLen=${remainingLen}, numberOfEntries=${numberOfEntries} * token-len=${token.len}`);\n    if (remainingLen === 0)\n        return [];\n    if (remainingLen !== numberOfEntries * token.len)\n        throw new Mp4ContentError('mismatch number-of-entries with remaining atom-length');\n    const entries = [];\n    // parse offset-table\n    for (let n = 0; n < numberOfEntries; ++n) {\n        entries.push(token.get(buf, off));\n        off += token.len;\n    }\n    return entries;\n}\n//# sourceMappingURL=AtomToken.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/mp4/AtomToken.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/mp4/MP4Parser.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/mp4/MP4Parser.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MP4Parser: () => (/* binding */ MP4Parser)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/BasicParser.js */ \"(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js\");\n/* harmony import */ var _id3v1_ID3v1Parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../id3v1/ID3v1Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v1/ID3v1Parser.js\");\n/* harmony import */ var _Atom_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Atom.js */ \"(rsc)/./node_modules/music-metadata/lib/mp4/Atom.js\");\n/* harmony import */ var _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./AtomToken.js */ \"(rsc)/./node_modules/music-metadata/lib/mp4/AtomToken.js\");\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../type.js */ \"(rsc)/./node_modules/music-metadata/lib/type.js\");\n/* harmony import */ var uint8array_extras__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uint8array-extras */ \"(rsc)/./node_modules/uint8array-extras/index.js\");\n\n\n\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('music-metadata:parser:MP4');\nconst tagFormat = 'iTunes';\nconst encoderDict = {\n    raw: {\n        lossy: false,\n        format: 'raw'\n    },\n    MAC3: {\n        lossy: true,\n        format: 'MACE 3:1'\n    },\n    MAC6: {\n        lossy: true,\n        format: 'MACE 6:1'\n    },\n    ima4: {\n        lossy: true,\n        format: 'IMA 4:1'\n    },\n    ulaw: {\n        lossy: true,\n        format: 'uLaw 2:1'\n    },\n    alaw: {\n        lossy: true,\n        format: 'uLaw 2:1'\n    },\n    Qclp: {\n        lossy: true,\n        format: 'QUALCOMM PureVoice'\n    },\n    '.mp3': {\n        lossy: true,\n        format: 'MPEG-1 layer 3'\n    },\n    alac: {\n        lossy: false,\n        format: 'ALAC'\n    },\n    'ac-3': {\n        lossy: true,\n        format: 'AC-3'\n    },\n    mp4a: {\n        lossy: true,\n        format: 'MPEG-4/AAC'\n    },\n    mp4s: {\n        lossy: true,\n        format: 'MP4S'\n    },\n    // Closed Captioning Media, https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-SW87\n    c608: {\n        lossy: true,\n        format: 'CEA-608'\n    },\n    c708: {\n        lossy: true,\n        format: 'CEA-708'\n    }\n};\nfunction distinct(value, index, self) {\n    return self.indexOf(value) === index;\n}\n/*\n * Parser for the MP4 (MPEG-4 Part 14) container format\n * Standard: ISO/IEC 14496-14\n * supporting:\n * - QuickTime container\n * - MP4 File Format\n * - 3GPP file format\n * - 3GPP2 file format\n *\n * MPEG-4 Audio / Part 3 (.m4a)& MPEG 4 Video (m4v, mp4) extension.\n * Support for Apple iTunes tags as found in a M4A/M4V files.\n * Ref:\n *   https://en.wikipedia.org/wiki/ISO_base_media_file_format\n *   https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/Metadata/Metadata.html\n *   http://atomicparsley.sourceforge.net/mpeg-4files.html\n *   https://github.com/sergiomb2/libmp4v2/wiki/iTunesMetadata\n *   https://wiki.multimedia.cx/index.php/QuickTime_container\n */\nclass MP4Parser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_2__.BasicParser {\n    constructor() {\n        super(...arguments);\n        this.tracks = [];\n        this.atomParsers = {\n            /**\n             * Parse movie header (mvhd) atom\n             * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-56313\n             */\n            mvhd: async (len) => {\n                const mvhd = await this.tokenizer.readToken(new _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.MvhdAtom(len));\n                this.metadata.setFormat('creationTime', mvhd.creationTime);\n                this.metadata.setFormat('modificationTime', mvhd.modificationTime);\n            },\n            /**\n             * Parse media header (mdhd) atom\n             * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25615\n             */\n            mdhd: async (len) => {\n                const mdhd_data = await this.tokenizer.readToken(new _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.MdhdAtom(len));\n                // this.parse_mxhd(mdhd_data, this.currentTrack);\n                const td = this.getTrackDescription();\n                td.creationTime = mdhd_data.creationTime;\n                td.modificationTime = mdhd_data.modificationTime;\n                td.timeScale = mdhd_data.timeScale;\n                td.duration = mdhd_data.duration;\n            },\n            chap: async (len) => {\n                const td = this.getTrackDescription();\n                const trackIds = [];\n                while (len >= token_types__WEBPACK_IMPORTED_MODULE_1__.UINT32_BE.len) {\n                    trackIds.push(await this.tokenizer.readNumber(token_types__WEBPACK_IMPORTED_MODULE_1__.UINT32_BE));\n                    len -= token_types__WEBPACK_IMPORTED_MODULE_1__.UINT32_BE.len;\n                }\n                td.chapterList = trackIds;\n            },\n            tkhd: async (len) => {\n                const track = (await this.tokenizer.readToken(new _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.TrackHeaderAtom(len)));\n                this.tracks.push(track);\n            },\n            /**\n             * Parse mdat atom.\n             * Will scan for chapters\n             */\n            mdat: async (len) => {\n                this.audioLengthInBytes = len;\n                this.calculateBitRate();\n                if (this.options.includeChapters) {\n                    const trackWithChapters = this.tracks.filter(track => track.chapterList);\n                    if (trackWithChapters.length === 1) {\n                        const chapterTrackIds = trackWithChapters[0].chapterList;\n                        const chapterTracks = this.tracks.filter(track => chapterTrackIds.indexOf(track.trackId) !== -1);\n                        if (chapterTracks.length === 1) {\n                            return this.parseChapterTrack(chapterTracks[0], trackWithChapters[0], len);\n                        }\n                    }\n                }\n                await this.tokenizer.ignore(len);\n            },\n            ftyp: async (len) => {\n                const types = [];\n                while (len > 0) {\n                    const ftype = await this.tokenizer.readToken(_AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.ftyp);\n                    len -= _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.ftyp.len;\n                    const value = ftype.type.replace(/\\W/g, '');\n                    if (value.length > 0) {\n                        types.push(value); // unshift for backward compatibility\n                    }\n                }\n                debug(`ftyp: ${types.join('/')}`);\n                const x = types.filter(distinct).join('/');\n                this.metadata.setFormat('container', x);\n            },\n            /**\n             * Parse sample description atom\n             */\n            stsd: async (len) => {\n                const stsd = await this.tokenizer.readToken(new _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.StsdAtom(len));\n                const trackDescription = this.getTrackDescription();\n                trackDescription.soundSampleDescription = stsd.table.map(dfEntry => this.parseSoundSampleDescription(dfEntry));\n            },\n            /**\n             * sample-to-Chunk Atoms\n             */\n            stsc: async (len) => {\n                const stsc = await this.tokenizer.readToken(new _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.StscAtom(len));\n                this.getTrackDescription().sampleToChunkTable = stsc.entries;\n            },\n            /**\n             * time-to-sample table\n             */\n            stts: async (len) => {\n                const stts = await this.tokenizer.readToken(new _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.SttsAtom(len));\n                this.getTrackDescription().timeToSampleTable = stts.entries;\n            },\n            /**\n             * Parse sample-sizes atom ('stsz')\n             */\n            stsz: async (len) => {\n                const stsz = await this.tokenizer.readToken(new _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.StszAtom(len));\n                const td = this.getTrackDescription();\n                td.sampleSize = stsz.sampleSize;\n                td.sampleSizeTable = stsz.entries;\n            },\n            /**\n             * Parse chunk-offset atom ('stco')\n             */\n            stco: async (len) => {\n                const stco = await this.tokenizer.readToken(new _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.StcoAtom(len));\n                this.getTrackDescription().chunkOffsetTable = stco.entries; // remember chunk offsets\n            },\n            date: async (len) => {\n                const date = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_1__.StringType(len, 'utf-8'));\n                await this.addTag('date', date);\n            }\n        };\n    }\n    static read_BE_Integer(array, signed) {\n        const integerType = (signed ? 'INT' : 'UINT') + array.length * 8 + (array.length > 1 ? '_BE' : '');\n        const token = token_types__WEBPACK_IMPORTED_MODULE_1__[integerType];\n        if (!token) {\n            throw new _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.Mp4ContentError(`Token for integer type not found: \"${integerType}\"`);\n        }\n        return Number(token.get(array, 0));\n    }\n    async parse() {\n        this.tracks = [];\n        let remainingFileSize = this.tokenizer.fileInfo.size || 0;\n        while (!this.tokenizer.fileInfo.size || remainingFileSize > 0) {\n            try {\n                const token = await this.tokenizer.peekToken(_AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.Header);\n                if (token.name === '\\0\\0\\0\\0') {\n                    const errMsg = `Error at offset=${this.tokenizer.position}: box.id=0`;\n                    debug(errMsg);\n                    this.addWarning(errMsg);\n                    break;\n                }\n            }\n            catch (error) {\n                if (error instanceof Error) {\n                    const errMsg = `Error at offset=${this.tokenizer.position}: ${error.message}`;\n                    debug(errMsg);\n                    this.addWarning(errMsg);\n                }\n                else\n                    throw error;\n                break;\n            }\n            const rootAtom = await _Atom_js__WEBPACK_IMPORTED_MODULE_4__.Atom.readAtom(this.tokenizer, (atom, remaining) => this.handleAtom(atom, remaining), null, remainingFileSize);\n            remainingFileSize -= rootAtom.header.length === BigInt(0) ? remainingFileSize : Number(rootAtom.header.length);\n        }\n        // Post process metadata\n        const formatList = [];\n        this.tracks.forEach(track => {\n            const trackFormats = [];\n            track.soundSampleDescription.forEach(ssd => {\n                const streamInfo = {};\n                const encoderInfo = encoderDict[ssd.dataFormat];\n                if (encoderInfo) {\n                    trackFormats.push(encoderInfo.format);\n                    streamInfo.codecName = encoderInfo.format;\n                }\n                else {\n                    streamInfo.codecName = `<${ssd.dataFormat}>`;\n                }\n                if (ssd.description) {\n                    const { description } = ssd;\n                    if (description.sampleRate > 0) {\n                        streamInfo.type = _type_js__WEBPACK_IMPORTED_MODULE_6__.TrackType.audio;\n                        streamInfo.audio = {\n                            samplingFrequency: description.sampleRate,\n                            bitDepth: description.sampleSize,\n                            channels: description.numAudioChannels\n                        };\n                    }\n                }\n                this.metadata.addStreamInfo(streamInfo);\n            });\n            if (trackFormats.length >= 1) {\n                formatList.push(trackFormats.join('/'));\n            }\n        });\n        if (formatList.length > 0) {\n            this.metadata.setFormat('codec', formatList.filter(distinct).join('+'));\n        }\n        const audioTracks = this.tracks.filter(track => {\n            return track.soundSampleDescription.length >= 1 && track.soundSampleDescription[0].description && track.soundSampleDescription[0].description.numAudioChannels > 0;\n        });\n        if (audioTracks.length >= 1) {\n            const audioTrack = audioTracks[0];\n            if (audioTrack.timeScale > 0) {\n                const duration = audioTrack.duration / audioTrack.timeScale; // calculate duration in seconds\n                this.metadata.setFormat('duration', duration);\n            }\n            const ssd = audioTrack.soundSampleDescription[0];\n            if (ssd.description) {\n                this.metadata.setFormat('sampleRate', ssd.description.sampleRate);\n                this.metadata.setFormat('bitsPerSample', ssd.description.sampleSize);\n                this.metadata.setFormat('numberOfChannels', ssd.description.numAudioChannels);\n                if (audioTrack.timeScale === 0 && audioTrack.timeToSampleTable.length > 0) {\n                    const totalSampleSize = audioTrack.timeToSampleTable\n                        .map(ttstEntry => ttstEntry.count * ttstEntry.duration)\n                        .reduce((total, sampleSize) => total + sampleSize);\n                    const duration = totalSampleSize / ssd.description.sampleRate;\n                    this.metadata.setFormat('duration', duration);\n                }\n            }\n            const encoderInfo = encoderDict[ssd.dataFormat];\n            if (encoderInfo) {\n                this.metadata.setFormat('lossless', !encoderInfo.lossy);\n            }\n            this.calculateBitRate();\n        }\n    }\n    async handleAtom(atom, remaining) {\n        if (atom.parent) {\n            switch (atom.parent.header.name) {\n                case 'ilst':\n                case '<id>':\n                    return this.parseMetadataItemData(atom);\n            }\n        }\n        // const payloadLength = atom.getPayloadLength(remaining);\n        if (this.atomParsers[atom.header.name]) {\n            return this.atomParsers[atom.header.name](remaining);\n        }\n        debug(`No parser for atom path=${atom.atomPath}, payload-len=${remaining}, ignoring atom`);\n        await this.tokenizer.ignore(remaining);\n    }\n    getTrackDescription() {\n        return this.tracks[this.tracks.length - 1];\n    }\n    calculateBitRate() {\n        if (this.audioLengthInBytes && this.metadata.format.duration) {\n            this.metadata.setFormat('bitrate', 8 * this.audioLengthInBytes / this.metadata.format.duration);\n        }\n    }\n    async addTag(id, value) {\n        await this.metadata.addTag(tagFormat, id, value);\n    }\n    addWarning(message) {\n        debug(`Warning: ${message}`);\n        this.metadata.addWarning(message);\n    }\n    /**\n     * Parse data of Meta-item-list-atom (item of 'ilst' atom)\n     * @param metaAtom\n     * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW8\n     */\n    parseMetadataItemData(metaAtom) {\n        let tagKey = metaAtom.header.name;\n        return metaAtom.readAtoms(this.tokenizer, async (child, remaining) => {\n            const payLoadLength = child.getPayloadLength(remaining);\n            switch (child.header.name) {\n                case 'data': // value atom\n                    return this.parseValueAtom(tagKey, child);\n                case 'name': // name atom (optional)\n                case 'mean':\n                case 'rate': {\n                    const name = await this.tokenizer.readToken(new _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.NameAtom(payLoadLength));\n                    tagKey += `:${name.name}`;\n                    break;\n                }\n                default: {\n                    const uint8Array = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_1__.Uint8ArrayType(payLoadLength));\n                    this.addWarning(`Unsupported meta-item: ${tagKey}[${child.header.name}] => value=${(0,uint8array_extras__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToHex)(uint8Array)} ascii=${(0,uint8array_extras__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToString)(uint8Array, 'ascii')}`);\n                }\n            }\n        }, metaAtom.getPayloadLength(0));\n    }\n    async parseValueAtom(tagKey, metaAtom) {\n        const dataAtom = await this.tokenizer.readToken(new _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.DataAtom(Number(metaAtom.header.length) - _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.Header.len));\n        if (dataAtom.type.set !== 0) {\n            throw new _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.Mp4ContentError(`Unsupported type-set != 0: ${dataAtom.type.set}`);\n        }\n        // Use well-known-type table\n        // Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW35\n        switch (dataAtom.type.type) {\n            case 0: // reserved: Reserved for use where no type needs to be indicated\n                switch (tagKey) {\n                    case 'trkn':\n                    case 'disk': {\n                        const num = token_types__WEBPACK_IMPORTED_MODULE_1__.UINT8.get(dataAtom.value, 3);\n                        const of = token_types__WEBPACK_IMPORTED_MODULE_1__.UINT8.get(dataAtom.value, 5);\n                        // console.log(\"  %s[data] = %s/%s\", tagKey, num, of);\n                        await this.addTag(tagKey, `${num}/${of}`);\n                        break;\n                    }\n                    case 'gnre': {\n                        const genreInt = token_types__WEBPACK_IMPORTED_MODULE_1__.UINT8.get(dataAtom.value, 1);\n                        const genreStr = _id3v1_ID3v1Parser_js__WEBPACK_IMPORTED_MODULE_3__.Genres[genreInt - 1];\n                        // console.log(\"  %s[data] = %s\", tagKey, genreStr);\n                        await this.addTag(tagKey, genreStr);\n                        break;\n                    }\n                    case 'rate': {\n                        const rate = new TextDecoder('ascii').decode(dataAtom.value);\n                        await this.addTag(tagKey, rate);\n                        break;\n                    }\n                    default:\n                        debug(`unknown proprietary value type for: ${metaAtom.atomPath}`);\n                }\n                break;\n            case 1: // UTF-8: Without any count or NULL terminator\n            case 18: // Unknown: Found in m4b in combination with a '©gen' tag\n                await this.addTag(tagKey, new TextDecoder('utf-8').decode(dataAtom.value));\n                break;\n            case 13: // JPEG\n                if (this.options.skipCovers)\n                    break;\n                await this.addTag(tagKey, {\n                    format: 'image/jpeg',\n                    data: Uint8Array.from(dataAtom.value)\n                });\n                break;\n            case 14: // PNG\n                if (this.options.skipCovers)\n                    break;\n                await this.addTag(tagKey, {\n                    format: 'image/png',\n                    data: Uint8Array.from(dataAtom.value)\n                });\n                break;\n            case 21: // BE Signed Integer\n                await this.addTag(tagKey, MP4Parser.read_BE_Integer(dataAtom.value, true));\n                break;\n            case 22: // BE Unsigned Integer\n                await this.addTag(tagKey, MP4Parser.read_BE_Integer(dataAtom.value, false));\n                break;\n            case 65: // An 8-bit signed integer\n                await this.addTag(tagKey, token_types__WEBPACK_IMPORTED_MODULE_1__.UINT8.get(dataAtom.value, 0));\n                break;\n            case 66: // A big-endian 16-bit signed integer\n                await this.addTag(tagKey, token_types__WEBPACK_IMPORTED_MODULE_1__.UINT16_BE.get(dataAtom.value, 0));\n                break;\n            case 67: // A big-endian 32-bit signed integer\n                await this.addTag(tagKey, token_types__WEBPACK_IMPORTED_MODULE_1__.UINT32_BE.get(dataAtom.value, 0));\n                break;\n            default:\n                this.addWarning(`atom key=${tagKey}, has unknown well-known-type (data-type): ${dataAtom.type.type}`);\n        }\n    }\n    /**\n     * @param sampleDescription\n     * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-128916\n     */\n    parseSoundSampleDescription(sampleDescription) {\n        const ssd = {\n            dataFormat: sampleDescription.dataFormat,\n            dataReferenceIndex: sampleDescription.dataReferenceIndex\n        };\n        let offset = 0;\n        const version = _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.SoundSampleDescriptionVersion.get(sampleDescription.description, offset);\n        offset += _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.SoundSampleDescriptionVersion.len;\n        if (version.version === 0 || version.version === 1) {\n            // Sound Sample Description (Version 0)\n            ssd.description = _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.SoundSampleDescriptionV0.get(sampleDescription.description, offset);\n        }\n        else {\n            debug(`Warning: sound-sample-description ${version} not implemented`);\n        }\n        return ssd;\n    }\n    async parseChapterTrack(chapterTrack, track, len) {\n        if (!chapterTrack.sampleSize) {\n            if (chapterTrack.chunkOffsetTable.length !== chapterTrack.sampleSizeTable.length)\n                throw new Error('Expected equal chunk-offset-table & sample-size-table length.');\n        }\n        const chapters = [];\n        for (let i = 0; i < chapterTrack.chunkOffsetTable.length && len > 0; ++i) {\n            const chunkOffset = chapterTrack.chunkOffsetTable[i];\n            const nextChunkLen = chunkOffset - this.tokenizer.position;\n            const sampleSize = chapterTrack.sampleSize > 0 ? chapterTrack.sampleSize : chapterTrack.sampleSizeTable[i];\n            len -= nextChunkLen + sampleSize;\n            if (len < 0)\n                throw new _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.Mp4ContentError('Chapter chunk exceeding token length');\n            await this.tokenizer.ignore(nextChunkLen);\n            const title = await this.tokenizer.readToken(new _AtomToken_js__WEBPACK_IMPORTED_MODULE_5__.ChapterText(sampleSize));\n            debug(`Chapter ${i + 1}: ${title}`);\n            const chapter = {\n                title,\n                sampleOffset: this.findSampleOffset(track, this.tokenizer.position)\n            };\n            debug(`Chapter title=${chapter.title}, offset=${chapter.sampleOffset}/${this.tracks[0].duration}`);\n            chapters.push(chapter);\n        }\n        this.metadata.setFormat('chapters', chapters);\n        await this.tokenizer.ignore(len);\n    }\n    findSampleOffset(track, chapterOffset) {\n        let totalDuration = 0;\n        track.timeToSampleTable.forEach(e => {\n            totalDuration += e.count * e.duration;\n        });\n        debug(`Total duration=${totalDuration}`);\n        let chunkIndex = 0;\n        while (chunkIndex < track.chunkOffsetTable.length && track.chunkOffsetTable[chunkIndex] < chapterOffset) {\n            ++chunkIndex;\n        }\n        return this.getChunkDuration(chunkIndex + 1, track);\n    }\n    getChunkDuration(chunkId, track) {\n        let ttsi = 0;\n        let ttsc = track.timeToSampleTable[ttsi].count;\n        let ttsd = track.timeToSampleTable[ttsi].duration;\n        let curChunkId = 1;\n        let samplesPerChunk = this.getSamplesPerChunk(curChunkId, track.sampleToChunkTable);\n        let totalDuration = 0;\n        while (curChunkId < chunkId) {\n            const nrOfSamples = Math.min(ttsc, samplesPerChunk);\n            totalDuration += nrOfSamples * ttsd;\n            ttsc -= nrOfSamples;\n            samplesPerChunk -= nrOfSamples;\n            if (samplesPerChunk === 0) {\n                ++curChunkId;\n                samplesPerChunk = this.getSamplesPerChunk(curChunkId, track.sampleToChunkTable);\n            }\n            else {\n                ++ttsi;\n                ttsc = track.timeToSampleTable[ttsi].count;\n                ttsd = track.timeToSampleTable[ttsi].duration;\n            }\n        }\n        return totalDuration;\n    }\n    getSamplesPerChunk(chunkId, stcTable) {\n        for (let i = 0; i < stcTable.length - 1; ++i) {\n            if (chunkId >= stcTable[i].firstChunk && chunkId < stcTable[i + 1].firstChunk) {\n                return stcTable[i].samplesPerChunk;\n            }\n        }\n        return stcTable[stcTable.length - 1].samplesPerChunk;\n    }\n}\n//# sourceMappingURL=MP4Parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/mp4/MP4Parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/mp4/MP4TagMapper.js":
/*!*************************************************************!*\
  !*** ./node_modules/music-metadata/lib/mp4/MP4TagMapper.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MP4TagMapper: () => (/* binding */ MP4TagMapper),\n/* harmony export */   tagType: () => (/* binding */ tagType)\n/* harmony export */ });\n/* harmony import */ var _common_CaseInsensitiveTagMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/CaseInsensitiveTagMap.js */ \"(rsc)/./node_modules/music-metadata/lib/common/CaseInsensitiveTagMap.js\");\n\n/**\n * Ref: https://github.com/sergiomb2/libmp4v2/wiki/iTunesMetadata\n */\nconst mp4TagMap = {\n    '©nam': 'title',\n    '©ART': 'artist',\n    aART: 'albumartist',\n    /**\n     * ToDo: Album artist seems to be stored here while Picard documentation says: aART\n     */\n    '----:com.apple.iTunes:Band': 'albumartist',\n    '©alb': 'album',\n    '©day': 'date',\n    '©cmt': 'comment',\n    '©com': 'comment',\n    trkn: 'track',\n    disk: 'disk',\n    '©gen': 'genre',\n    covr: 'picture',\n    '©wrt': 'composer',\n    '©lyr': 'lyrics',\n    soal: 'albumsort',\n    sonm: 'titlesort',\n    soar: 'artistsort',\n    soaa: 'albumartistsort',\n    soco: 'composersort',\n    '----:com.apple.iTunes:LYRICIST': 'lyricist',\n    '----:com.apple.iTunes:CONDUCTOR': 'conductor',\n    '----:com.apple.iTunes:REMIXER': 'remixer',\n    '----:com.apple.iTunes:ENGINEER': 'engineer',\n    '----:com.apple.iTunes:PRODUCER': 'producer',\n    '----:com.apple.iTunes:DJMIXER': 'djmixer',\n    '----:com.apple.iTunes:MIXER': 'mixer',\n    '----:com.apple.iTunes:LABEL': 'label',\n    '©grp': 'grouping',\n    '----:com.apple.iTunes:SUBTITLE': 'subtitle',\n    '----:com.apple.iTunes:DISCSUBTITLE': 'discsubtitle',\n    cpil: 'compilation',\n    tmpo: 'bpm',\n    '----:com.apple.iTunes:MOOD': 'mood',\n    '----:com.apple.iTunes:MEDIA': 'media',\n    '----:com.apple.iTunes:CATALOGNUMBER': 'catalognumber',\n    tvsh: 'tvShow',\n    tvsn: 'tvSeason',\n    tves: 'tvEpisode',\n    sosn: 'tvShowSort',\n    tven: 'tvEpisodeId',\n    tvnn: 'tvNetwork',\n    pcst: 'podcast',\n    purl: 'podcasturl',\n    '----:com.apple.iTunes:MusicBrainz Album Status': 'releasestatus',\n    '----:com.apple.iTunes:MusicBrainz Album Type': 'releasetype',\n    '----:com.apple.iTunes:MusicBrainz Album Release Country': 'releasecountry',\n    '----:com.apple.iTunes:SCRIPT': 'script',\n    '----:com.apple.iTunes:LANGUAGE': 'language',\n    cprt: 'copyright',\n    '©cpy': 'copyright',\n    '----:com.apple.iTunes:LICENSE': 'license',\n    '©too': 'encodedby',\n    pgap: 'gapless',\n    '----:com.apple.iTunes:BARCODE': 'barcode',\n    '----:com.apple.iTunes:ISRC': 'isrc',\n    '----:com.apple.iTunes:ASIN': 'asin',\n    '----:com.apple.iTunes:NOTES': 'comment',\n    '----:com.apple.iTunes:MusicBrainz Track Id': 'musicbrainz_recordingid',\n    '----:com.apple.iTunes:MusicBrainz Release Track Id': 'musicbrainz_trackid',\n    '----:com.apple.iTunes:MusicBrainz Album Id': 'musicbrainz_albumid',\n    '----:com.apple.iTunes:MusicBrainz Artist Id': 'musicbrainz_artistid',\n    '----:com.apple.iTunes:MusicBrainz Album Artist Id': 'musicbrainz_albumartistid',\n    '----:com.apple.iTunes:MusicBrainz Release Group Id': 'musicbrainz_releasegroupid',\n    '----:com.apple.iTunes:MusicBrainz Work Id': 'musicbrainz_workid',\n    '----:com.apple.iTunes:MusicBrainz TRM Id': 'musicbrainz_trmid',\n    '----:com.apple.iTunes:MusicBrainz Disc Id': 'musicbrainz_discid',\n    '----:com.apple.iTunes:Acoustid Id': 'acoustid_id',\n    '----:com.apple.iTunes:Acoustid Fingerprint': 'acoustid_fingerprint',\n    '----:com.apple.iTunes:MusicIP PUID': 'musicip_puid',\n    '----:com.apple.iTunes:fingerprint': 'musicip_fingerprint',\n    '----:com.apple.iTunes:replaygain_track_gain': 'replaygain_track_gain',\n    '----:com.apple.iTunes:replaygain_track_peak': 'replaygain_track_peak',\n    '----:com.apple.iTunes:replaygain_album_gain': 'replaygain_album_gain',\n    '----:com.apple.iTunes:replaygain_album_peak': 'replaygain_album_peak',\n    '----:com.apple.iTunes:replaygain_track_minmax': 'replaygain_track_minmax',\n    '----:com.apple.iTunes:replaygain_album_minmax': 'replaygain_album_minmax',\n    '----:com.apple.iTunes:replaygain_undo': 'replaygain_undo',\n    // Additional mappings:\n    gnre: 'genre', // ToDo: check mapping\n    '----:com.apple.iTunes:ALBUMARTISTSORT': 'albumartistsort',\n    '----:com.apple.iTunes:ARTISTS': 'artists',\n    '----:com.apple.iTunes:ORIGINALDATE': 'originaldate',\n    '----:com.apple.iTunes:ORIGINALYEAR': 'originalyear',\n    '----:com.apple.iTunes:RELEASEDATE': 'releasedate',\n    // '----:com.apple.iTunes:PERFORMER': 'performer'\n    desc: 'description',\n    ldes: 'longDescription',\n    '©mvn': 'movement',\n    '©mvi': 'movementIndex',\n    '©mvc': 'movementTotal',\n    '©wrk': 'work',\n    catg: 'category',\n    egid: 'podcastId',\n    hdvd: 'hdVideo',\n    keyw: 'keywords',\n    shwm: 'showMovement',\n    stik: 'stik',\n    rate: 'rating'\n};\nconst tagType = 'iTunes';\nclass MP4TagMapper extends _common_CaseInsensitiveTagMap_js__WEBPACK_IMPORTED_MODULE_0__.CaseInsensitiveTagMap {\n    constructor() {\n        super([tagType], mp4TagMap);\n    }\n    postMap(tag, warnings) {\n        switch (tag.id) {\n            case 'rate':\n                tag.value = {\n                    source: undefined,\n                    rating: Number.parseFloat(tag.value) / 100\n                };\n                break;\n        }\n    }\n}\n//# sourceMappingURL=MP4TagMapper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL21wNC9NUDRUYWdNYXBwZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJFO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDQSwyQkFBMkIsbUZBQXFCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvbXA0L01QNFRhZ01hcHBlci5qcz83ZjI0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VJbnNlbnNpdGl2ZVRhZ01hcCB9IGZyb20gJy4uL2NvbW1vbi9DYXNlSW5zZW5zaXRpdmVUYWdNYXAuanMnO1xuLyoqXG4gKiBSZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9zZXJnaW9tYjIvbGlibXA0djIvd2lraS9pVHVuZXNNZXRhZGF0YVxuICovXG5jb25zdCBtcDRUYWdNYXAgPSB7XG4gICAgJ8KpbmFtJzogJ3RpdGxlJyxcbiAgICAnwqlBUlQnOiAnYXJ0aXN0JyxcbiAgICBhQVJUOiAnYWxidW1hcnRpc3QnLFxuICAgIC8qKlxuICAgICAqIFRvRG86IEFsYnVtIGFydGlzdCBzZWVtcyB0byBiZSBzdG9yZWQgaGVyZSB3aGlsZSBQaWNhcmQgZG9jdW1lbnRhdGlvbiBzYXlzOiBhQVJUXG4gICAgICovXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpCYW5kJzogJ2FsYnVtYXJ0aXN0JyxcbiAgICAnwqlhbGInOiAnYWxidW0nLFxuICAgICfCqWRheSc6ICdkYXRlJyxcbiAgICAnwqljbXQnOiAnY29tbWVudCcsXG4gICAgJ8KpY29tJzogJ2NvbW1lbnQnLFxuICAgIHRya246ICd0cmFjaycsXG4gICAgZGlzazogJ2Rpc2snLFxuICAgICfCqWdlbic6ICdnZW5yZScsXG4gICAgY292cjogJ3BpY3R1cmUnLFxuICAgICfCqXdydCc6ICdjb21wb3NlcicsXG4gICAgJ8KpbHlyJzogJ2x5cmljcycsXG4gICAgc29hbDogJ2FsYnVtc29ydCcsXG4gICAgc29ubTogJ3RpdGxlc29ydCcsXG4gICAgc29hcjogJ2FydGlzdHNvcnQnLFxuICAgIHNvYWE6ICdhbGJ1bWFydGlzdHNvcnQnLFxuICAgIHNvY286ICdjb21wb3NlcnNvcnQnLFxuICAgICctLS0tOmNvbS5hcHBsZS5pVHVuZXM6TFlSSUNJU1QnOiAnbHlyaWNpc3QnLFxuICAgICctLS0tOmNvbS5hcHBsZS5pVHVuZXM6Q09ORFVDVE9SJzogJ2NvbmR1Y3RvcicsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpSRU1JWEVSJzogJ3JlbWl4ZXInLFxuICAgICctLS0tOmNvbS5hcHBsZS5pVHVuZXM6RU5HSU5FRVInOiAnZW5naW5lZXInLFxuICAgICctLS0tOmNvbS5hcHBsZS5pVHVuZXM6UFJPRFVDRVInOiAncHJvZHVjZXInLFxuICAgICctLS0tOmNvbS5hcHBsZS5pVHVuZXM6REpNSVhFUic6ICdkam1peGVyJyxcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOk1JWEVSJzogJ21peGVyJyxcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOkxBQkVMJzogJ2xhYmVsJyxcbiAgICAnwqlncnAnOiAnZ3JvdXBpbmcnLFxuICAgICctLS0tOmNvbS5hcHBsZS5pVHVuZXM6U1VCVElUTEUnOiAnc3VidGl0bGUnLFxuICAgICctLS0tOmNvbS5hcHBsZS5pVHVuZXM6RElTQ1NVQlRJVExFJzogJ2Rpc2NzdWJ0aXRsZScsXG4gICAgY3BpbDogJ2NvbXBpbGF0aW9uJyxcbiAgICB0bXBvOiAnYnBtJyxcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOk1PT0QnOiAnbW9vZCcsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpNRURJQSc6ICdtZWRpYScsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpDQVRBTE9HTlVNQkVSJzogJ2NhdGFsb2dudW1iZXInLFxuICAgIHR2c2g6ICd0dlNob3cnLFxuICAgIHR2c246ICd0dlNlYXNvbicsXG4gICAgdHZlczogJ3R2RXBpc29kZScsXG4gICAgc29zbjogJ3R2U2hvd1NvcnQnLFxuICAgIHR2ZW46ICd0dkVwaXNvZGVJZCcsXG4gICAgdHZubjogJ3R2TmV0d29yaycsXG4gICAgcGNzdDogJ3BvZGNhc3QnLFxuICAgIHB1cmw6ICdwb2RjYXN0dXJsJyxcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOk11c2ljQnJhaW56IEFsYnVtIFN0YXR1cyc6ICdyZWxlYXNlc3RhdHVzJyxcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOk11c2ljQnJhaW56IEFsYnVtIFR5cGUnOiAncmVsZWFzZXR5cGUnLFxuICAgICctLS0tOmNvbS5hcHBsZS5pVHVuZXM6TXVzaWNCcmFpbnogQWxidW0gUmVsZWFzZSBDb3VudHJ5JzogJ3JlbGVhc2Vjb3VudHJ5JyxcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOlNDUklQVCc6ICdzY3JpcHQnLFxuICAgICctLS0tOmNvbS5hcHBsZS5pVHVuZXM6TEFOR1VBR0UnOiAnbGFuZ3VhZ2UnLFxuICAgIGNwcnQ6ICdjb3B5cmlnaHQnLFxuICAgICfCqWNweSc6ICdjb3B5cmlnaHQnLFxuICAgICctLS0tOmNvbS5hcHBsZS5pVHVuZXM6TElDRU5TRSc6ICdsaWNlbnNlJyxcbiAgICAnwql0b28nOiAnZW5jb2RlZGJ5JyxcbiAgICBwZ2FwOiAnZ2FwbGVzcycsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpCQVJDT0RFJzogJ2JhcmNvZGUnLFxuICAgICctLS0tOmNvbS5hcHBsZS5pVHVuZXM6SVNSQyc6ICdpc3JjJyxcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOkFTSU4nOiAnYXNpbicsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpOT1RFUyc6ICdjb21tZW50JyxcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOk11c2ljQnJhaW56IFRyYWNrIElkJzogJ211c2ljYnJhaW56X3JlY29yZGluZ2lkJyxcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOk11c2ljQnJhaW56IFJlbGVhc2UgVHJhY2sgSWQnOiAnbXVzaWNicmFpbnpfdHJhY2tpZCcsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpNdXNpY0JyYWlueiBBbGJ1bSBJZCc6ICdtdXNpY2JyYWluel9hbGJ1bWlkJyxcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOk11c2ljQnJhaW56IEFydGlzdCBJZCc6ICdtdXNpY2JyYWluel9hcnRpc3RpZCcsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpNdXNpY0JyYWlueiBBbGJ1bSBBcnRpc3QgSWQnOiAnbXVzaWNicmFpbnpfYWxidW1hcnRpc3RpZCcsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpNdXNpY0JyYWlueiBSZWxlYXNlIEdyb3VwIElkJzogJ211c2ljYnJhaW56X3JlbGVhc2Vncm91cGlkJyxcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOk11c2ljQnJhaW56IFdvcmsgSWQnOiAnbXVzaWNicmFpbnpfd29ya2lkJyxcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOk11c2ljQnJhaW56IFRSTSBJZCc6ICdtdXNpY2JyYWluel90cm1pZCcsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpNdXNpY0JyYWlueiBEaXNjIElkJzogJ211c2ljYnJhaW56X2Rpc2NpZCcsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpBY291c3RpZCBJZCc6ICdhY291c3RpZF9pZCcsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpBY291c3RpZCBGaW5nZXJwcmludCc6ICdhY291c3RpZF9maW5nZXJwcmludCcsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpNdXNpY0lQIFBVSUQnOiAnbXVzaWNpcF9wdWlkJyxcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOmZpbmdlcnByaW50JzogJ211c2ljaXBfZmluZ2VycHJpbnQnLFxuICAgICctLS0tOmNvbS5hcHBsZS5pVHVuZXM6cmVwbGF5Z2Fpbl90cmFja19nYWluJzogJ3JlcGxheWdhaW5fdHJhY2tfZ2FpbicsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpyZXBsYXlnYWluX3RyYWNrX3BlYWsnOiAncmVwbGF5Z2Fpbl90cmFja19wZWFrJyxcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOnJlcGxheWdhaW5fYWxidW1fZ2Fpbic6ICdyZXBsYXlnYWluX2FsYnVtX2dhaW4nLFxuICAgICctLS0tOmNvbS5hcHBsZS5pVHVuZXM6cmVwbGF5Z2Fpbl9hbGJ1bV9wZWFrJzogJ3JlcGxheWdhaW5fYWxidW1fcGVhaycsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpyZXBsYXlnYWluX3RyYWNrX21pbm1heCc6ICdyZXBsYXlnYWluX3RyYWNrX21pbm1heCcsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpyZXBsYXlnYWluX2FsYnVtX21pbm1heCc6ICdyZXBsYXlnYWluX2FsYnVtX21pbm1heCcsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpyZXBsYXlnYWluX3VuZG8nOiAncmVwbGF5Z2Fpbl91bmRvJyxcbiAgICAvLyBBZGRpdGlvbmFsIG1hcHBpbmdzOlxuICAgIGducmU6ICdnZW5yZScsIC8vIFRvRG86IGNoZWNrIG1hcHBpbmdcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOkFMQlVNQVJUSVNUU09SVCc6ICdhbGJ1bWFydGlzdHNvcnQnLFxuICAgICctLS0tOmNvbS5hcHBsZS5pVHVuZXM6QVJUSVNUUyc6ICdhcnRpc3RzJyxcbiAgICAnLS0tLTpjb20uYXBwbGUuaVR1bmVzOk9SSUdJTkFMREFURSc6ICdvcmlnaW5hbGRhdGUnLFxuICAgICctLS0tOmNvbS5hcHBsZS5pVHVuZXM6T1JJR0lOQUxZRUFSJzogJ29yaWdpbmFseWVhcicsXG4gICAgJy0tLS06Y29tLmFwcGxlLmlUdW5lczpSRUxFQVNFREFURSc6ICdyZWxlYXNlZGF0ZScsXG4gICAgLy8gJy0tLS06Y29tLmFwcGxlLmlUdW5lczpQRVJGT1JNRVInOiAncGVyZm9ybWVyJ1xuICAgIGRlc2M6ICdkZXNjcmlwdGlvbicsXG4gICAgbGRlczogJ2xvbmdEZXNjcmlwdGlvbicsXG4gICAgJ8KpbXZuJzogJ21vdmVtZW50JyxcbiAgICAnwqltdmknOiAnbW92ZW1lbnRJbmRleCcsXG4gICAgJ8KpbXZjJzogJ21vdmVtZW50VG90YWwnLFxuICAgICfCqXdyayc6ICd3b3JrJyxcbiAgICBjYXRnOiAnY2F0ZWdvcnknLFxuICAgIGVnaWQ6ICdwb2RjYXN0SWQnLFxuICAgIGhkdmQ6ICdoZFZpZGVvJyxcbiAgICBrZXl3OiAna2V5d29yZHMnLFxuICAgIHNod206ICdzaG93TW92ZW1lbnQnLFxuICAgIHN0aWs6ICdzdGlrJyxcbiAgICByYXRlOiAncmF0aW5nJ1xufTtcbmV4cG9ydCBjb25zdCB0YWdUeXBlID0gJ2lUdW5lcyc7XG5leHBvcnQgY2xhc3MgTVA0VGFnTWFwcGVyIGV4dGVuZHMgQ2FzZUluc2Vuc2l0aXZlVGFnTWFwIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoW3RhZ1R5cGVdLCBtcDRUYWdNYXApO1xuICAgIH1cbiAgICBwb3N0TWFwKHRhZywgd2FybmluZ3MpIHtcbiAgICAgICAgc3dpdGNoICh0YWcuaWQpIHtcbiAgICAgICAgICAgIGNhc2UgJ3JhdGUnOlxuICAgICAgICAgICAgICAgIHRhZy52YWx1ZSA9IHtcbiAgICAgICAgICAgICAgICAgICAgc291cmNlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgICAgIHJhdGluZzogTnVtYmVyLnBhcnNlRmxvYXQodGFnLnZhbHVlKSAvIDEwMFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NUDRUYWdNYXBwZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/mp4/MP4TagMapper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/mp4/Mp4Loader.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/mp4/Mp4Loader.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mp4ParserLoader: () => (/* binding */ mp4ParserLoader)\n/* harmony export */ });\nconst mp4ParserLoader = {\n    parserType: 'mp4',\n    extensions: ['.mp4', '.m4a', '.m4b', '.m4pa', 'm4v', 'm4r', '3gp'],\n    async load(metadata, tokenizer, options) {\n        return new (await __webpack_require__.e(/*! import() */ \"vendor-chunks/music-metadata\").then(__webpack_require__.bind(__webpack_require__, /*! ./MP4Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/mp4/MP4Parser.js\"))).MP4Parser(metadata, tokenizer, options);\n    }\n};\n//# sourceMappingURL=Mp4Loader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL21wNC9NcDRMb2FkZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJNQUF3QjtBQUNsRDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL21wNC9NcDRMb2FkZXIuanM/ODVhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgbXA0UGFyc2VyTG9hZGVyID0ge1xuICAgIHBhcnNlclR5cGU6ICdtcDQnLFxuICAgIGV4dGVuc2lvbnM6IFsnLm1wNCcsICcubTRhJywgJy5tNGInLCAnLm00cGEnLCAnbTR2JywgJ200cicsICczZ3AnXSxcbiAgICBhc3luYyBsb2FkKG1ldGFkYXRhLCB0b2tlbml6ZXIsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyAoYXdhaXQgaW1wb3J0KCcuL01QNFBhcnNlci5qcycpKS5NUDRQYXJzZXIobWV0YWRhdGEsIHRva2VuaXplciwgb3B0aW9ucyk7XG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1wNExvYWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/mp4/Mp4Loader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/mpeg/ExtendedLameHeader.js":
/*!********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/mpeg/ExtendedLameHeader.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExtendedLameHeader: () => (/* binding */ ExtendedLameHeader)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n/* harmony import */ var _ReplayGainDataFormat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ReplayGainDataFormat.js */ \"(rsc)/./node_modules/music-metadata/lib/mpeg/ReplayGainDataFormat.js\");\n/**\n * Extended Lame Header\n */\n\n\n\n/**\n * Info Tag\n * @link http://gabriel.mp3-tech.org/mp3infotag.html\n * @link https://github.com/quodlibet/mutagen/blob/abd58ee58772224334a18817c3fb31103572f70e/mutagen/mp3/_util.py#L112\n */\nconst ExtendedLameHeader = {\n    len: 27,\n    get: (buf, off) => {\n        const track_peak = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 2);\n        return {\n            revision: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBitAllignedNumber(buf, off, 0, 4),\n            vbr_method: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBitAllignedNumber(buf, off, 4, 4),\n            lowpass_filter: 100 * token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off + 1),\n            track_peak: track_peak === 0 ? null : track_peak / 2 ** 23,\n            track_gain: _ReplayGainDataFormat_js__WEBPACK_IMPORTED_MODULE_2__.ReplayGain.get(buf, 6),\n            album_gain: _ReplayGainDataFormat_js__WEBPACK_IMPORTED_MODULE_2__.ReplayGain.get(buf, 8),\n            music_length: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buf, off + 20),\n            music_crc: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off + 24),\n            header_crc: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 24)\n        };\n    }\n};\n//# sourceMappingURL=ExtendedLameHeader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL21wZWcvRXh0ZW5kZWRMYW1lSGVhZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDcUM7QUFDTztBQUNXO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSwyQkFBMkIsa0RBQWU7QUFDMUM7QUFDQSxzQkFBc0IsaUVBQTJCO0FBQ2pELHdCQUF3QixpRUFBMkI7QUFDbkQsa0NBQWtDLDhDQUFXO0FBQzdDO0FBQ0Esd0JBQXdCLGdFQUFVO0FBQ2xDLHdCQUF3QixnRUFBVTtBQUNsQywwQkFBMEIsa0RBQWU7QUFDekMsdUJBQXVCLDhDQUFXO0FBQ2xDLHdCQUF3QixrREFBZTtBQUN2QztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvbXBlZy9FeHRlbmRlZExhbWVIZWFkZXIuanM/OWQzZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVuZGVkIExhbWUgSGVhZGVyXG4gKi9cbmltcG9ydCAqIGFzIFRva2VuIGZyb20gJ3Rva2VuLXR5cGVzJztcbmltcG9ydCAqIGFzIGNvbW1vbiBmcm9tICcuLi9jb21tb24vVXRpbC5qcyc7XG5pbXBvcnQgeyBSZXBsYXlHYWluIH0gZnJvbSAnLi9SZXBsYXlHYWluRGF0YUZvcm1hdC5qcyc7XG4vKipcbiAqIEluZm8gVGFnXG4gKiBAbGluayBodHRwOi8vZ2FicmllbC5tcDMtdGVjaC5vcmcvbXAzaW5mb3RhZy5odG1sXG4gKiBAbGluayBodHRwczovL2dpdGh1Yi5jb20vcXVvZGxpYmV0L211dGFnZW4vYmxvYi9hYmQ1OGVlNTg3NzIyMjQzMzRhMTg4MTdjM2ZiMzExMDM1NzJmNzBlL211dGFnZW4vbXAzL191dGlsLnB5I0wxMTJcbiAqL1xuZXhwb3J0IGNvbnN0IEV4dGVuZGVkTGFtZUhlYWRlciA9IHtcbiAgICBsZW46IDI3LFxuICAgIGdldDogKGJ1Ziwgb2ZmKSA9PiB7XG4gICAgICAgIGNvbnN0IHRyYWNrX3BlYWsgPSBUb2tlbi5VSU5UMzJfQkUuZ2V0KGJ1Ziwgb2ZmICsgMik7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByZXZpc2lvbjogY29tbW9uLmdldEJpdEFsbGlnbmVkTnVtYmVyKGJ1Ziwgb2ZmLCAwLCA0KSxcbiAgICAgICAgICAgIHZicl9tZXRob2Q6IGNvbW1vbi5nZXRCaXRBbGxpZ25lZE51bWJlcihidWYsIG9mZiwgNCwgNCksXG4gICAgICAgICAgICBsb3dwYXNzX2ZpbHRlcjogMTAwICogVG9rZW4uVUlOVDguZ2V0KGJ1Ziwgb2ZmICsgMSksXG4gICAgICAgICAgICB0cmFja19wZWFrOiB0cmFja19wZWFrID09PSAwID8gbnVsbCA6IHRyYWNrX3BlYWsgLyAyICoqIDIzLFxuICAgICAgICAgICAgdHJhY2tfZ2FpbjogUmVwbGF5R2Fpbi5nZXQoYnVmLCA2KSxcbiAgICAgICAgICAgIGFsYnVtX2dhaW46IFJlcGxheUdhaW4uZ2V0KGJ1ZiwgOCksXG4gICAgICAgICAgICBtdXNpY19sZW5ndGg6IFRva2VuLlVJTlQzMl9CRS5nZXQoYnVmLCBvZmYgKyAyMCksXG4gICAgICAgICAgICBtdXNpY19jcmM6IFRva2VuLlVJTlQ4LmdldChidWYsIG9mZiArIDI0KSxcbiAgICAgICAgICAgIGhlYWRlcl9jcmM6IFRva2VuLlVJTlQxNl9CRS5nZXQoYnVmLCBvZmYgKyAyNClcbiAgICAgICAgfTtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXh0ZW5kZWRMYW1lSGVhZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/mpeg/ExtendedLameHeader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/mpeg/MpegLoader.js":
/*!************************************************************!*\
  !*** ./node_modules/music-metadata/lib/mpeg/MpegLoader.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mpegParserLoader: () => (/* binding */ mpegParserLoader)\n/* harmony export */ });\nconst mpegParserLoader = {\n    parserType: 'mpeg',\n    extensions: ['.mp2', '.mp3', '.m2a', '.aac', 'aacp'],\n    async load(metadata, tokenizer, options) {\n        return new (await __webpack_require__.e(/*! import() */ \"vendor-chunks/music-metadata\").then(__webpack_require__.bind(__webpack_require__, /*! ./MpegParser.js */ \"(rsc)/./node_modules/music-metadata/lib/mpeg/MpegParser.js\"))).MpegParser(metadata, tokenizer, options);\n    }\n};\n//# sourceMappingURL=MpegLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL21wZWcvTXBlZ0xvYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsOE1BQXlCO0FBQ25EO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvbXBlZy9NcGVnTG9hZGVyLmpzPzQzNTkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IG1wZWdQYXJzZXJMb2FkZXIgPSB7XG4gICAgcGFyc2VyVHlwZTogJ21wZWcnLFxuICAgIGV4dGVuc2lvbnM6IFsnLm1wMicsICcubXAzJywgJy5tMmEnLCAnLmFhYycsICdhYWNwJ10sXG4gICAgYXN5bmMgbG9hZChtZXRhZGF0YSwgdG9rZW5pemVyLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgKGF3YWl0IGltcG9ydCgnLi9NcGVnUGFyc2VyLmpzJykpLk1wZWdQYXJzZXIobWV0YWRhdGEsIHRva2VuaXplciwgb3B0aW9ucyk7XG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1wZWdMb2FkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/mpeg/MpegLoader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/mpeg/MpegParser.js":
/*!************************************************************!*\
  !*** ./node_modules/music-metadata/lib/mpeg/MpegParser.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MpegContentError: () => (/* binding */ MpegContentError),\n/* harmony export */   MpegParser: () => (/* binding */ MpegParser)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var strtok3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! strtok3 */ \"(rsc)/./node_modules/strtok3/lib/index.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n/* harmony import */ var _id3v2_AbstractID3Parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../id3v2/AbstractID3Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/AbstractID3Parser.js\");\n/* harmony import */ var _XingTag_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./XingTag.js */ \"(rsc)/./node_modules/music-metadata/lib/mpeg/XingTag.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_2__('music-metadata:parser:mpeg');\nclass MpegContentError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_6__.makeUnexpectedFileContentError)('MPEG') {\n}\n/**\n * Cache buffer size used for searching synchronization preabmle\n */\nconst maxPeekLen = 1024;\n/**\n * MPEG-4 Audio definitions\n * Ref:  https://wiki.multimedia.cx/index.php/MPEG-4_Audio\n */\nconst MPEG4 = {\n    /**\n     * Audio Object Types\n     */\n    AudioObjectTypes: [\n        'AAC Main',\n        'AAC LC', // Low Complexity\n        'AAC SSR', // Scalable Sample Rate\n        'AAC LTP' // Long Term Prediction\n    ],\n    /**\n     * Sampling Frequencies\n     * https://wiki.multimedia.cx/index.php/MPEG-4_Audio#Sampling_Frequencies\n     */\n    SamplingFrequencies: [\n        96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350, null, null, -1\n    ]\n    /**\n     * Channel Configurations\n     */\n};\nconst MPEG4_ChannelConfigurations = [\n    undefined,\n    ['front-center'],\n    ['front-left', 'front-right'],\n    ['front-center', 'front-left', 'front-right'],\n    ['front-center', 'front-left', 'front-right', 'back-center'],\n    ['front-center', 'front-left', 'front-right', 'back-left', 'back-right'],\n    ['front-center', 'front-left', 'front-right', 'back-left', 'back-right', 'LFE-channel'],\n    ['front-center', 'front-left', 'front-right', 'side-left', 'side-right', 'back-left', 'back-right', 'LFE-channel']\n];\n/**\n * MPEG Audio Layer I/II/III frame header\n * Ref: https://www.mp3-tech.org/programmer/frame_header.html\n * Bit layout: AAAAAAAA AAABBCCD EEEEFFGH IIJJKLMM\n * Ref: https://wiki.multimedia.cx/index.php/ADTS\n */\nclass MpegFrameHeader {\n    constructor(buf, off) {\n        // E(15,12): Bitrate index\n        this.bitrateIndex = null;\n        // F(11,10): Sampling rate frequency index\n        this.sampRateFreqIndex = null;\n        // G(9): Padding bit\n        this.padding = null;\n        // H(8): Private bit\n        this.privateBit = null;\n        // I(7,6): Channel Mode\n        this.channelModeIndex = null;\n        // J(5,4): Mode extension (Only used in Joint stereo)\n        this.modeExtension = null;\n        // L(2): Original\n        this.isOriginalMedia = null;\n        this.version = null;\n        this.bitrate = null;\n        this.samplingRate = null;\n        this.frameLength = 0;\n        // B(20,19): MPEG Audio versionIndex ID\n        this.versionIndex = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.getBitAllignedNumber(buf, off + 1, 3, 2);\n        // C(18,17): Layer description\n        this.layer = MpegFrameHeader.LayerDescription[_common_Util_js__WEBPACK_IMPORTED_MODULE_3__.getBitAllignedNumber(buf, off + 1, 5, 2)];\n        if (this.versionIndex > 1 && this.layer === 0) {\n            this.parseAdtsHeader(buf, off); // Audio Data Transport Stream (ADTS)\n        }\n        else {\n            this.parseMpegHeader(buf, off); // Conventional MPEG header\n        }\n        // D(16): Protection bit (if true 16-bit CRC follows header)\n        this.isProtectedByCRC = !_common_Util_js__WEBPACK_IMPORTED_MODULE_3__.isBitSet(buf, off + 1, 7);\n    }\n    calcDuration(numFrames) {\n        return this.samplingRate == null ? null : (numFrames * this.calcSamplesPerFrame() / this.samplingRate);\n    }\n    calcSamplesPerFrame() {\n        return MpegFrameHeader.samplesInFrameTable[this.version === 1 ? 0 : 1][this.layer];\n    }\n    calculateSideInfoLength() {\n        if (this.layer !== 3)\n            return 2;\n        if (this.channelModeIndex === 3) {\n            // mono\n            if (this.version === 1) {\n                return 17;\n            }\n            if (this.version === 2 || this.version === 2.5) {\n                return 9;\n            }\n        }\n        else {\n            if (this.version === 1) {\n                return 32;\n            }\n            if (this.version === 2 || this.version === 2.5) {\n                return 17;\n            }\n        }\n        return null;\n    }\n    calcSlotSize() {\n        return [null, 4, 1, 1][this.layer];\n    }\n    parseMpegHeader(buf, off) {\n        this.container = 'MPEG';\n        // E(15,12): Bitrate index\n        this.bitrateIndex = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.getBitAllignedNumber(buf, off + 2, 0, 4);\n        // F(11,10): Sampling rate frequency index\n        this.sampRateFreqIndex = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.getBitAllignedNumber(buf, off + 2, 4, 2);\n        // G(9): Padding bit\n        this.padding = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.isBitSet(buf, off + 2, 6);\n        // H(8): Private bit\n        this.privateBit = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.isBitSet(buf, off + 2, 7);\n        // I(7,6): Channel Mode\n        this.channelModeIndex = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.getBitAllignedNumber(buf, off + 3, 0, 2);\n        // J(5,4): Mode extension (Only used in Joint stereo)\n        this.modeExtension = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.getBitAllignedNumber(buf, off + 3, 2, 2);\n        // K(3): Copyright\n        this.isCopyrighted = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.isBitSet(buf, off + 3, 4);\n        // L(2): Original\n        this.isOriginalMedia = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.isBitSet(buf, off + 3, 5);\n        // M(3): The original bit indicates, if it is set, that the frame is located on its original media.\n        this.emphasis = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.getBitAllignedNumber(buf, off + 3, 7, 2);\n        this.version = MpegFrameHeader.VersionID[this.versionIndex];\n        this.channelMode = MpegFrameHeader.ChannelMode[this.channelModeIndex];\n        this.codec = `MPEG ${this.version} Layer ${this.layer}`;\n        // Calculate bitrate\n        const bitrateInKbps = this.calcBitrate();\n        if (!bitrateInKbps) {\n            throw new MpegContentError('Cannot determine bit-rate');\n        }\n        this.bitrate = bitrateInKbps * 1000;\n        // Calculate sampling rate\n        this.samplingRate = this.calcSamplingRate();\n        if (this.samplingRate == null) {\n            throw new MpegContentError('Cannot determine sampling-rate');\n        }\n    }\n    parseAdtsHeader(buf, off) {\n        debug(\"layer=0 => ADTS\");\n        this.version = this.versionIndex === 2 ? 4 : 2;\n        this.container = `ADTS/MPEG-${this.version}`;\n        const profileIndex = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.getBitAllignedNumber(buf, off + 2, 0, 2);\n        this.codec = 'AAC';\n        this.codecProfile = MPEG4.AudioObjectTypes[profileIndex];\n        debug(`MPEG-4 audio-codec=${this.codec}`);\n        const samplingFrequencyIndex = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.getBitAllignedNumber(buf, off + 2, 2, 4);\n        this.samplingRate = MPEG4.SamplingFrequencies[samplingFrequencyIndex];\n        debug(`sampling-rate=${this.samplingRate}`);\n        const channelIndex = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.getBitAllignedNumber(buf, off + 2, 7, 3);\n        this.mp4ChannelConfig = MPEG4_ChannelConfigurations[channelIndex];\n        debug(`channel-config=${this.mp4ChannelConfig ? this.mp4ChannelConfig.join('+') : '?'}`);\n        this.frameLength = _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.getBitAllignedNumber(buf, off + 3, 6, 2) << 11;\n    }\n    calcBitrate() {\n        if (this.bitrateIndex === 0x00 || // free\n            this.bitrateIndex === 0x0F) { // reserved\n            return null;\n        }\n        if (this.version && this.bitrateIndex) {\n            const codecIndex = 10 * Math.floor(this.version) + this.layer;\n            return MpegFrameHeader.bitrate_index[this.bitrateIndex][codecIndex];\n        }\n        return null;\n    }\n    calcSamplingRate() {\n        if (this.sampRateFreqIndex === 0x03 || this.version === null || this.sampRateFreqIndex == null)\n            return null; // 'reserved'\n        return MpegFrameHeader.sampling_rate_freq_index[this.version][this.sampRateFreqIndex];\n    }\n}\nMpegFrameHeader.SyncByte1 = 0xFF;\nMpegFrameHeader.SyncByte2 = 0xE0;\nMpegFrameHeader.VersionID = [2.5, null, 2, 1];\nMpegFrameHeader.LayerDescription = [0, 3, 2, 1];\nMpegFrameHeader.ChannelMode = ['stereo', 'joint_stereo', 'dual_channel', 'mono'];\nMpegFrameHeader.bitrate_index = {\n    1: { 11: 32, 12: 32, 13: 32, 21: 32, 22: 8, 23: 8 },\n    2: { 11: 64, 12: 48, 13: 40, 21: 48, 22: 16, 23: 16 },\n    3: { 11: 96, 12: 56, 13: 48, 21: 56, 22: 24, 23: 24 },\n    4: { 11: 128, 12: 64, 13: 56, 21: 64, 22: 32, 23: 32 },\n    5: { 11: 160, 12: 80, 13: 64, 21: 80, 22: 40, 23: 40 },\n    6: { 11: 192, 12: 96, 13: 80, 21: 96, 22: 48, 23: 48 },\n    7: { 11: 224, 12: 112, 13: 96, 21: 112, 22: 56, 23: 56 },\n    8: { 11: 256, 12: 128, 13: 112, 21: 128, 22: 64, 23: 64 },\n    9: { 11: 288, 12: 160, 13: 128, 21: 144, 22: 80, 23: 80 },\n    10: { 11: 320, 12: 192, 13: 160, 21: 160, 22: 96, 23: 96 },\n    11: { 11: 352, 12: 224, 13: 192, 21: 176, 22: 112, 23: 112 },\n    12: { 11: 384, 12: 256, 13: 224, 21: 192, 22: 128, 23: 128 },\n    13: { 11: 416, 12: 320, 13: 256, 21: 224, 22: 144, 23: 144 },\n    14: { 11: 448, 12: 384, 13: 320, 21: 256, 22: 160, 23: 160 }\n};\nMpegFrameHeader.sampling_rate_freq_index = {\n    1: { 0: 44100, 1: 48000, 2: 32000 },\n    2: { 0: 22050, 1: 24000, 2: 16000 },\n    2.5: { 0: 11025, 1: 12000, 2: 8000 }\n};\nMpegFrameHeader.samplesInFrameTable = [\n    /* Layer   I    II   III */\n    [0, 384, 1152, 1152], // MPEG-1\n    [0, 384, 1152, 576] // MPEG-2(.5\n];\n/**\n * MPEG Audio Layer I/II/III\n */\nconst FrameHeader = {\n    len: 4,\n    get: (buf, off) => {\n        return new MpegFrameHeader(buf, off);\n    }\n};\nfunction getVbrCodecProfile(vbrScale) {\n    return `V${Math.floor((100 - vbrScale) / 10)}`;\n}\nclass MpegParser extends _id3v2_AbstractID3Parser_js__WEBPACK_IMPORTED_MODULE_4__.AbstractID3Parser {\n    constructor() {\n        super(...arguments);\n        this.frameCount = 0;\n        this.syncFrameCount = -1;\n        this.countSkipFrameData = 0;\n        this.totalDataLength = 0;\n        this.bitrates = [];\n        this.offset = 0;\n        this.frame_size = 0;\n        this.crc = null;\n        this.calculateEofDuration = false;\n        this.samplesPerFrame = null;\n        this.buf_frame_header = new Uint8Array(4);\n        /**\n         * Number of bytes already parsed since beginning of stream / file\n         */\n        this.mpegOffset = null;\n        this.syncPeek = {\n            buf: new Uint8Array(maxPeekLen),\n            len: 0\n        };\n    }\n    /**\n     * Called after ID3 headers have been parsed\n     */\n    async postId3v2Parse() {\n        this.metadata.setFormat('lossless', false);\n        try {\n            let quit = false;\n            while (!quit) {\n                await this.sync();\n                quit = await this.parseCommonMpegHeader();\n            }\n        }\n        catch (err) {\n            if (err instanceof strtok3__WEBPACK_IMPORTED_MODULE_1__.EndOfStreamError) {\n                debug(\"End-of-stream\");\n                if (this.calculateEofDuration) {\n                    if (this.samplesPerFrame !== null) {\n                        const numberOfSamples = this.frameCount * this.samplesPerFrame;\n                        this.metadata.setFormat('numberOfSamples', numberOfSamples);\n                        if (this.metadata.format.sampleRate) {\n                            const duration = numberOfSamples / this.metadata.format.sampleRate;\n                            debug(`Calculate duration at EOF: ${duration} sec.`, duration);\n                            this.metadata.setFormat('duration', duration);\n                        }\n                    }\n                }\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    /**\n     * Called after file has been fully parsed, this allows, if present, to exclude the ID3v1.1 header length\n     */\n    finalize() {\n        const format = this.metadata.format;\n        const hasID3v1 = !!this.metadata.native.ID3v1;\n        if (this.mpegOffset !== null) {\n            if (format.duration && this.tokenizer.fileInfo.size) {\n                const mpegSize = this.tokenizer.fileInfo.size - this.mpegOffset - (hasID3v1 ? 128 : 0);\n                if (format.codecProfile && format.codecProfile[0] === 'V') {\n                    this.metadata.setFormat('bitrate', mpegSize * 8 / format.duration);\n                }\n            }\n            if (this.tokenizer.fileInfo.size && format.codecProfile === 'CBR') {\n                const mpegSize = this.tokenizer.fileInfo.size - this.mpegOffset - (hasID3v1 ? 128 : 0);\n                if (this.frame_size !== null && this.samplesPerFrame !== null) {\n                    const numberOfSamples = Math.round(mpegSize / this.frame_size) * this.samplesPerFrame;\n                    this.metadata.setFormat('numberOfSamples', numberOfSamples);\n                    if (format.sampleRate && !format.duration) {\n                        const duration = numberOfSamples / format.sampleRate;\n                        debug(\"Calculate CBR duration based on file size: %s\", duration);\n                        this.metadata.setFormat('duration', duration);\n                    }\n                }\n            }\n        }\n    }\n    async sync() {\n        let gotFirstSync = false;\n        while (true) {\n            let bo = 0;\n            this.syncPeek.len = await this.tokenizer.peekBuffer(this.syncPeek.buf, { length: maxPeekLen, mayBeLess: true });\n            if (this.syncPeek.len <= 163) {\n                throw new strtok3__WEBPACK_IMPORTED_MODULE_1__.EndOfStreamError();\n            }\n            while (true) {\n                if (gotFirstSync && (this.syncPeek.buf[bo] & 0xE0) === 0xE0) {\n                    this.buf_frame_header[0] = MpegFrameHeader.SyncByte1;\n                    this.buf_frame_header[1] = this.syncPeek.buf[bo];\n                    await this.tokenizer.ignore(bo);\n                    debug(`Sync at offset=${this.tokenizer.position - 1}, frameCount=${this.frameCount}`);\n                    if (this.syncFrameCount === this.frameCount) {\n                        debug(`Re-synced MPEG stream, frameCount=${this.frameCount}`);\n                        this.frameCount = 0;\n                        this.frame_size = 0;\n                    }\n                    this.syncFrameCount = this.frameCount;\n                    return; // sync\n                }\n                gotFirstSync = false;\n                bo = this.syncPeek.buf.indexOf(MpegFrameHeader.SyncByte1, bo);\n                if (bo === -1) {\n                    if (this.syncPeek.len < this.syncPeek.buf.length) {\n                        throw new strtok3__WEBPACK_IMPORTED_MODULE_1__.EndOfStreamError();\n                    }\n                    await this.tokenizer.ignore(this.syncPeek.len);\n                    break; // continue with next buffer\n                }\n                ++bo;\n                gotFirstSync = true;\n            }\n        }\n    }\n    /**\n     * Combined ADTS & MPEG (MP2 & MP3) header handling\n     * @return {Promise<boolean>} true if parser should quit\n     */\n    async parseCommonMpegHeader() {\n        if (this.frameCount === 0) {\n            this.mpegOffset = this.tokenizer.position - 1;\n        }\n        await this.tokenizer.peekBuffer(this.buf_frame_header.subarray(1), { length: 3 });\n        let header;\n        try {\n            header = FrameHeader.get(this.buf_frame_header, 0);\n        }\n        catch (err) {\n            await this.tokenizer.ignore(1);\n            if (err instanceof Error) {\n                this.metadata.addWarning(`Parse error: ${err.message}`);\n                return false; // sync\n            }\n            throw err;\n        }\n        await this.tokenizer.ignore(3);\n        this.metadata.setFormat('container', header.container);\n        this.metadata.setFormat('codec', header.codec);\n        this.metadata.setFormat('lossless', false);\n        this.metadata.setFormat('sampleRate', header.samplingRate);\n        this.frameCount++;\n        return header.version !== null && header.version >= 2 && header.layer === 0 ? this.parseAdts(header) : this.parseAudioFrameHeader(header);\n    }\n    /**\n     * @return {Promise<boolean>} true if parser should quit\n     */\n    async parseAudioFrameHeader(header) {\n        this.metadata.setFormat('numberOfChannels', header.channelMode === 'mono' ? 1 : 2);\n        this.metadata.setFormat('bitrate', header.bitrate);\n        if (this.frameCount < 20 * 10000) {\n            debug('offset=%s MP%s bitrate=%s sample-rate=%s', this.tokenizer.position - 4, header.layer, header.bitrate, header.samplingRate);\n        }\n        const slot_size = header.calcSlotSize();\n        if (slot_size === null) {\n            throw new MpegContentError('invalid slot_size');\n        }\n        const samples_per_frame = header.calcSamplesPerFrame();\n        debug(`samples_per_frame=${samples_per_frame}`);\n        const bps = samples_per_frame / 8.0;\n        if (header.bitrate !== null && header.samplingRate != null) {\n            const fsize = (bps * header.bitrate / header.samplingRate) + ((header.padding) ? slot_size : 0);\n            this.frame_size = Math.floor(fsize);\n        }\n        this.audioFrameHeader = header;\n        if (header.bitrate !== null) {\n            this.bitrates.push(header.bitrate);\n        }\n        // xtra header only exists in first frame\n        if (this.frameCount === 1) {\n            this.offset = FrameHeader.len;\n            await this.skipSideInformation();\n            return false;\n        }\n        if (this.frameCount === 3) {\n            // the stream is CBR if the first 3 frame bitrates are the same\n            if (this.areAllSame(this.bitrates)) {\n                // Actual calculation will be done in finalize\n                this.samplesPerFrame = samples_per_frame;\n                this.metadata.setFormat('codecProfile', 'CBR');\n                if (this.tokenizer.fileInfo.size)\n                    return true; // Will calculate duration based on the file size\n            }\n            else if (this.metadata.format.duration) {\n                return true; // We already got the duration, stop processing MPEG stream any further\n            }\n            if (!this.options.duration) {\n                return true; // Enforce duration not enabled, stop processing entire stream\n            }\n        }\n        // once we know the file is VBR attach listener to end of\n        // stream so we can do the duration calculation when we\n        // have counted all the frames\n        if (this.options.duration && this.frameCount === 4) {\n            this.samplesPerFrame = samples_per_frame;\n            this.calculateEofDuration = true;\n        }\n        this.offset = 4;\n        if (header.isProtectedByCRC) {\n            await this.parseCrc();\n            return false;\n        }\n        await this.skipSideInformation();\n        return false;\n    }\n    async parseAdts(header) {\n        const buf = new Uint8Array(3);\n        await this.tokenizer.readBuffer(buf);\n        header.frameLength += _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.getBitAllignedNumber(buf, 0, 0, 11);\n        this.totalDataLength += header.frameLength;\n        this.samplesPerFrame = 1024;\n        if (header.samplingRate !== null) {\n            const framesPerSec = header.samplingRate / this.samplesPerFrame;\n            const bytesPerFrame = this.frameCount === 0 ? 0 : this.totalDataLength / this.frameCount;\n            const bitrate = 8 * bytesPerFrame * framesPerSec + 0.5;\n            this.metadata.setFormat('bitrate', bitrate);\n            debug(`frame-count=${this.frameCount}, size=${header.frameLength} bytes, bit-rate=${bitrate}`);\n        }\n        await this.tokenizer.ignore(header.frameLength > 7 ? header.frameLength - 7 : 1);\n        // Consume remaining header and frame data\n        if (this.frameCount === 3) {\n            this.metadata.setFormat('codecProfile', header.codecProfile);\n            if (header.mp4ChannelConfig) {\n                this.metadata.setFormat('numberOfChannels', header.mp4ChannelConfig.length);\n            }\n            if (this.options.duration) {\n                this.calculateEofDuration = true;\n            }\n            else {\n                return true; // Stop parsing after the third frame\n            }\n        }\n        return false;\n    }\n    async parseCrc() {\n        this.crc = await this.tokenizer.readNumber(token_types__WEBPACK_IMPORTED_MODULE_0__.INT16_BE);\n        this.offset += 2;\n        return this.skipSideInformation();\n    }\n    async skipSideInformation() {\n        if (this.audioFrameHeader) {\n            const sideinfo_length = this.audioFrameHeader.calculateSideInfoLength();\n            if (sideinfo_length !== null) {\n                await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayType(sideinfo_length));\n                // side information\n                this.offset += sideinfo_length;\n                await this.readXtraInfoHeader();\n                return;\n            }\n        }\n    }\n    async readXtraInfoHeader() {\n        const headerTag = await this.tokenizer.readToken(_XingTag_js__WEBPACK_IMPORTED_MODULE_5__.InfoTagHeaderTag);\n        this.offset += _XingTag_js__WEBPACK_IMPORTED_MODULE_5__.InfoTagHeaderTag.len; // 12\n        switch (headerTag) {\n            case 'Info':\n                this.metadata.setFormat('codecProfile', 'CBR');\n                return this.readXingInfoHeader();\n            case 'Xing': {\n                const infoTag = await this.readXingInfoHeader();\n                if (infoTag.vbrScale !== null) {\n                    const codecProfile = getVbrCodecProfile(infoTag.vbrScale);\n                    this.metadata.setFormat('codecProfile', codecProfile);\n                }\n                return null;\n            }\n            case 'Xtra':\n                // ToDo: ???\n                break;\n            case 'LAME': {\n                const version = await this.tokenizer.readToken(_XingTag_js__WEBPACK_IMPORTED_MODULE_5__.LameEncoderVersion);\n                if (this.frame_size !== null && this.frame_size >= this.offset + _XingTag_js__WEBPACK_IMPORTED_MODULE_5__.LameEncoderVersion.len) {\n                    this.offset += _XingTag_js__WEBPACK_IMPORTED_MODULE_5__.LameEncoderVersion.len;\n                    this.metadata.setFormat('tool', `LAME ${version}`);\n                    await this.skipFrameData(this.frame_size - this.offset);\n                    return null;\n                }\n                this.metadata.addWarning('Corrupt LAME header');\n                break;\n            }\n            // ToDo: ???\n        }\n        // ToDo: promise duration???\n        const frameDataLeft = this.frame_size - this.offset;\n        if (frameDataLeft < 0) {\n            this.metadata.addWarning(`Frame ${this.frameCount}corrupt: negative frameDataLeft`);\n        }\n        else {\n            await this.skipFrameData(frameDataLeft);\n        }\n        return null;\n    }\n    /**\n     * Ref: http://gabriel.mp3-tech.org/mp3infotag.html\n     * @returns {Promise<string>}\n     */\n    async readXingInfoHeader() {\n        const offset = this.tokenizer.position;\n        const infoTag = await (0,_XingTag_js__WEBPACK_IMPORTED_MODULE_5__.readXingHeader)(this.tokenizer);\n        this.offset += this.tokenizer.position - offset;\n        if (infoTag.lame) {\n            this.metadata.setFormat('tool', `LAME ${_common_Util_js__WEBPACK_IMPORTED_MODULE_3__.stripNulls(infoTag.lame.version)}`);\n            if (infoTag.lame.extended) {\n                // this.metadata.setFormat('trackGain', infoTag.lame.extended.track_gain);\n                this.metadata.setFormat('trackPeakLevel', infoTag.lame.extended.track_peak);\n                if (infoTag.lame.extended.track_gain) {\n                    this.metadata.setFormat('trackGain', infoTag.lame.extended.track_gain.adjustment);\n                }\n                if (infoTag.lame.extended.album_gain) {\n                    this.metadata.setFormat('albumGain', infoTag.lame.extended.album_gain.adjustment);\n                }\n                this.metadata.setFormat('duration', infoTag.lame.extended.music_length / 1000);\n            }\n        }\n        if (infoTag.streamSize && this.audioFrameHeader && infoTag.numFrames !== null) {\n            const duration = this.audioFrameHeader.calcDuration(infoTag.numFrames);\n            this.metadata.setFormat('duration', duration);\n            debug('Get duration from Xing header: %s', this.metadata.format.duration);\n            return infoTag;\n        }\n        // frames field is not present\n        const frameDataLeft = this.frame_size - this.offset;\n        await this.skipFrameData(frameDataLeft);\n        return infoTag;\n    }\n    async skipFrameData(frameDataLeft) {\n        if (frameDataLeft < 0)\n            throw new MpegContentError('frame-data-left cannot be negative');\n        await this.tokenizer.ignore(frameDataLeft);\n        this.countSkipFrameData += frameDataLeft;\n    }\n    areAllSame(array) {\n        const first = array[0];\n        return array.every(element => {\n            return element === first;\n        });\n    }\n}\n//# sourceMappingURL=MpegParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/mpeg/MpegParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/mpeg/ReplayGainDataFormat.js":
/*!**********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/mpeg/ReplayGainDataFormat.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReplayGain: () => (/* binding */ ReplayGain)\n/* harmony export */ });\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n\n/**\n * https://github.com/Borewit/music-metadata/wiki/Replay-Gain-Data-Format#name-code\n */\nvar NameCode;\n(function (NameCode) {\n    /**\n     * not set\n     */\n    NameCode[NameCode[\"not_set\"] = 0] = \"not_set\";\n    /**\n     * Radio Gain Adjustment\n     */\n    NameCode[NameCode[\"radio\"] = 1] = \"radio\";\n    /**\n     * Audiophile Gain Adjustment\n     */\n    NameCode[NameCode[\"audiophile\"] = 2] = \"audiophile\";\n})(NameCode || (NameCode = {}));\n/**\n * https://github.com/Borewit/music-metadata/wiki/Replay-Gain-Data-Format#originator-code\n */\nvar ReplayGainOriginator;\n(function (ReplayGainOriginator) {\n    /**\n     * Replay Gain unspecified\n     */\n    ReplayGainOriginator[ReplayGainOriginator[\"unspecified\"] = 0] = \"unspecified\";\n    /**\n     * Replay Gain pre-set by artist/producer/mastering engineer\n     */\n    ReplayGainOriginator[ReplayGainOriginator[\"engineer\"] = 1] = \"engineer\";\n    /**\n     * Replay Gain set by user\n     */\n    ReplayGainOriginator[ReplayGainOriginator[\"user\"] = 2] = \"user\";\n    /**\n     * Replay Gain determined automatically, as described on this site\n     */\n    ReplayGainOriginator[ReplayGainOriginator[\"automatic\"] = 3] = \"automatic\";\n    /**\n     * Set by simple RMS average\n     */\n    ReplayGainOriginator[ReplayGainOriginator[\"rms_average\"] = 4] = \"rms_average\";\n})(ReplayGainOriginator || (ReplayGainOriginator = {}));\n/**\n * Replay Gain Data Format\n *\n * https://github.com/Borewit/music-metadata/wiki/Replay-Gain-Data-Format\n */\nconst ReplayGain = {\n    len: 2,\n    get: (buf, off) => {\n        const gain_type = _common_Util_js__WEBPACK_IMPORTED_MODULE_0__.getBitAllignedNumber(buf, off, 0, 3);\n        const sign = _common_Util_js__WEBPACK_IMPORTED_MODULE_0__.getBitAllignedNumber(buf, off, 6, 1);\n        const gain_adj = _common_Util_js__WEBPACK_IMPORTED_MODULE_0__.getBitAllignedNumber(buf, off, 7, 9) / 10.0;\n        if (gain_type > 0) {\n            return {\n                type: _common_Util_js__WEBPACK_IMPORTED_MODULE_0__.getBitAllignedNumber(buf, off, 0, 3),\n                origin: _common_Util_js__WEBPACK_IMPORTED_MODULE_0__.getBitAllignedNumber(buf, off, 3, 3),\n                adjustment: (sign ? -gain_adj : gain_adj)\n            };\n        }\n        return undefined;\n    }\n};\n//# sourceMappingURL=ReplayGainDataFormat.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL21wZWcvUmVwbGF5R2FpbkRhdGFGb3JtYXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNEJBQTRCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvREFBb0Q7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDBCQUEwQixpRUFBMkI7QUFDckQscUJBQXFCLGlFQUEyQjtBQUNoRCx5QkFBeUIsaUVBQTJCO0FBQ3BEO0FBQ0E7QUFDQSxzQkFBc0IsaUVBQTJCO0FBQ2pELHdCQUF3QixpRUFBMkI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL21wZWcvUmVwbGF5R2FpbkRhdGFGb3JtYXQuanM/NTBhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjb21tb24gZnJvbSAnLi4vY29tbW9uL1V0aWwuanMnO1xuLyoqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vQm9yZXdpdC9tdXNpYy1tZXRhZGF0YS93aWtpL1JlcGxheS1HYWluLURhdGEtRm9ybWF0I25hbWUtY29kZVxuICovXG52YXIgTmFtZUNvZGU7XG4oZnVuY3Rpb24gKE5hbWVDb2RlKSB7XG4gICAgLyoqXG4gICAgICogbm90IHNldFxuICAgICAqL1xuICAgIE5hbWVDb2RlW05hbWVDb2RlW1wibm90X3NldFwiXSA9IDBdID0gXCJub3Rfc2V0XCI7XG4gICAgLyoqXG4gICAgICogUmFkaW8gR2FpbiBBZGp1c3RtZW50XG4gICAgICovXG4gICAgTmFtZUNvZGVbTmFtZUNvZGVbXCJyYWRpb1wiXSA9IDFdID0gXCJyYWRpb1wiO1xuICAgIC8qKlxuICAgICAqIEF1ZGlvcGhpbGUgR2FpbiBBZGp1c3RtZW50XG4gICAgICovXG4gICAgTmFtZUNvZGVbTmFtZUNvZGVbXCJhdWRpb3BoaWxlXCJdID0gMl0gPSBcImF1ZGlvcGhpbGVcIjtcbn0pKE5hbWVDb2RlIHx8IChOYW1lQ29kZSA9IHt9KSk7XG4vKipcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Cb3Jld2l0L211c2ljLW1ldGFkYXRhL3dpa2kvUmVwbGF5LUdhaW4tRGF0YS1Gb3JtYXQjb3JpZ2luYXRvci1jb2RlXG4gKi9cbnZhciBSZXBsYXlHYWluT3JpZ2luYXRvcjtcbihmdW5jdGlvbiAoUmVwbGF5R2Fpbk9yaWdpbmF0b3IpIHtcbiAgICAvKipcbiAgICAgKiBSZXBsYXkgR2FpbiB1bnNwZWNpZmllZFxuICAgICAqL1xuICAgIFJlcGxheUdhaW5PcmlnaW5hdG9yW1JlcGxheUdhaW5PcmlnaW5hdG9yW1widW5zcGVjaWZpZWRcIl0gPSAwXSA9IFwidW5zcGVjaWZpZWRcIjtcbiAgICAvKipcbiAgICAgKiBSZXBsYXkgR2FpbiBwcmUtc2V0IGJ5IGFydGlzdC9wcm9kdWNlci9tYXN0ZXJpbmcgZW5naW5lZXJcbiAgICAgKi9cbiAgICBSZXBsYXlHYWluT3JpZ2luYXRvcltSZXBsYXlHYWluT3JpZ2luYXRvcltcImVuZ2luZWVyXCJdID0gMV0gPSBcImVuZ2luZWVyXCI7XG4gICAgLyoqXG4gICAgICogUmVwbGF5IEdhaW4gc2V0IGJ5IHVzZXJcbiAgICAgKi9cbiAgICBSZXBsYXlHYWluT3JpZ2luYXRvcltSZXBsYXlHYWluT3JpZ2luYXRvcltcInVzZXJcIl0gPSAyXSA9IFwidXNlclwiO1xuICAgIC8qKlxuICAgICAqIFJlcGxheSBHYWluIGRldGVybWluZWQgYXV0b21hdGljYWxseSwgYXMgZGVzY3JpYmVkIG9uIHRoaXMgc2l0ZVxuICAgICAqL1xuICAgIFJlcGxheUdhaW5PcmlnaW5hdG9yW1JlcGxheUdhaW5PcmlnaW5hdG9yW1wiYXV0b21hdGljXCJdID0gM10gPSBcImF1dG9tYXRpY1wiO1xuICAgIC8qKlxuICAgICAqIFNldCBieSBzaW1wbGUgUk1TIGF2ZXJhZ2VcbiAgICAgKi9cbiAgICBSZXBsYXlHYWluT3JpZ2luYXRvcltSZXBsYXlHYWluT3JpZ2luYXRvcltcInJtc19hdmVyYWdlXCJdID0gNF0gPSBcInJtc19hdmVyYWdlXCI7XG59KShSZXBsYXlHYWluT3JpZ2luYXRvciB8fCAoUmVwbGF5R2Fpbk9yaWdpbmF0b3IgPSB7fSkpO1xuLyoqXG4gKiBSZXBsYXkgR2FpbiBEYXRhIEZvcm1hdFxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Cb3Jld2l0L211c2ljLW1ldGFkYXRhL3dpa2kvUmVwbGF5LUdhaW4tRGF0YS1Gb3JtYXRcbiAqL1xuZXhwb3J0IGNvbnN0IFJlcGxheUdhaW4gPSB7XG4gICAgbGVuOiAyLFxuICAgIGdldDogKGJ1Ziwgb2ZmKSA9PiB7XG4gICAgICAgIGNvbnN0IGdhaW5fdHlwZSA9IGNvbW1vbi5nZXRCaXRBbGxpZ25lZE51bWJlcihidWYsIG9mZiwgMCwgMyk7XG4gICAgICAgIGNvbnN0IHNpZ24gPSBjb21tb24uZ2V0Qml0QWxsaWduZWROdW1iZXIoYnVmLCBvZmYsIDYsIDEpO1xuICAgICAgICBjb25zdCBnYWluX2FkaiA9IGNvbW1vbi5nZXRCaXRBbGxpZ25lZE51bWJlcihidWYsIG9mZiwgNywgOSkgLyAxMC4wO1xuICAgICAgICBpZiAoZ2Fpbl90eXBlID4gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0eXBlOiBjb21tb24uZ2V0Qml0QWxsaWduZWROdW1iZXIoYnVmLCBvZmYsIDAsIDMpLFxuICAgICAgICAgICAgICAgIG9yaWdpbjogY29tbW9uLmdldEJpdEFsbGlnbmVkTnVtYmVyKGJ1Ziwgb2ZmLCAzLCAzKSxcbiAgICAgICAgICAgICAgICBhZGp1c3RtZW50OiAoc2lnbiA/IC1nYWluX2FkaiA6IGdhaW5fYWRqKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZXBsYXlHYWluRGF0YUZvcm1hdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/mpeg/ReplayGainDataFormat.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/mpeg/XingTag.js":
/*!*********************************************************!*\
  !*** ./node_modules/music-metadata/lib/mpeg/XingTag.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InfoTagHeaderTag: () => (/* binding */ InfoTagHeaderTag),\n/* harmony export */   LameEncoderVersion: () => (/* binding */ LameEncoderVersion),\n/* harmony export */   XingHeaderFlags: () => (/* binding */ XingHeaderFlags),\n/* harmony export */   readXingHeader: () => (/* binding */ readXingHeader)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n/* harmony import */ var _ExtendedLameHeader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ExtendedLameHeader.js */ \"(rsc)/./node_modules/music-metadata/lib/mpeg/ExtendedLameHeader.js\");\n\n\n\n/**\n * Info Tag: Xing, LAME\n */\nconst InfoTagHeaderTag = new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(4, 'ascii');\n/**\n * LAME TAG value\n * Did not find any official documentation for this\n * Value e.g.: \"3.98.4\"\n */\nconst LameEncoderVersion = new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(6, 'ascii');\n/**\n * Info Tag\n * Ref: http://gabriel.mp3-tech.org/mp3infotag.html\n */\nconst XingHeaderFlags = {\n    len: 4,\n    get: (buf, off) => {\n        return {\n            frames: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.isBitSet(buf, off, 31),\n            bytes: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.isBitSet(buf, off, 30),\n            toc: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.isBitSet(buf, off, 29),\n            vbrScale: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.isBitSet(buf, off, 28)\n        };\n    }\n};\n// /**\n//  * XING Header Tag\n//  * Ref: http://gabriel.mp3-tech.org/mp3infotag.html\n//  */\nasync function readXingHeader(tokenizer) {\n    const flags = await tokenizer.readToken(XingHeaderFlags);\n    const xingInfoTag = { numFrames: null, streamSize: null, vbrScale: null };\n    if (flags.frames) {\n        xingInfoTag.numFrames = await tokenizer.readToken(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE);\n    }\n    if (flags.bytes) {\n        xingInfoTag.streamSize = await tokenizer.readToken(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE);\n    }\n    if (flags.toc) {\n        xingInfoTag.toc = new Uint8Array(100);\n        await tokenizer.readBuffer(xingInfoTag.toc);\n    }\n    if (flags.vbrScale) {\n        xingInfoTag.vbrScale = await tokenizer.readToken(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE);\n    }\n    const lameTag = await tokenizer.peekToken(new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(4, 'ascii'));\n    if (lameTag === 'LAME') {\n        await tokenizer.ignore(4);\n        xingInfoTag.lame = {\n            version: await tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(5, 'ascii'))\n        };\n        const match = xingInfoTag.lame.version.match(/\\d+.\\d+/g);\n        if (match !== null) {\n            const majorMinorVersion = match[0]; // e.g. 3.97\n            const version = majorMinorVersion.split('.').map(n => Number.parseInt(n, 10));\n            if (version[0] >= 3 && version[1] >= 90) {\n                xingInfoTag.lame.extended = await tokenizer.readToken(_ExtendedLameHeader_js__WEBPACK_IMPORTED_MODULE_2__.ExtendedLameHeader);\n            }\n        }\n    }\n    return xingInfoTag;\n}\n//# sourceMappingURL=XingTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL21wZWcvWGluZ1RhZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXFDO0FBQ0s7QUFDbUI7QUFDN0Q7QUFDQTtBQUNBO0FBQ08sNkJBQTZCLG1EQUFnQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0JBQStCLG1EQUFnQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHFEQUFhO0FBQ2pDLG1CQUFtQixxREFBYTtBQUNoQyxpQkFBaUIscURBQWE7QUFDOUIsc0JBQXNCLHFEQUFhO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBLDBEQUEwRCxrREFBZTtBQUN6RTtBQUNBO0FBQ0EsMkRBQTJELGtEQUFlO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxrREFBZTtBQUN4RTtBQUNBLGtEQUFrRCxtREFBZ0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELG1EQUFnQjtBQUNuRTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBLHNFQUFzRSxzRUFBa0I7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9tcGVnL1hpbmdUYWcuanM/MTE3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBUb2tlbiBmcm9tICd0b2tlbi10eXBlcyc7XG5pbXBvcnQgKiBhcyB1dGlsIGZyb20gJy4uL2NvbW1vbi9VdGlsLmpzJztcbmltcG9ydCB7IEV4dGVuZGVkTGFtZUhlYWRlciB9IGZyb20gJy4vRXh0ZW5kZWRMYW1lSGVhZGVyLmpzJztcbi8qKlxuICogSW5mbyBUYWc6IFhpbmcsIExBTUVcbiAqL1xuZXhwb3J0IGNvbnN0IEluZm9UYWdIZWFkZXJUYWcgPSBuZXcgVG9rZW4uU3RyaW5nVHlwZSg0LCAnYXNjaWknKTtcbi8qKlxuICogTEFNRSBUQUcgdmFsdWVcbiAqIERpZCBub3QgZmluZCBhbnkgb2ZmaWNpYWwgZG9jdW1lbnRhdGlvbiBmb3IgdGhpc1xuICogVmFsdWUgZS5nLjogXCIzLjk4LjRcIlxuICovXG5leHBvcnQgY29uc3QgTGFtZUVuY29kZXJWZXJzaW9uID0gbmV3IFRva2VuLlN0cmluZ1R5cGUoNiwgJ2FzY2lpJyk7XG4vKipcbiAqIEluZm8gVGFnXG4gKiBSZWY6IGh0dHA6Ly9nYWJyaWVsLm1wMy10ZWNoLm9yZy9tcDNpbmZvdGFnLmh0bWxcbiAqL1xuZXhwb3J0IGNvbnN0IFhpbmdIZWFkZXJGbGFncyA9IHtcbiAgICBsZW46IDQsXG4gICAgZ2V0OiAoYnVmLCBvZmYpID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGZyYW1lczogdXRpbC5pc0JpdFNldChidWYsIG9mZiwgMzEpLFxuICAgICAgICAgICAgYnl0ZXM6IHV0aWwuaXNCaXRTZXQoYnVmLCBvZmYsIDMwKSxcbiAgICAgICAgICAgIHRvYzogdXRpbC5pc0JpdFNldChidWYsIG9mZiwgMjkpLFxuICAgICAgICAgICAgdmJyU2NhbGU6IHV0aWwuaXNCaXRTZXQoYnVmLCBvZmYsIDI4KVxuICAgICAgICB9O1xuICAgIH1cbn07XG4vLyAvKipcbi8vICAqIFhJTkcgSGVhZGVyIFRhZ1xuLy8gICogUmVmOiBodHRwOi8vZ2FicmllbC5tcDMtdGVjaC5vcmcvbXAzaW5mb3RhZy5odG1sXG4vLyAgKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZWFkWGluZ0hlYWRlcih0b2tlbml6ZXIpIHtcbiAgICBjb25zdCBmbGFncyA9IGF3YWl0IHRva2VuaXplci5yZWFkVG9rZW4oWGluZ0hlYWRlckZsYWdzKTtcbiAgICBjb25zdCB4aW5nSW5mb1RhZyA9IHsgbnVtRnJhbWVzOiBudWxsLCBzdHJlYW1TaXplOiBudWxsLCB2YnJTY2FsZTogbnVsbCB9O1xuICAgIGlmIChmbGFncy5mcmFtZXMpIHtcbiAgICAgICAgeGluZ0luZm9UYWcubnVtRnJhbWVzID0gYXdhaXQgdG9rZW5pemVyLnJlYWRUb2tlbihUb2tlbi5VSU5UMzJfQkUpO1xuICAgIH1cbiAgICBpZiAoZmxhZ3MuYnl0ZXMpIHtcbiAgICAgICAgeGluZ0luZm9UYWcuc3RyZWFtU2l6ZSA9IGF3YWl0IHRva2VuaXplci5yZWFkVG9rZW4oVG9rZW4uVUlOVDMyX0JFKTtcbiAgICB9XG4gICAgaWYgKGZsYWdzLnRvYykge1xuICAgICAgICB4aW5nSW5mb1RhZy50b2MgPSBuZXcgVWludDhBcnJheSgxMDApO1xuICAgICAgICBhd2FpdCB0b2tlbml6ZXIucmVhZEJ1ZmZlcih4aW5nSW5mb1RhZy50b2MpO1xuICAgIH1cbiAgICBpZiAoZmxhZ3MudmJyU2NhbGUpIHtcbiAgICAgICAgeGluZ0luZm9UYWcudmJyU2NhbGUgPSBhd2FpdCB0b2tlbml6ZXIucmVhZFRva2VuKFRva2VuLlVJTlQzMl9CRSk7XG4gICAgfVxuICAgIGNvbnN0IGxhbWVUYWcgPSBhd2FpdCB0b2tlbml6ZXIucGVla1Rva2VuKG5ldyBUb2tlbi5TdHJpbmdUeXBlKDQsICdhc2NpaScpKTtcbiAgICBpZiAobGFtZVRhZyA9PT0gJ0xBTUUnKSB7XG4gICAgICAgIGF3YWl0IHRva2VuaXplci5pZ25vcmUoNCk7XG4gICAgICAgIHhpbmdJbmZvVGFnLmxhbWUgPSB7XG4gICAgICAgICAgICB2ZXJzaW9uOiBhd2FpdCB0b2tlbml6ZXIucmVhZFRva2VuKG5ldyBUb2tlbi5TdHJpbmdUeXBlKDUsICdhc2NpaScpKVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBtYXRjaCA9IHhpbmdJbmZvVGFnLmxhbWUudmVyc2lvbi5tYXRjaCgvXFxkKy5cXGQrL2cpO1xuICAgICAgICBpZiAobWF0Y2ggIT09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnN0IG1ham9yTWlub3JWZXJzaW9uID0gbWF0Y2hbMF07IC8vIGUuZy4gMy45N1xuICAgICAgICAgICAgY29uc3QgdmVyc2lvbiA9IG1ham9yTWlub3JWZXJzaW9uLnNwbGl0KCcuJykubWFwKG4gPT4gTnVtYmVyLnBhcnNlSW50KG4sIDEwKSk7XG4gICAgICAgICAgICBpZiAodmVyc2lvblswXSA+PSAzICYmIHZlcnNpb25bMV0gPj0gOTApIHtcbiAgICAgICAgICAgICAgICB4aW5nSW5mb1RhZy5sYW1lLmV4dGVuZGVkID0gYXdhaXQgdG9rZW5pemVyLnJlYWRUb2tlbihFeHRlbmRlZExhbWVIZWFkZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB4aW5nSW5mb1RhZztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVhpbmdUYWcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/mpeg/XingTag.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/musepack/MusepackConentError.js":
/*!*************************************************************************!*\
  !*** ./node_modules/music-metadata/lib/musepack/MusepackConentError.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MusepackContentError: () => (/* binding */ MusepackContentError)\n/* harmony export */ });\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\nclass MusepackContentError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_0__.makeUnexpectedFileContentError)('Musepack') {\n}\n//# sourceMappingURL=MusepackConentError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL211c2VwYWNrL011c2VwYWNrQ29uZW50RXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0U7QUFDM0QsbUNBQW1DLDhFQUE4QjtBQUN4RTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9tdXNlcGFjay9NdXNlcGFja0NvbmVudEVycm9yLmpzPzdiNTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWFrZVVuZXhwZWN0ZWRGaWxlQ29udGVudEVycm9yIH0gZnJvbSAnLi4vUGFyc2VFcnJvci5qcyc7XG5leHBvcnQgY2xhc3MgTXVzZXBhY2tDb250ZW50RXJyb3IgZXh0ZW5kcyBtYWtlVW5leHBlY3RlZEZpbGVDb250ZW50RXJyb3IoJ011c2VwYWNrJykge1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TXVzZXBhY2tDb25lbnRFcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/musepack/MusepackConentError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/musepack/MusepackLoader.js":
/*!********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/musepack/MusepackLoader.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   musepackParserLoader: () => (/* binding */ musepackParserLoader)\n/* harmony export */ });\nconst musepackParserLoader = {\n    parserType: 'musepack',\n    extensions: ['.mpc'],\n    async load(metadata, tokenizer, options) {\n        return new (await __webpack_require__.e(/*! import() */ \"vendor-chunks/music-metadata\").then(__webpack_require__.bind(__webpack_require__, /*! ./MusepackParser.js */ \"(rsc)/./node_modules/music-metadata/lib/musepack/MusepackParser.js\"))).MusepackParser(metadata, tokenizer, options);\n    }\n};\n//# sourceMappingURL=MusepackLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL211c2VwYWNrL011c2VwYWNrTG9hZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiwwTkFBNkI7QUFDdkQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9tdXNlcGFjay9NdXNlcGFja0xvYWRlci5qcz9hOTFmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBtdXNlcGFja1BhcnNlckxvYWRlciA9IHtcbiAgICBwYXJzZXJUeXBlOiAnbXVzZXBhY2snLFxuICAgIGV4dGVuc2lvbnM6IFsnLm1wYyddLFxuICAgIGFzeW5jIGxvYWQobWV0YWRhdGEsIHRva2VuaXplciwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IChhd2FpdCBpbXBvcnQoJy4vTXVzZXBhY2tQYXJzZXIuanMnKSkuTXVzZXBhY2tQYXJzZXIobWV0YWRhdGEsIHRva2VuaXplciwgb3B0aW9ucyk7XG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU11c2VwYWNrTG9hZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/musepack/MusepackLoader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/musepack/MusepackParser.js":
/*!********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/musepack/MusepackParser.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MusepackParser: () => (/* binding */ MusepackParser)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _id3v2_AbstractID3Parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../id3v2/AbstractID3Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/AbstractID3Parser.js\");\n/* harmony import */ var _sv8_MpcSv8Parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sv8/MpcSv8Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/musepack/sv8/MpcSv8Parser.js\");\n/* harmony import */ var _sv7_MpcSv7Parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sv7/MpcSv7Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/musepack/sv7/MpcSv7Parser.js\");\n/* harmony import */ var _MusepackConentError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MusepackConentError.js */ \"(rsc)/./node_modules/music-metadata/lib/musepack/MusepackConentError.js\");\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('music-metadata:parser:musepack');\nclass MusepackParser extends _id3v2_AbstractID3Parser_js__WEBPACK_IMPORTED_MODULE_2__.AbstractID3Parser {\n    async postId3v2Parse() {\n        const signature = await this.tokenizer.peekToken(new token_types__WEBPACK_IMPORTED_MODULE_1__.StringType(3, 'latin1'));\n        let mpcParser;\n        switch (signature) {\n            case 'MP+': {\n                debug('Stream-version 7');\n                mpcParser = new _sv7_MpcSv7Parser_js__WEBPACK_IMPORTED_MODULE_4__.MpcSv7Parser(this.metadata, this.tokenizer, this.options);\n                break;\n            }\n            case 'MPC': {\n                debug('Stream-version 8');\n                mpcParser = new _sv8_MpcSv8Parser_js__WEBPACK_IMPORTED_MODULE_3__.MpcSv8Parser(this.metadata, this.tokenizer, this.options);\n                break;\n            }\n            default: {\n                throw new _MusepackConentError_js__WEBPACK_IMPORTED_MODULE_5__.MusepackContentError('Invalid signature prefix');\n            }\n        }\n        return mpcParser.parse();\n    }\n}\n//# sourceMappingURL=MusepackParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL211c2VwYWNrL011c2VwYWNrUGFyc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBOEI7QUFDTztBQUM2QjtBQUNiO0FBQ0E7QUFDVztBQUNoRSxjQUFjLGtDQUFTO0FBQ2hCLDZCQUE2QiwwRUFBaUI7QUFDckQ7QUFDQSw2REFBNkQsbURBQWdCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLDhEQUFZO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLDhEQUFZO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQix5RUFBb0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9tdXNlcGFjay9NdXNlcGFja1BhcnNlci5qcz82MGU1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpbml0RGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0ICogYXMgVG9rZW4gZnJvbSAndG9rZW4tdHlwZXMnO1xuaW1wb3J0IHsgQWJzdHJhY3RJRDNQYXJzZXIgfSBmcm9tICcuLi9pZDN2Mi9BYnN0cmFjdElEM1BhcnNlci5qcyc7XG5pbXBvcnQgeyBNcGNTdjhQYXJzZXIgfSBmcm9tICcuL3N2OC9NcGNTdjhQYXJzZXIuanMnO1xuaW1wb3J0IHsgTXBjU3Y3UGFyc2VyIH0gZnJvbSAnLi9zdjcvTXBjU3Y3UGFyc2VyLmpzJztcbmltcG9ydCB7IE11c2VwYWNrQ29udGVudEVycm9yIH0gZnJvbSAnLi9NdXNlcGFja0NvbmVudEVycm9yLmpzJztcbmNvbnN0IGRlYnVnID0gaW5pdERlYnVnKCdtdXNpYy1tZXRhZGF0YTpwYXJzZXI6bXVzZXBhY2snKTtcbmV4cG9ydCBjbGFzcyBNdXNlcGFja1BhcnNlciBleHRlbmRzIEFic3RyYWN0SUQzUGFyc2VyIHtcbiAgICBhc3luYyBwb3N0SWQzdjJQYXJzZSgpIHtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgdGhpcy50b2tlbml6ZXIucGVla1Rva2VuKG5ldyBUb2tlbi5TdHJpbmdUeXBlKDMsICdsYXRpbjEnKSk7XG4gICAgICAgIGxldCBtcGNQYXJzZXI7XG4gICAgICAgIHN3aXRjaCAoc2lnbmF0dXJlKSB7XG4gICAgICAgICAgICBjYXNlICdNUCsnOiB7XG4gICAgICAgICAgICAgICAgZGVidWcoJ1N0cmVhbS12ZXJzaW9uIDcnKTtcbiAgICAgICAgICAgICAgICBtcGNQYXJzZXIgPSBuZXcgTXBjU3Y3UGFyc2VyKHRoaXMubWV0YWRhdGEsIHRoaXMudG9rZW5pemVyLCB0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FzZSAnTVBDJzoge1xuICAgICAgICAgICAgICAgIGRlYnVnKCdTdHJlYW0tdmVyc2lvbiA4Jyk7XG4gICAgICAgICAgICAgICAgbXBjUGFyc2VyID0gbmV3IE1wY1N2OFBhcnNlcih0aGlzLm1ldGFkYXRhLCB0aGlzLnRva2VuaXplciwgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgTXVzZXBhY2tDb250ZW50RXJyb3IoJ0ludmFsaWQgc2lnbmF0dXJlIHByZWZpeCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtcGNQYXJzZXIucGFyc2UoKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NdXNlcGFja1BhcnNlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/musepack/MusepackParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/musepack/sv7/BitReader.js":
/*!*******************************************************************!*\
  !*** ./node_modules/music-metadata/lib/musepack/sv7/BitReader.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BitReader: () => (/* binding */ BitReader)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n\nclass BitReader {\n    constructor(tokenizer) {\n        this.tokenizer = tokenizer;\n        this.pos = 0;\n        this.dword = null;\n    }\n    /**\n     *\n     * @param bits 1..30 bits\n     */\n    async read(bits) {\n        while (this.dword === null) {\n            this.dword = await this.tokenizer.readToken(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE);\n        }\n        let out = this.dword;\n        this.pos += bits;\n        if (this.pos < 32) {\n            out >>>= (32 - this.pos);\n            return out & ((1 << bits) - 1);\n        }\n        this.pos -= 32;\n        if (this.pos === 0) {\n            this.dword = null;\n            return out & ((1 << bits) - 1);\n        }\n        this.dword = await this.tokenizer.readToken(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE);\n        if (this.pos) {\n            out <<= this.pos;\n            out |= this.dword >>> (32 - this.pos);\n        }\n        return out & ((1 << bits) - 1);\n    }\n    async ignore(bits) {\n        if (this.pos > 0) {\n            const remaining = 32 - this.pos;\n            this.dword = null;\n            bits -= remaining;\n            this.pos = 0;\n        }\n        const remainder = bits % 32;\n        const numOfWords = (bits - remainder) / 32;\n        await this.tokenizer.ignore(numOfWords * 4);\n        return this.read(remainder);\n    }\n}\n//# sourceMappingURL=BitReader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL211c2VwYWNrL3N2Ny9CaXRSZWFkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUM7QUFDOUI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELGtEQUFlO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxrREFBZTtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9tdXNlcGFjay9zdjcvQml0UmVhZGVyLmpzP2Y2NDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVG9rZW4gZnJvbSAndG9rZW4tdHlwZXMnO1xuZXhwb3J0IGNsYXNzIEJpdFJlYWRlciB7XG4gICAgY29uc3RydWN0b3IodG9rZW5pemVyKSB7XG4gICAgICAgIHRoaXMudG9rZW5pemVyID0gdG9rZW5pemVyO1xuICAgICAgICB0aGlzLnBvcyA9IDA7XG4gICAgICAgIHRoaXMuZHdvcmQgPSBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBiaXRzIDEuLjMwIGJpdHNcbiAgICAgKi9cbiAgICBhc3luYyByZWFkKGJpdHMpIHtcbiAgICAgICAgd2hpbGUgKHRoaXMuZHdvcmQgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuZHdvcmQgPSBhd2FpdCB0aGlzLnRva2VuaXplci5yZWFkVG9rZW4oVG9rZW4uVUlOVDMyX0xFKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgb3V0ID0gdGhpcy5kd29yZDtcbiAgICAgICAgdGhpcy5wb3MgKz0gYml0cztcbiAgICAgICAgaWYgKHRoaXMucG9zIDwgMzIpIHtcbiAgICAgICAgICAgIG91dCA+Pj49ICgzMiAtIHRoaXMucG9zKTtcbiAgICAgICAgICAgIHJldHVybiBvdXQgJiAoKDEgPDwgYml0cykgLSAxKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBvcyAtPSAzMjtcbiAgICAgICAgaWYgKHRoaXMucG9zID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmR3b3JkID0gbnVsbDtcbiAgICAgICAgICAgIHJldHVybiBvdXQgJiAoKDEgPDwgYml0cykgLSAxKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmR3b3JkID0gYXdhaXQgdGhpcy50b2tlbml6ZXIucmVhZFRva2VuKFRva2VuLlVJTlQzMl9MRSk7XG4gICAgICAgIGlmICh0aGlzLnBvcykge1xuICAgICAgICAgICAgb3V0IDw8PSB0aGlzLnBvcztcbiAgICAgICAgICAgIG91dCB8PSB0aGlzLmR3b3JkID4+PiAoMzIgLSB0aGlzLnBvcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG91dCAmICgoMSA8PCBiaXRzKSAtIDEpO1xuICAgIH1cbiAgICBhc3luYyBpZ25vcmUoYml0cykge1xuICAgICAgICBpZiAodGhpcy5wb3MgPiAwKSB7XG4gICAgICAgICAgICBjb25zdCByZW1haW5pbmcgPSAzMiAtIHRoaXMucG9zO1xuICAgICAgICAgICAgdGhpcy5kd29yZCA9IG51bGw7XG4gICAgICAgICAgICBiaXRzIC09IHJlbWFpbmluZztcbiAgICAgICAgICAgIHRoaXMucG9zID0gMDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZW1haW5kZXIgPSBiaXRzICUgMzI7XG4gICAgICAgIGNvbnN0IG51bU9mV29yZHMgPSAoYml0cyAtIHJlbWFpbmRlcikgLyAzMjtcbiAgICAgICAgYXdhaXQgdGhpcy50b2tlbml6ZXIuaWdub3JlKG51bU9mV29yZHMgKiA0KTtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVhZChyZW1haW5kZXIpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJpdFJlYWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/musepack/sv7/BitReader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/musepack/sv7/MpcSv7Parser.js":
/*!**********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/musepack/sv7/MpcSv7Parser.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MpcSv7Parser: () => (/* binding */ MpcSv7Parser)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/BasicParser.js */ \"(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js\");\n/* harmony import */ var _apev2_APEv2Parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../apev2/APEv2Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/apev2/APEv2Parser.js\");\n/* harmony import */ var _BitReader_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BitReader.js */ \"(rsc)/./node_modules/music-metadata/lib/musepack/sv7/BitReader.js\");\n/* harmony import */ var _StreamVersion7_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./StreamVersion7.js */ \"(rsc)/./node_modules/music-metadata/lib/musepack/sv7/StreamVersion7.js\");\n/* harmony import */ var _MusepackConentError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../MusepackConentError.js */ \"(rsc)/./node_modules/music-metadata/lib/musepack/MusepackConentError.js\");\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('music-metadata:parser:musepack');\nclass MpcSv7Parser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_1__.BasicParser {\n    constructor() {\n        super(...arguments);\n        this.bitreader = null;\n        this.audioLength = 0;\n        this.duration = null;\n    }\n    async parse() {\n        const header = await this.tokenizer.readToken(_StreamVersion7_js__WEBPACK_IMPORTED_MODULE_4__.Header);\n        if (header.signature !== 'MP+')\n            throw new _MusepackConentError_js__WEBPACK_IMPORTED_MODULE_5__.MusepackContentError('Unexpected magic number');\n        debug(`stream-version=${header.streamMajorVersion}.${header.streamMinorVersion}`);\n        this.metadata.setFormat('container', 'Musepack, SV7');\n        this.metadata.setFormat('sampleRate', header.sampleFrequency);\n        const numberOfSamples = 1152 * (header.frameCount - 1) + header.lastFrameLength;\n        this.metadata.setFormat('numberOfSamples', numberOfSamples);\n        this.duration = numberOfSamples / header.sampleFrequency;\n        this.metadata.setFormat('duration', this.duration);\n        this.bitreader = new _BitReader_js__WEBPACK_IMPORTED_MODULE_3__.BitReader(this.tokenizer);\n        this.metadata.setFormat('numberOfChannels', header.midSideStereo || header.intensityStereo ? 2 : 1);\n        const version = await this.bitreader.read(8);\n        this.metadata.setFormat('codec', (version / 100).toFixed(2));\n        await this.skipAudioData(header.frameCount);\n        debug(`End of audio stream, switching to APEv2, offset=${this.tokenizer.position}`);\n        return _apev2_APEv2Parser_js__WEBPACK_IMPORTED_MODULE_2__.APEv2Parser.tryParseApeHeader(this.metadata, this.tokenizer, this.options);\n    }\n    async skipAudioData(frameCount) {\n        while (frameCount-- > 0) {\n            const frameLength = await this.bitreader.read(20);\n            this.audioLength += 20 + frameLength;\n            await this.bitreader.ignore(frameLength);\n        }\n        // last frame\n        const lastFrameLength = await this.bitreader.read(11);\n        this.audioLength += lastFrameLength;\n        if (this.duration !== null) {\n            this.metadata.setFormat('bitrate', this.audioLength / this.duration);\n        }\n    }\n}\n//# sourceMappingURL=MpcSv7Parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL211c2VwYWNrL3N2Ny9NcGNTdjdQYXJzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE4QjtBQUM0QjtBQUNEO0FBQ2Q7QUFDQTtBQUNzQjtBQUNqRSxjQUFjLGtDQUFTO0FBQ2hCLDJCQUEyQiwrREFBVztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxzREFBVTtBQUNoRTtBQUNBLHNCQUFzQix5RUFBb0I7QUFDMUMsZ0NBQWdDLDBCQUEwQixHQUFHLDBCQUEwQjtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsb0RBQVM7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsd0JBQXdCO0FBQ3pGLGVBQWUsOERBQVc7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL211c2VwYWNrL3N2Ny9NcGNTdjdQYXJzZXIuanM/NmEyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaW5pdERlYnVnIGZyb20gJ2RlYnVnJztcbmltcG9ydCB7IEJhc2ljUGFyc2VyIH0gZnJvbSAnLi4vLi4vY29tbW9uL0Jhc2ljUGFyc2VyLmpzJztcbmltcG9ydCB7IEFQRXYyUGFyc2VyIH0gZnJvbSAnLi4vLi4vYXBldjIvQVBFdjJQYXJzZXIuanMnO1xuaW1wb3J0IHsgQml0UmVhZGVyIH0gZnJvbSAnLi9CaXRSZWFkZXIuanMnO1xuaW1wb3J0ICogYXMgU1Y3IGZyb20gJy4vU3RyZWFtVmVyc2lvbjcuanMnO1xuaW1wb3J0IHsgTXVzZXBhY2tDb250ZW50RXJyb3IgfSBmcm9tICcuLi9NdXNlcGFja0NvbmVudEVycm9yLmpzJztcbmNvbnN0IGRlYnVnID0gaW5pdERlYnVnKCdtdXNpYy1tZXRhZGF0YTpwYXJzZXI6bXVzZXBhY2snKTtcbmV4cG9ydCBjbGFzcyBNcGNTdjdQYXJzZXIgZXh0ZW5kcyBCYXNpY1BhcnNlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuYml0cmVhZGVyID0gbnVsbDtcbiAgICAgICAgdGhpcy5hdWRpb0xlbmd0aCA9IDA7XG4gICAgICAgIHRoaXMuZHVyYXRpb24gPSBudWxsO1xuICAgIH1cbiAgICBhc3luYyBwYXJzZSgpIHtcbiAgICAgICAgY29uc3QgaGVhZGVyID0gYXdhaXQgdGhpcy50b2tlbml6ZXIucmVhZFRva2VuKFNWNy5IZWFkZXIpO1xuICAgICAgICBpZiAoaGVhZGVyLnNpZ25hdHVyZSAhPT0gJ01QKycpXG4gICAgICAgICAgICB0aHJvdyBuZXcgTXVzZXBhY2tDb250ZW50RXJyb3IoJ1VuZXhwZWN0ZWQgbWFnaWMgbnVtYmVyJyk7XG4gICAgICAgIGRlYnVnKGBzdHJlYW0tdmVyc2lvbj0ke2hlYWRlci5zdHJlYW1NYWpvclZlcnNpb259LiR7aGVhZGVyLnN0cmVhbU1pbm9yVmVyc2lvbn1gKTtcbiAgICAgICAgdGhpcy5tZXRhZGF0YS5zZXRGb3JtYXQoJ2NvbnRhaW5lcicsICdNdXNlcGFjaywgU1Y3Jyk7XG4gICAgICAgIHRoaXMubWV0YWRhdGEuc2V0Rm9ybWF0KCdzYW1wbGVSYXRlJywgaGVhZGVyLnNhbXBsZUZyZXF1ZW5jeSk7XG4gICAgICAgIGNvbnN0IG51bWJlck9mU2FtcGxlcyA9IDExNTIgKiAoaGVhZGVyLmZyYW1lQ291bnQgLSAxKSArIGhlYWRlci5sYXN0RnJhbWVMZW5ndGg7XG4gICAgICAgIHRoaXMubWV0YWRhdGEuc2V0Rm9ybWF0KCdudW1iZXJPZlNhbXBsZXMnLCBudW1iZXJPZlNhbXBsZXMpO1xuICAgICAgICB0aGlzLmR1cmF0aW9uID0gbnVtYmVyT2ZTYW1wbGVzIC8gaGVhZGVyLnNhbXBsZUZyZXF1ZW5jeTtcbiAgICAgICAgdGhpcy5tZXRhZGF0YS5zZXRGb3JtYXQoJ2R1cmF0aW9uJywgdGhpcy5kdXJhdGlvbik7XG4gICAgICAgIHRoaXMuYml0cmVhZGVyID0gbmV3IEJpdFJlYWRlcih0aGlzLnRva2VuaXplcik7XG4gICAgICAgIHRoaXMubWV0YWRhdGEuc2V0Rm9ybWF0KCdudW1iZXJPZkNoYW5uZWxzJywgaGVhZGVyLm1pZFNpZGVTdGVyZW8gfHwgaGVhZGVyLmludGVuc2l0eVN0ZXJlbyA/IDIgOiAxKTtcbiAgICAgICAgY29uc3QgdmVyc2lvbiA9IGF3YWl0IHRoaXMuYml0cmVhZGVyLnJlYWQoOCk7XG4gICAgICAgIHRoaXMubWV0YWRhdGEuc2V0Rm9ybWF0KCdjb2RlYycsICh2ZXJzaW9uIC8gMTAwKS50b0ZpeGVkKDIpKTtcbiAgICAgICAgYXdhaXQgdGhpcy5za2lwQXVkaW9EYXRhKGhlYWRlci5mcmFtZUNvdW50KTtcbiAgICAgICAgZGVidWcoYEVuZCBvZiBhdWRpbyBzdHJlYW0sIHN3aXRjaGluZyB0byBBUEV2Miwgb2Zmc2V0PSR7dGhpcy50b2tlbml6ZXIucG9zaXRpb259YCk7XG4gICAgICAgIHJldHVybiBBUEV2MlBhcnNlci50cnlQYXJzZUFwZUhlYWRlcih0aGlzLm1ldGFkYXRhLCB0aGlzLnRva2VuaXplciwgdGhpcy5vcHRpb25zKTtcbiAgICB9XG4gICAgYXN5bmMgc2tpcEF1ZGlvRGF0YShmcmFtZUNvdW50KSB7XG4gICAgICAgIHdoaWxlIChmcmFtZUNvdW50LS0gPiAwKSB7XG4gICAgICAgICAgICBjb25zdCBmcmFtZUxlbmd0aCA9IGF3YWl0IHRoaXMuYml0cmVhZGVyLnJlYWQoMjApO1xuICAgICAgICAgICAgdGhpcy5hdWRpb0xlbmd0aCArPSAyMCArIGZyYW1lTGVuZ3RoO1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5iaXRyZWFkZXIuaWdub3JlKGZyYW1lTGVuZ3RoKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBsYXN0IGZyYW1lXG4gICAgICAgIGNvbnN0IGxhc3RGcmFtZUxlbmd0aCA9IGF3YWl0IHRoaXMuYml0cmVhZGVyLnJlYWQoMTEpO1xuICAgICAgICB0aGlzLmF1ZGlvTGVuZ3RoICs9IGxhc3RGcmFtZUxlbmd0aDtcbiAgICAgICAgaWYgKHRoaXMuZHVyYXRpb24gIT09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMubWV0YWRhdGEuc2V0Rm9ybWF0KCdiaXRyYXRlJywgdGhpcy5hdWRpb0xlbmd0aCAvIHRoaXMuZHVyYXRpb24pO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TXBjU3Y3UGFyc2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/musepack/sv7/MpcSv7Parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/musepack/sv7/StreamVersion7.js":
/*!************************************************************************!*\
  !*** ./node_modules/music-metadata/lib/musepack/sv7/StreamVersion7.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Header: () => (/* binding */ Header)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n\n\n/**\n * BASIC STRUCTURE\n */\nconst Header = {\n    len: 6 * 4,\n    get: (buf, off) => {\n        const header = {\n            // word 0\n            signature: new TextDecoder('latin1').decode(buf.subarray(off, off + 3)),\n            // versionIndex number * 1000 (3.81 = 3810) (remember that 4-byte alignment causes this to take 4-bytes)\n            streamMinorVersion: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBitAllignedNumber(buf, off + 3, 0, 4),\n            streamMajorVersion: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBitAllignedNumber(buf, off + 3, 4, 4),\n            // word 1\n            frameCount: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 4),\n            // word 2\n            maxLevel: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off + 8),\n            sampleFrequency: [44100, 48000, 37800, 32000][_common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBitAllignedNumber(buf, off + 10, 0, 2)],\n            link: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBitAllignedNumber(buf, off + 10, 2, 2),\n            profile: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBitAllignedNumber(buf, off + 10, 4, 4),\n            maxBand: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBitAllignedNumber(buf, off + 11, 0, 6),\n            intensityStereo: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.isBitSet(buf, off + 11, 6),\n            midSideStereo: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.isBitSet(buf, off + 11, 7),\n            // word 3\n            titlePeak: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off + 12),\n            titleGain: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off + 14),\n            // word 4\n            albumPeak: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off + 16),\n            albumGain: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off + 18),\n            // word\n            lastFrameLength: (token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 20) >>> 20) & 0x7FF,\n            trueGapless: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.isBitSet(buf, off + 23, 0)\n        };\n        header.lastFrameLength = header.trueGapless ? (token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, 20) >>> 20) & 0x7FF : 0;\n        return header;\n    }\n};\n//# sourceMappingURL=StreamVersion7.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL211c2VwYWNrL3N2Ny9TdHJlYW1WZXJzaW9uNy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDUTtBQUM3QztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxpRUFBeUI7QUFDekQsZ0NBQWdDLGlFQUF5QjtBQUN6RDtBQUNBLHdCQUF3QixrREFBZTtBQUN2QztBQUNBLHNCQUFzQixrREFBZTtBQUNyQywwREFBMEQsaUVBQXlCO0FBQ25GLGtCQUFrQixpRUFBeUI7QUFDM0MscUJBQXFCLGlFQUF5QjtBQUM5QyxxQkFBcUIsaUVBQXlCO0FBQzlDLDZCQUE2QixxREFBYTtBQUMxQywyQkFBMkIscURBQWE7QUFDeEM7QUFDQSx1QkFBdUIsa0RBQWU7QUFDdEMsdUJBQXVCLGtEQUFlO0FBQ3RDO0FBQ0EsdUJBQXVCLGtEQUFlO0FBQ3RDLHVCQUF1QixrREFBZTtBQUN0QztBQUNBLDhCQUE4QixrREFBZTtBQUM3Qyx5QkFBeUIscURBQWE7QUFDdEM7QUFDQSx1REFBdUQsa0RBQWU7QUFDdEU7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL211c2VwYWNrL3N2Ny9TdHJlYW1WZXJzaW9uNy5qcz8wYzZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFRva2VuIGZyb20gJ3Rva2VuLXR5cGVzJztcbmltcG9ydCAqIGFzIHV0aWwgZnJvbSAnLi4vLi4vY29tbW9uL1V0aWwuanMnO1xuLyoqXG4gKiBCQVNJQyBTVFJVQ1RVUkVcbiAqL1xuZXhwb3J0IGNvbnN0IEhlYWRlciA9IHtcbiAgICBsZW46IDYgKiA0LFxuICAgIGdldDogKGJ1Ziwgb2ZmKSA9PiB7XG4gICAgICAgIGNvbnN0IGhlYWRlciA9IHtcbiAgICAgICAgICAgIC8vIHdvcmQgMFxuICAgICAgICAgICAgc2lnbmF0dXJlOiBuZXcgVGV4dERlY29kZXIoJ2xhdGluMScpLmRlY29kZShidWYuc3ViYXJyYXkob2ZmLCBvZmYgKyAzKSksXG4gICAgICAgICAgICAvLyB2ZXJzaW9uSW5kZXggbnVtYmVyICogMTAwMCAoMy44MSA9IDM4MTApIChyZW1lbWJlciB0aGF0IDQtYnl0ZSBhbGlnbm1lbnQgY2F1c2VzIHRoaXMgdG8gdGFrZSA0LWJ5dGVzKVxuICAgICAgICAgICAgc3RyZWFtTWlub3JWZXJzaW9uOiB1dGlsLmdldEJpdEFsbGlnbmVkTnVtYmVyKGJ1Ziwgb2ZmICsgMywgMCwgNCksXG4gICAgICAgICAgICBzdHJlYW1NYWpvclZlcnNpb246IHV0aWwuZ2V0Qml0QWxsaWduZWROdW1iZXIoYnVmLCBvZmYgKyAzLCA0LCA0KSxcbiAgICAgICAgICAgIC8vIHdvcmQgMVxuICAgICAgICAgICAgZnJhbWVDb3VudDogVG9rZW4uVUlOVDMyX0xFLmdldChidWYsIG9mZiArIDQpLFxuICAgICAgICAgICAgLy8gd29yZCAyXG4gICAgICAgICAgICBtYXhMZXZlbDogVG9rZW4uVUlOVDE2X0xFLmdldChidWYsIG9mZiArIDgpLFxuICAgICAgICAgICAgc2FtcGxlRnJlcXVlbmN5OiBbNDQxMDAsIDQ4MDAwLCAzNzgwMCwgMzIwMDBdW3V0aWwuZ2V0Qml0QWxsaWduZWROdW1iZXIoYnVmLCBvZmYgKyAxMCwgMCwgMildLFxuICAgICAgICAgICAgbGluazogdXRpbC5nZXRCaXRBbGxpZ25lZE51bWJlcihidWYsIG9mZiArIDEwLCAyLCAyKSxcbiAgICAgICAgICAgIHByb2ZpbGU6IHV0aWwuZ2V0Qml0QWxsaWduZWROdW1iZXIoYnVmLCBvZmYgKyAxMCwgNCwgNCksXG4gICAgICAgICAgICBtYXhCYW5kOiB1dGlsLmdldEJpdEFsbGlnbmVkTnVtYmVyKGJ1Ziwgb2ZmICsgMTEsIDAsIDYpLFxuICAgICAgICAgICAgaW50ZW5zaXR5U3RlcmVvOiB1dGlsLmlzQml0U2V0KGJ1Ziwgb2ZmICsgMTEsIDYpLFxuICAgICAgICAgICAgbWlkU2lkZVN0ZXJlbzogdXRpbC5pc0JpdFNldChidWYsIG9mZiArIDExLCA3KSxcbiAgICAgICAgICAgIC8vIHdvcmQgM1xuICAgICAgICAgICAgdGl0bGVQZWFrOiBUb2tlbi5VSU5UMTZfTEUuZ2V0KGJ1Ziwgb2ZmICsgMTIpLFxuICAgICAgICAgICAgdGl0bGVHYWluOiBUb2tlbi5VSU5UMTZfTEUuZ2V0KGJ1Ziwgb2ZmICsgMTQpLFxuICAgICAgICAgICAgLy8gd29yZCA0XG4gICAgICAgICAgICBhbGJ1bVBlYWs6IFRva2VuLlVJTlQxNl9MRS5nZXQoYnVmLCBvZmYgKyAxNiksXG4gICAgICAgICAgICBhbGJ1bUdhaW46IFRva2VuLlVJTlQxNl9MRS5nZXQoYnVmLCBvZmYgKyAxOCksXG4gICAgICAgICAgICAvLyB3b3JkXG4gICAgICAgICAgICBsYXN0RnJhbWVMZW5ndGg6IChUb2tlbi5VSU5UMzJfTEUuZ2V0KGJ1Ziwgb2ZmICsgMjApID4+PiAyMCkgJiAweDdGRixcbiAgICAgICAgICAgIHRydWVHYXBsZXNzOiB1dGlsLmlzQml0U2V0KGJ1Ziwgb2ZmICsgMjMsIDApXG4gICAgICAgIH07XG4gICAgICAgIGhlYWRlci5sYXN0RnJhbWVMZW5ndGggPSBoZWFkZXIudHJ1ZUdhcGxlc3MgPyAoVG9rZW4uVUlOVDMyX0xFLmdldChidWYsIDIwKSA+Pj4gMjApICYgMHg3RkYgOiAwO1xuICAgICAgICByZXR1cm4gaGVhZGVyO1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdHJlYW1WZXJzaW9uNy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/musepack/sv7/StreamVersion7.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/musepack/sv8/MpcSv8Parser.js":
/*!**********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/musepack/sv8/MpcSv8Parser.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MpcSv8Parser: () => (/* binding */ MpcSv8Parser)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/BasicParser.js */ \"(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js\");\n/* harmony import */ var _apev2_APEv2Parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../apev2/APEv2Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/apev2/APEv2Parser.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/FourCC.js */ \"(rsc)/./node_modules/music-metadata/lib/common/FourCC.js\");\n/* harmony import */ var _StreamVersion8_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./StreamVersion8.js */ \"(rsc)/./node_modules/music-metadata/lib/musepack/sv8/StreamVersion8.js\");\n/* harmony import */ var _MusepackConentError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../MusepackConentError.js */ \"(rsc)/./node_modules/music-metadata/lib/musepack/MusepackConentError.js\");\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('music-metadata:parser:musepack');\nclass MpcSv8Parser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_1__.BasicParser {\n    constructor() {\n        super(...arguments);\n        this.audioLength = 0;\n    }\n    async parse() {\n        const signature = await this.tokenizer.readToken(_common_FourCC_js__WEBPACK_IMPORTED_MODULE_3__.FourCcToken);\n        if (signature !== 'MPCK')\n            throw new _MusepackConentError_js__WEBPACK_IMPORTED_MODULE_5__.MusepackContentError('Invalid Magic number');\n        this.metadata.setFormat('container', 'Musepack, SV8');\n        return this.parsePacket();\n    }\n    async parsePacket() {\n        const sv8reader = new _StreamVersion8_js__WEBPACK_IMPORTED_MODULE_4__.StreamReader(this.tokenizer);\n        do {\n            const header = await sv8reader.readPacketHeader();\n            debug(`packet-header key=${header.key}, payloadLength=${header.payloadLength}`);\n            switch (header.key) {\n                case 'SH': { // Stream Header\n                    const sh = await sv8reader.readStreamHeader(header.payloadLength);\n                    this.metadata.setFormat('numberOfSamples', sh.sampleCount);\n                    this.metadata.setFormat('sampleRate', sh.sampleFrequency);\n                    this.metadata.setFormat('duration', sh.sampleCount / sh.sampleFrequency);\n                    this.metadata.setFormat('numberOfChannels', sh.channelCount);\n                    break;\n                }\n                case 'AP': // Audio Packet\n                    this.audioLength += header.payloadLength;\n                    await this.tokenizer.ignore(header.payloadLength);\n                    break;\n                case 'RG': // Replaygain\n                case 'EI': // Encoder Info\n                case 'SO': // Seek Table Offset\n                case 'ST': // Seek Table\n                case 'CT': // Chapter-Tag\n                    await this.tokenizer.ignore(header.payloadLength);\n                    break;\n                case 'SE': // Stream End\n                    if (this.metadata.format.duration) {\n                        this.metadata.setFormat('bitrate', this.audioLength * 8 / this.metadata.format.duration);\n                    }\n                    return _apev2_APEv2Parser_js__WEBPACK_IMPORTED_MODULE_2__.APEv2Parser.tryParseApeHeader(this.metadata, this.tokenizer, this.options);\n                default:\n                    throw new _MusepackConentError_js__WEBPACK_IMPORTED_MODULE_5__.MusepackContentError(`Unexpected header: ${header.key}`);\n            }\n        } while (true);\n    }\n}\n//# sourceMappingURL=MpcSv8Parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL211c2VwYWNrL3N2OC9NcGNTdjhQYXJzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE4QjtBQUM0QjtBQUNEO0FBQ0o7QUFDVjtBQUNzQjtBQUNqRSxjQUFjLGtDQUFTO0FBQ2hCLDJCQUEyQiwrREFBVztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELDBEQUFXO0FBQ3BFO0FBQ0Esc0JBQXNCLHlFQUFvQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qiw0REFBZ0I7QUFDOUM7QUFDQTtBQUNBLHVDQUF1QyxXQUFXLGtCQUFrQixxQkFBcUI7QUFDekY7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsOERBQVc7QUFDdEM7QUFDQSw4QkFBOEIseUVBQW9CLHVCQUF1QixXQUFXO0FBQ3BGO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvbXVzZXBhY2svc3Y4L01wY1N2OFBhcnNlci5qcz80MzhiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpbml0RGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IHsgQmFzaWNQYXJzZXIgfSBmcm9tICcuLi8uLi9jb21tb24vQmFzaWNQYXJzZXIuanMnO1xuaW1wb3J0IHsgQVBFdjJQYXJzZXIgfSBmcm9tICcuLi8uLi9hcGV2Mi9BUEV2MlBhcnNlci5qcyc7XG5pbXBvcnQgeyBGb3VyQ2NUb2tlbiB9IGZyb20gJy4uLy4uL2NvbW1vbi9Gb3VyQ0MuanMnO1xuaW1wb3J0ICogYXMgU1Y4IGZyb20gJy4vU3RyZWFtVmVyc2lvbjguanMnO1xuaW1wb3J0IHsgTXVzZXBhY2tDb250ZW50RXJyb3IgfSBmcm9tICcuLi9NdXNlcGFja0NvbmVudEVycm9yLmpzJztcbmNvbnN0IGRlYnVnID0gaW5pdERlYnVnKCdtdXNpYy1tZXRhZGF0YTpwYXJzZXI6bXVzZXBhY2snKTtcbmV4cG9ydCBjbGFzcyBNcGNTdjhQYXJzZXIgZXh0ZW5kcyBCYXNpY1BhcnNlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuYXVkaW9MZW5ndGggPSAwO1xuICAgIH1cbiAgICBhc3luYyBwYXJzZSgpIHtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgdGhpcy50b2tlbml6ZXIucmVhZFRva2VuKEZvdXJDY1Rva2VuKTtcbiAgICAgICAgaWYgKHNpZ25hdHVyZSAhPT0gJ01QQ0snKVxuICAgICAgICAgICAgdGhyb3cgbmV3IE11c2VwYWNrQ29udGVudEVycm9yKCdJbnZhbGlkIE1hZ2ljIG51bWJlcicpO1xuICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnY29udGFpbmVyJywgJ011c2VwYWNrLCBTVjgnKTtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyc2VQYWNrZXQoKTtcbiAgICB9XG4gICAgYXN5bmMgcGFyc2VQYWNrZXQoKSB7XG4gICAgICAgIGNvbnN0IHN2OHJlYWRlciA9IG5ldyBTVjguU3RyZWFtUmVhZGVyKHRoaXMudG9rZW5pemVyKTtcbiAgICAgICAgZG8ge1xuICAgICAgICAgICAgY29uc3QgaGVhZGVyID0gYXdhaXQgc3Y4cmVhZGVyLnJlYWRQYWNrZXRIZWFkZXIoKTtcbiAgICAgICAgICAgIGRlYnVnKGBwYWNrZXQtaGVhZGVyIGtleT0ke2hlYWRlci5rZXl9LCBwYXlsb2FkTGVuZ3RoPSR7aGVhZGVyLnBheWxvYWRMZW5ndGh9YCk7XG4gICAgICAgICAgICBzd2l0Y2ggKGhlYWRlci5rZXkpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdTSCc6IHsgLy8gU3RyZWFtIEhlYWRlclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBzaCA9IGF3YWl0IHN2OHJlYWRlci5yZWFkU3RyZWFtSGVhZGVyKGhlYWRlci5wYXlsb2FkTGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXRhZGF0YS5zZXRGb3JtYXQoJ251bWJlck9mU2FtcGxlcycsIHNoLnNhbXBsZUNvdW50KTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXRhZGF0YS5zZXRGb3JtYXQoJ3NhbXBsZVJhdGUnLCBzaC5zYW1wbGVGcmVxdWVuY3kpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnZHVyYXRpb24nLCBzaC5zYW1wbGVDb3VudCAvIHNoLnNhbXBsZUZyZXF1ZW5jeSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWV0YWRhdGEuc2V0Rm9ybWF0KCdudW1iZXJPZkNoYW5uZWxzJywgc2guY2hhbm5lbENvdW50KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ0FQJzogLy8gQXVkaW8gUGFja2V0XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYXVkaW9MZW5ndGggKz0gaGVhZGVyLnBheWxvYWRMZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMudG9rZW5pemVyLmlnbm9yZShoZWFkZXIucGF5bG9hZExlbmd0aCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ1JHJzogLy8gUmVwbGF5Z2FpblxuICAgICAgICAgICAgICAgIGNhc2UgJ0VJJzogLy8gRW5jb2RlciBJbmZvXG4gICAgICAgICAgICAgICAgY2FzZSAnU08nOiAvLyBTZWVrIFRhYmxlIE9mZnNldFxuICAgICAgICAgICAgICAgIGNhc2UgJ1NUJzogLy8gU2VlayBUYWJsZVxuICAgICAgICAgICAgICAgIGNhc2UgJ0NUJzogLy8gQ2hhcHRlci1UYWdcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy50b2tlbml6ZXIuaWdub3JlKGhlYWRlci5wYXlsb2FkTGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnU0UnOiAvLyBTdHJlYW0gRW5kXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm1ldGFkYXRhLmZvcm1hdC5kdXJhdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXRhZGF0YS5zZXRGb3JtYXQoJ2JpdHJhdGUnLCB0aGlzLmF1ZGlvTGVuZ3RoICogOCAvIHRoaXMubWV0YWRhdGEuZm9ybWF0LmR1cmF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gQVBFdjJQYXJzZXIudHJ5UGFyc2VBcGVIZWFkZXIodGhpcy5tZXRhZGF0YSwgdGhpcy50b2tlbml6ZXIsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IE11c2VwYWNrQ29udGVudEVycm9yKGBVbmV4cGVjdGVkIGhlYWRlcjogJHtoZWFkZXIua2V5fWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IHdoaWxlICh0cnVlKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NcGNTdjhQYXJzZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/musepack/sv8/MpcSv8Parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/musepack/sv8/StreamVersion8.js":
/*!************************************************************************!*\
  !*** ./node_modules/music-metadata/lib/musepack/sv8/StreamVersion8.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StreamReader: () => (/* binding */ StreamReader)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_1__('music-metadata:parser:musepack:sv8');\nconst PacketKey = new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(2, 'latin1');\n/**\n * Stream Header Packet part 1\n * Ref: http://trac.musepack.net/musepack/wiki/SV8Specification#StreamHeaderPacket\n */\nconst SH_part1 = {\n    len: 5,\n    get: (buf, off) => {\n        return {\n            crc: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off),\n            streamVersion: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Stream Header Packet part 3\n * Ref: http://trac.musepack.net/musepack/wiki/SV8Specification#StreamHeaderPacket\n */\nconst SH_part3 = {\n    len: 2,\n    get: (buf, off) => {\n        return {\n            sampleFrequency: [44100, 48000, 37800, 32000][_common_Util_js__WEBPACK_IMPORTED_MODULE_2__.getBitAllignedNumber(buf, off, 0, 3)],\n            maxUsedBands: _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.getBitAllignedNumber(buf, off, 3, 5),\n            channelCount: _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.getBitAllignedNumber(buf, off + 1, 0, 4) + 1,\n            msUsed: _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.isBitSet(buf, off + 1, 4),\n            audioBlockFrames: _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.getBitAllignedNumber(buf, off + 1, 5, 3)\n        };\n    }\n};\nclass StreamReader {\n    constructor(tokenizer) {\n        this.tokenizer = tokenizer;\n    }\n    async readPacketHeader() {\n        const key = await this.tokenizer.readToken(PacketKey);\n        const size = await this.readVariableSizeField();\n        return {\n            key,\n            payloadLength: size.value - 2 - size.len\n        };\n    }\n    async readStreamHeader(size) {\n        const streamHeader = {};\n        debug(`Reading SH at offset=${this.tokenizer.position}`);\n        const part1 = await this.tokenizer.readToken(SH_part1);\n        size -= SH_part1.len;\n        Object.assign(streamHeader, part1);\n        debug(`SH.streamVersion = ${part1.streamVersion}`);\n        const sampleCount = await this.readVariableSizeField();\n        size -= sampleCount.len;\n        streamHeader.sampleCount = sampleCount.value;\n        const bs = await this.readVariableSizeField();\n        size -= bs.len;\n        streamHeader.beginningOfSilence = bs.value;\n        const part3 = await this.tokenizer.readToken(SH_part3);\n        size -= SH_part3.len;\n        Object.assign(streamHeader, part3);\n        // assert.equal(size, 0);\n        await this.tokenizer.ignore(size);\n        return streamHeader;\n    }\n    async readVariableSizeField(len = 1, hb = 0) {\n        let n = await this.tokenizer.readNumber(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8);\n        if ((n & 0x80) === 0) {\n            return { len, value: hb + n };\n        }\n        n &= 0x7F;\n        n += hb;\n        return this.readVariableSizeField(len + 1, n << 7);\n    }\n}\n//# sourceMappingURL=StreamVersion8.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL211c2VwYWNrL3N2OC9TdHJlYW1WZXJzaW9uOC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXFDO0FBQ1A7QUFDZTtBQUM3QyxjQUFjLGtDQUFTO0FBQ3ZCLHNCQUFzQixtREFBZ0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixrREFBZTtBQUNoQywyQkFBMkIsOENBQVc7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxpRUFBeUI7QUFDbkYsMEJBQTBCLGlFQUF5QjtBQUNuRCwwQkFBMEIsaUVBQXlCO0FBQ25ELG9CQUFvQixxREFBYTtBQUNqQyw4QkFBOEIsaUVBQXlCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0Msd0JBQXdCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxvQkFBb0I7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCw4Q0FBVztBQUMzRDtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvbXVzZXBhY2svc3Y4L1N0cmVhbVZlcnNpb244LmpzP2EwZDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVG9rZW4gZnJvbSAndG9rZW4tdHlwZXMnO1xuaW1wb3J0IGluaXREZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5pbXBvcnQgKiBhcyB1dGlsIGZyb20gJy4uLy4uL2NvbW1vbi9VdGlsLmpzJztcbmNvbnN0IGRlYnVnID0gaW5pdERlYnVnKCdtdXNpYy1tZXRhZGF0YTpwYXJzZXI6bXVzZXBhY2s6c3Y4Jyk7XG5jb25zdCBQYWNrZXRLZXkgPSBuZXcgVG9rZW4uU3RyaW5nVHlwZSgyLCAnbGF0aW4xJyk7XG4vKipcbiAqIFN0cmVhbSBIZWFkZXIgUGFja2V0IHBhcnQgMVxuICogUmVmOiBodHRwOi8vdHJhYy5tdXNlcGFjay5uZXQvbXVzZXBhY2svd2lraS9TVjhTcGVjaWZpY2F0aW9uI1N0cmVhbUhlYWRlclBhY2tldFxuICovXG5jb25zdCBTSF9wYXJ0MSA9IHtcbiAgICBsZW46IDUsXG4gICAgZ2V0OiAoYnVmLCBvZmYpID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNyYzogVG9rZW4uVUlOVDMyX0xFLmdldChidWYsIG9mZiksXG4gICAgICAgICAgICBzdHJlYW1WZXJzaW9uOiBUb2tlbi5VSU5UOC5nZXQoYnVmLCBvZmYgKyA0KVxuICAgICAgICB9O1xuICAgIH1cbn07XG4vKipcbiAqIFN0cmVhbSBIZWFkZXIgUGFja2V0IHBhcnQgM1xuICogUmVmOiBodHRwOi8vdHJhYy5tdXNlcGFjay5uZXQvbXVzZXBhY2svd2lraS9TVjhTcGVjaWZpY2F0aW9uI1N0cmVhbUhlYWRlclBhY2tldFxuICovXG5jb25zdCBTSF9wYXJ0MyA9IHtcbiAgICBsZW46IDIsXG4gICAgZ2V0OiAoYnVmLCBvZmYpID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNhbXBsZUZyZXF1ZW5jeTogWzQ0MTAwLCA0ODAwMCwgMzc4MDAsIDMyMDAwXVt1dGlsLmdldEJpdEFsbGlnbmVkTnVtYmVyKGJ1Ziwgb2ZmLCAwLCAzKV0sXG4gICAgICAgICAgICBtYXhVc2VkQmFuZHM6IHV0aWwuZ2V0Qml0QWxsaWduZWROdW1iZXIoYnVmLCBvZmYsIDMsIDUpLFxuICAgICAgICAgICAgY2hhbm5lbENvdW50OiB1dGlsLmdldEJpdEFsbGlnbmVkTnVtYmVyKGJ1Ziwgb2ZmICsgMSwgMCwgNCkgKyAxLFxuICAgICAgICAgICAgbXNVc2VkOiB1dGlsLmlzQml0U2V0KGJ1Ziwgb2ZmICsgMSwgNCksXG4gICAgICAgICAgICBhdWRpb0Jsb2NrRnJhbWVzOiB1dGlsLmdldEJpdEFsbGlnbmVkTnVtYmVyKGJ1Ziwgb2ZmICsgMSwgNSwgMylcbiAgICAgICAgfTtcbiAgICB9XG59O1xuZXhwb3J0IGNsYXNzIFN0cmVhbVJlYWRlciB7XG4gICAgY29uc3RydWN0b3IodG9rZW5pemVyKSB7XG4gICAgICAgIHRoaXMudG9rZW5pemVyID0gdG9rZW5pemVyO1xuICAgIH1cbiAgICBhc3luYyByZWFkUGFja2V0SGVhZGVyKCkge1xuICAgICAgICBjb25zdCBrZXkgPSBhd2FpdCB0aGlzLnRva2VuaXplci5yZWFkVG9rZW4oUGFja2V0S2V5KTtcbiAgICAgICAgY29uc3Qgc2l6ZSA9IGF3YWl0IHRoaXMucmVhZFZhcmlhYmxlU2l6ZUZpZWxkKCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBrZXksXG4gICAgICAgICAgICBwYXlsb2FkTGVuZ3RoOiBzaXplLnZhbHVlIC0gMiAtIHNpemUubGVuXG4gICAgICAgIH07XG4gICAgfVxuICAgIGFzeW5jIHJlYWRTdHJlYW1IZWFkZXIoc2l6ZSkge1xuICAgICAgICBjb25zdCBzdHJlYW1IZWFkZXIgPSB7fTtcbiAgICAgICAgZGVidWcoYFJlYWRpbmcgU0ggYXQgb2Zmc2V0PSR7dGhpcy50b2tlbml6ZXIucG9zaXRpb259YCk7XG4gICAgICAgIGNvbnN0IHBhcnQxID0gYXdhaXQgdGhpcy50b2tlbml6ZXIucmVhZFRva2VuKFNIX3BhcnQxKTtcbiAgICAgICAgc2l6ZSAtPSBTSF9wYXJ0MS5sZW47XG4gICAgICAgIE9iamVjdC5hc3NpZ24oc3RyZWFtSGVhZGVyLCBwYXJ0MSk7XG4gICAgICAgIGRlYnVnKGBTSC5zdHJlYW1WZXJzaW9uID0gJHtwYXJ0MS5zdHJlYW1WZXJzaW9ufWApO1xuICAgICAgICBjb25zdCBzYW1wbGVDb3VudCA9IGF3YWl0IHRoaXMucmVhZFZhcmlhYmxlU2l6ZUZpZWxkKCk7XG4gICAgICAgIHNpemUgLT0gc2FtcGxlQ291bnQubGVuO1xuICAgICAgICBzdHJlYW1IZWFkZXIuc2FtcGxlQ291bnQgPSBzYW1wbGVDb3VudC52YWx1ZTtcbiAgICAgICAgY29uc3QgYnMgPSBhd2FpdCB0aGlzLnJlYWRWYXJpYWJsZVNpemVGaWVsZCgpO1xuICAgICAgICBzaXplIC09IGJzLmxlbjtcbiAgICAgICAgc3RyZWFtSGVhZGVyLmJlZ2lubmluZ09mU2lsZW5jZSA9IGJzLnZhbHVlO1xuICAgICAgICBjb25zdCBwYXJ0MyA9IGF3YWl0IHRoaXMudG9rZW5pemVyLnJlYWRUb2tlbihTSF9wYXJ0Myk7XG4gICAgICAgIHNpemUgLT0gU0hfcGFydDMubGVuO1xuICAgICAgICBPYmplY3QuYXNzaWduKHN0cmVhbUhlYWRlciwgcGFydDMpO1xuICAgICAgICAvLyBhc3NlcnQuZXF1YWwoc2l6ZSwgMCk7XG4gICAgICAgIGF3YWl0IHRoaXMudG9rZW5pemVyLmlnbm9yZShzaXplKTtcbiAgICAgICAgcmV0dXJuIHN0cmVhbUhlYWRlcjtcbiAgICB9XG4gICAgYXN5bmMgcmVhZFZhcmlhYmxlU2l6ZUZpZWxkKGxlbiA9IDEsIGhiID0gMCkge1xuICAgICAgICBsZXQgbiA9IGF3YWl0IHRoaXMudG9rZW5pemVyLnJlYWROdW1iZXIoVG9rZW4uVUlOVDgpO1xuICAgICAgICBpZiAoKG4gJiAweDgwKSA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHsgbGVuLCB2YWx1ZTogaGIgKyBuIH07XG4gICAgICAgIH1cbiAgICAgICAgbiAmPSAweDdGO1xuICAgICAgICBuICs9IGhiO1xuICAgICAgICByZXR1cm4gdGhpcy5yZWFkVmFyaWFibGVTaXplRmllbGQobGVuICsgMSwgbiA8PCA3KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdHJlYW1WZXJzaW9uOC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/musepack/sv8/StreamVersion8.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/ogg/OggLoader.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/ogg/OggLoader.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   oggParserLoader: () => (/* binding */ oggParserLoader)\n/* harmony export */ });\nconst oggParserLoader = {\n    parserType: 'ogg',\n    extensions: ['.ogg', '.ogv', '.oga', '.ogm', '.ogx', '.opus', '.spx'],\n    async load(metadata, tokenizer, options) {\n        return new (await __webpack_require__.e(/*! import() */ \"vendor-chunks/music-metadata\").then(__webpack_require__.bind(__webpack_require__, /*! ./OggParser.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/OggParser.js\"))).OggParser(metadata, tokenizer, options);\n    }\n};\n//# sourceMappingURL=OggLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL29nZy9PZ2dMb2FkZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJNQUF3QjtBQUNsRDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL29nZy9PZ2dMb2FkZXIuanM/NGU0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgb2dnUGFyc2VyTG9hZGVyID0ge1xuICAgIHBhcnNlclR5cGU6ICdvZ2cnLFxuICAgIGV4dGVuc2lvbnM6IFsnLm9nZycsICcub2d2JywgJy5vZ2EnLCAnLm9nbScsICcub2d4JywgJy5vcHVzJywgJy5zcHgnXSxcbiAgICBhc3luYyBsb2FkKG1ldGFkYXRhLCB0b2tlbml6ZXIsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyAoYXdhaXQgaW1wb3J0KCcuL09nZ1BhcnNlci5qcycpKS5PZ2dQYXJzZXIobWV0YWRhdGEsIHRva2VuaXplciwgb3B0aW9ucyk7XG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU9nZ0xvYWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ogg/OggLoader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/ogg/OggParser.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/ogg/OggParser.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OggContentError: () => (/* binding */ OggContentError),\n/* harmony export */   OggParser: () => (/* binding */ OggParser),\n/* harmony export */   SegmentTable: () => (/* binding */ SegmentTable)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var strtok3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! strtok3 */ \"(rsc)/./node_modules/strtok3/lib/index.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/FourCC.js */ \"(rsc)/./node_modules/music-metadata/lib/common/FourCC.js\");\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/BasicParser.js */ \"(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js\");\n/* harmony import */ var _vorbis_VorbisParser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./vorbis/VorbisParser.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/VorbisParser.js\");\n/* harmony import */ var _opus_OpusParser_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./opus/OpusParser.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/opus/OpusParser.js\");\n/* harmony import */ var _speex_SpeexParser_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./speex/SpeexParser.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/speex/SpeexParser.js\");\n/* harmony import */ var _theora_TheoraParser_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./theora/TheoraParser.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/theora/TheoraParser.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\n\n\n\n\n\n\n\n\n\nclass OggContentError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_10__.makeUnexpectedFileContentError)('Ogg') {\n}\nconst debug = debug__WEBPACK_IMPORTED_MODULE_2__('music-metadata:parser:ogg');\nclass SegmentTable {\n    static sum(buf, off, len) {\n        const dv = new DataView(buf.buffer, 0);\n        let s = 0;\n        for (let i = off; i < off + len; ++i) {\n            s += dv.getUint8(i);\n        }\n        return s;\n    }\n    constructor(header) {\n        this.len = header.page_segments;\n    }\n    get(buf, off) {\n        return {\n            totalPageSize: SegmentTable.sum(buf, off, this.len)\n        };\n    }\n}\n/**\n * Parser for Ogg logical bitstream framing\n */\nclass OggParser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_5__.BasicParser {\n    constructor() {\n        super(...arguments);\n        this.header = null;\n        this.pageNumber = 0;\n        this.pageConsumer = null;\n    }\n    /**\n     * Parse page\n     * @returns {Promise<void>}\n     */\n    async parse() {\n        debug('pos=%s, parsePage()', this.tokenizer.position);\n        try {\n            let header;\n            do {\n                header = await this.tokenizer.readToken(OggParser.Header);\n                if (header.capturePattern !== 'OggS')\n                    throw new OggContentError('Invalid Ogg capture pattern');\n                this.metadata.setFormat('container', 'Ogg');\n                this.header = header;\n                this.pageNumber = header.pageSequenceNo;\n                debug('page#=%s, Ogg.id=%s', header.pageSequenceNo, header.capturePattern);\n                const segmentTable = await this.tokenizer.readToken(new SegmentTable(header));\n                debug('totalPageSize=%s', segmentTable.totalPageSize);\n                const pageData = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayType(segmentTable.totalPageSize));\n                debug('firstPage=%s, lastPage=%s, continued=%s', header.headerType.firstPage, header.headerType.lastPage, header.headerType.continued);\n                if (header.headerType.firstPage) {\n                    const id = new TextDecoder('ascii').decode(pageData.subarray(0, 7));\n                    switch (id) {\n                        case '\\x01vorbis': // Ogg/Vorbis\n                            debug('Set page consumer to Ogg/Vorbis');\n                            this.pageConsumer = new _vorbis_VorbisParser_js__WEBPACK_IMPORTED_MODULE_6__.VorbisParser(this.metadata, this.options);\n                            break;\n                        case 'OpusHea': // Ogg/Opus\n                            debug('Set page consumer to Ogg/Opus');\n                            this.pageConsumer = new _opus_OpusParser_js__WEBPACK_IMPORTED_MODULE_7__.OpusParser(this.metadata, this.options, this.tokenizer);\n                            break;\n                        case 'Speex  ': // Ogg/Speex\n                            debug('Set page consumer to Ogg/Speex');\n                            this.pageConsumer = new _speex_SpeexParser_js__WEBPACK_IMPORTED_MODULE_8__.SpeexParser(this.metadata, this.options, this.tokenizer);\n                            break;\n                        case 'fishead':\n                        case '\\x00theora': // Ogg/Theora\n                            debug('Set page consumer to Ogg/Theora');\n                            this.pageConsumer = new _theora_TheoraParser_js__WEBPACK_IMPORTED_MODULE_9__.TheoraParser(this.metadata, this.options, this.tokenizer);\n                            break;\n                        default:\n                            throw new OggContentError(`gg audio-codec not recognized (id=${id})`);\n                    }\n                }\n                await this.pageConsumer.parsePage(header, pageData);\n            } while (!header.headerType.lastPage);\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                if (err instanceof strtok3__WEBPACK_IMPORTED_MODULE_1__.EndOfStreamError) {\n                    this.metadata.addWarning('Last OGG-page is not marked with last-page flag');\n                    debug(\"End-of-stream\");\n                    this.metadata.addWarning('Last OGG-page is not marked with last-page flag');\n                    if (this.header) {\n                        this.pageConsumer.calculateDuration(this.header);\n                    }\n                }\n                else if (err.message.startsWith('FourCC')) {\n                    if (this.pageNumber > 0) {\n                        // ignore this error: work-around if last OGG-page is not marked with last-page flag\n                        this.metadata.addWarning('Invalid FourCC ID, maybe last OGG-page is not marked with last-page flag');\n                        await this.pageConsumer.flush();\n                    }\n                }\n            }\n            else\n                throw err;\n        }\n    }\n}\nOggParser.Header = {\n    len: 27,\n    get: (buf, off) => {\n        return {\n            capturePattern: _common_FourCC_js__WEBPACK_IMPORTED_MODULE_4__.FourCcToken.get(buf, off),\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off + 4),\n            headerType: {\n                continued: _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.getBit(buf, off + 5, 0),\n                firstPage: _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.getBit(buf, off + 5, 1),\n                lastPage: _common_Util_js__WEBPACK_IMPORTED_MODULE_3__.getBit(buf, off + 5, 2)\n            },\n            // packet_flag: Token.UINT8.get(buf, off + 5),\n            absoluteGranulePosition: Number(token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_LE.get(buf, off + 6)),\n            streamSerialNumber: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 14),\n            pageSequenceNo: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 18),\n            pageChecksum: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 22),\n            page_segments: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off + 26)\n        };\n    }\n};\n//# sourceMappingURL=OggParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ogg/OggParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/ogg/opus/Opus.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/ogg/opus/Opus.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IdHeader: () => (/* binding */ IdHeader),\n/* harmony export */   OpusContentError: () => (/* binding */ OpusContentError)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\nclass OpusContentError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_1__.makeUnexpectedFileContentError)('Opus') {\n}\n/**\n * Opus ID Header parser\n * Ref: https://wiki.xiph.org/OggOpus#ID_Header\n */\nclass IdHeader {\n    constructor(len) {\n        this.len = len;\n        if (len < 19) {\n            throw new OpusContentError('ID-header-page 0 should be at least 19 bytes long');\n        }\n    }\n    get(buf, off) {\n        return {\n            magicSignature: new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(8, 'ascii').get(buf, off + 0),\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off + 8),\n            channelCount: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off + 9),\n            preSkip: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off + 10),\n            inputSampleRate: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 12),\n            outputGain: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off + 16),\n            channelMapping: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off + 18)\n        };\n    }\n}\n//# sourceMappingURL=Opus.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL29nZy9vcHVzL09wdXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxQztBQUNnQztBQUM5RCwrQkFBK0IsOEVBQThCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsbURBQWdCO0FBQ2hELHFCQUFxQiw4Q0FBVztBQUNoQywwQkFBMEIsOENBQVc7QUFDckMscUJBQXFCLGtEQUFlO0FBQ3BDLDZCQUE2QixrREFBZTtBQUM1Qyx3QkFBd0Isa0RBQWU7QUFDdkMsNEJBQTRCLDhDQUFXO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9vZ2cvb3B1cy9PcHVzLmpzP2EyNTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVG9rZW4gZnJvbSAndG9rZW4tdHlwZXMnO1xuaW1wb3J0IHsgbWFrZVVuZXhwZWN0ZWRGaWxlQ29udGVudEVycm9yIH0gZnJvbSAnLi4vLi4vUGFyc2VFcnJvci5qcyc7XG5leHBvcnQgY2xhc3MgT3B1c0NvbnRlbnRFcnJvciBleHRlbmRzIG1ha2VVbmV4cGVjdGVkRmlsZUNvbnRlbnRFcnJvcignT3B1cycpIHtcbn1cbi8qKlxuICogT3B1cyBJRCBIZWFkZXIgcGFyc2VyXG4gKiBSZWY6IGh0dHBzOi8vd2lraS54aXBoLm9yZy9PZ2dPcHVzI0lEX0hlYWRlclxuICovXG5leHBvcnQgY2xhc3MgSWRIZWFkZXIge1xuICAgIGNvbnN0cnVjdG9yKGxlbikge1xuICAgICAgICB0aGlzLmxlbiA9IGxlbjtcbiAgICAgICAgaWYgKGxlbiA8IDE5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgT3B1c0NvbnRlbnRFcnJvcignSUQtaGVhZGVyLXBhZ2UgMCBzaG91bGQgYmUgYXQgbGVhc3QgMTkgYnl0ZXMgbG9uZycpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldChidWYsIG9mZikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbWFnaWNTaWduYXR1cmU6IG5ldyBUb2tlbi5TdHJpbmdUeXBlKDgsICdhc2NpaScpLmdldChidWYsIG9mZiArIDApLFxuICAgICAgICAgICAgdmVyc2lvbjogVG9rZW4uVUlOVDguZ2V0KGJ1Ziwgb2ZmICsgOCksXG4gICAgICAgICAgICBjaGFubmVsQ291bnQ6IFRva2VuLlVJTlQ4LmdldChidWYsIG9mZiArIDkpLFxuICAgICAgICAgICAgcHJlU2tpcDogVG9rZW4uVUlOVDE2X0xFLmdldChidWYsIG9mZiArIDEwKSxcbiAgICAgICAgICAgIGlucHV0U2FtcGxlUmF0ZTogVG9rZW4uVUlOVDMyX0xFLmdldChidWYsIG9mZiArIDEyKSxcbiAgICAgICAgICAgIG91dHB1dEdhaW46IFRva2VuLlVJTlQxNl9MRS5nZXQoYnVmLCBvZmYgKyAxNiksXG4gICAgICAgICAgICBjaGFubmVsTWFwcGluZzogVG9rZW4uVUlOVDguZ2V0KGJ1Ziwgb2ZmICsgMTgpXG4gICAgICAgIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T3B1cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ogg/opus/Opus.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/ogg/opus/OpusParser.js":
/*!****************************************************************!*\
  !*** ./node_modules/music-metadata/lib/ogg/opus/OpusParser.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpusParser: () => (/* binding */ OpusParser)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _vorbis_VorbisParser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vorbis/VorbisParser.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/VorbisParser.js\");\n/* harmony import */ var _Opus_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Opus.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/opus/Opus.js\");\n\n\n\n\n/**\n * Opus parser\n * Internet Engineering Task Force (IETF) - RFC 6716\n * Used by OggParser\n */\nclass OpusParser extends _vorbis_VorbisParser_js__WEBPACK_IMPORTED_MODULE_1__.VorbisParser {\n    constructor(metadata, options, tokenizer) {\n        super(metadata, options);\n        this.tokenizer = tokenizer;\n        this.idHeader = null;\n        this.lastPos = -1;\n    }\n    /**\n     * Parse first Opus Ogg page\n     * @param {IPageHeader} header\n     * @param {Uint8Array} pageData\n     */\n    parseFirstPage(header, pageData) {\n        this.metadata.setFormat('codec', 'Opus');\n        // Parse Opus ID Header\n        this.idHeader = new _Opus_js__WEBPACK_IMPORTED_MODULE_2__.IdHeader(pageData.length).get(pageData, 0);\n        if (this.idHeader.magicSignature !== \"OpusHead\")\n            throw new _Opus_js__WEBPACK_IMPORTED_MODULE_2__.OpusContentError(\"Illegal ogg/Opus magic-signature\");\n        this.metadata.setFormat('sampleRate', this.idHeader.inputSampleRate);\n        this.metadata.setFormat('numberOfChannels', this.idHeader.channelCount);\n    }\n    async parseFullPage(pageData) {\n        const magicSignature = new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(8, 'ascii').get(pageData, 0);\n        switch (magicSignature) {\n            case 'OpusTags':\n                await this.parseUserCommentList(pageData, 8);\n                this.lastPos = this.tokenizer.position - pageData.length;\n                break;\n            default:\n                break;\n        }\n    }\n    calculateDuration(header) {\n        if (this.metadata.format.sampleRate && header.absoluteGranulePosition >= 0) {\n            // Calculate duration\n            const pos_48bit = header.absoluteGranulePosition - this.idHeader.preSkip;\n            this.metadata.setFormat('numberOfSamples', pos_48bit);\n            this.metadata.setFormat('duration', pos_48bit / 48000);\n            if (this.lastPos !== -1 && this.tokenizer.fileInfo.size && this.metadata.format.duration) {\n                const dataSize = this.tokenizer.fileInfo.size - this.lastPos;\n                this.metadata.setFormat('bitrate', 8 * dataSize / this.metadata.format.duration);\n            }\n        }\n    }\n}\n//# sourceMappingURL=OpusParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL29nZy9vcHVzL09wdXNQYXJzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxQztBQUNvQjtBQUN2QjtBQUNXO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx5QkFBeUIsaUVBQVk7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsYUFBYTtBQUM1QixlQUFlLFlBQVk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsOENBQWE7QUFDekM7QUFDQSxzQkFBc0Isc0RBQWdCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLG1EQUFnQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9vZ2cvb3B1cy9PcHVzUGFyc2VyLmpzPzU5ZjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVG9rZW4gZnJvbSAndG9rZW4tdHlwZXMnO1xuaW1wb3J0IHsgVm9yYmlzUGFyc2VyIH0gZnJvbSAnLi4vdm9yYmlzL1ZvcmJpc1BhcnNlci5qcyc7XG5pbXBvcnQgKiBhcyBPcHVzIGZyb20gJy4vT3B1cy5qcyc7XG5pbXBvcnQgeyBPcHVzQ29udGVudEVycm9yIH0gZnJvbSAnLi9PcHVzLmpzJztcbi8qKlxuICogT3B1cyBwYXJzZXJcbiAqIEludGVybmV0IEVuZ2luZWVyaW5nIFRhc2sgRm9yY2UgKElFVEYpIC0gUkZDIDY3MTZcbiAqIFVzZWQgYnkgT2dnUGFyc2VyXG4gKi9cbmV4cG9ydCBjbGFzcyBPcHVzUGFyc2VyIGV4dGVuZHMgVm9yYmlzUGFyc2VyIHtcbiAgICBjb25zdHJ1Y3RvcihtZXRhZGF0YSwgb3B0aW9ucywgdG9rZW5pemVyKSB7XG4gICAgICAgIHN1cGVyKG1ldGFkYXRhLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy50b2tlbml6ZXIgPSB0b2tlbml6ZXI7XG4gICAgICAgIHRoaXMuaWRIZWFkZXIgPSBudWxsO1xuICAgICAgICB0aGlzLmxhc3RQb3MgPSAtMTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2UgZmlyc3QgT3B1cyBPZ2cgcGFnZVxuICAgICAqIEBwYXJhbSB7SVBhZ2VIZWFkZXJ9IGhlYWRlclxuICAgICAqIEBwYXJhbSB7VWludDhBcnJheX0gcGFnZURhdGFcbiAgICAgKi9cbiAgICBwYXJzZUZpcnN0UGFnZShoZWFkZXIsIHBhZ2VEYXRhKSB7XG4gICAgICAgIHRoaXMubWV0YWRhdGEuc2V0Rm9ybWF0KCdjb2RlYycsICdPcHVzJyk7XG4gICAgICAgIC8vIFBhcnNlIE9wdXMgSUQgSGVhZGVyXG4gICAgICAgIHRoaXMuaWRIZWFkZXIgPSBuZXcgT3B1cy5JZEhlYWRlcihwYWdlRGF0YS5sZW5ndGgpLmdldChwYWdlRGF0YSwgMCk7XG4gICAgICAgIGlmICh0aGlzLmlkSGVhZGVyLm1hZ2ljU2lnbmF0dXJlICE9PSBcIk9wdXNIZWFkXCIpXG4gICAgICAgICAgICB0aHJvdyBuZXcgT3B1c0NvbnRlbnRFcnJvcihcIklsbGVnYWwgb2dnL09wdXMgbWFnaWMtc2lnbmF0dXJlXCIpO1xuICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnc2FtcGxlUmF0ZScsIHRoaXMuaWRIZWFkZXIuaW5wdXRTYW1wbGVSYXRlKTtcbiAgICAgICAgdGhpcy5tZXRhZGF0YS5zZXRGb3JtYXQoJ251bWJlck9mQ2hhbm5lbHMnLCB0aGlzLmlkSGVhZGVyLmNoYW5uZWxDb3VudCk7XG4gICAgfVxuICAgIGFzeW5jIHBhcnNlRnVsbFBhZ2UocGFnZURhdGEpIHtcbiAgICAgICAgY29uc3QgbWFnaWNTaWduYXR1cmUgPSBuZXcgVG9rZW4uU3RyaW5nVHlwZSg4LCAnYXNjaWknKS5nZXQocGFnZURhdGEsIDApO1xuICAgICAgICBzd2l0Y2ggKG1hZ2ljU2lnbmF0dXJlKSB7XG4gICAgICAgICAgICBjYXNlICdPcHVzVGFncyc6XG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5wYXJzZVVzZXJDb21tZW50TGlzdChwYWdlRGF0YSwgOCk7XG4gICAgICAgICAgICAgICAgdGhpcy5sYXN0UG9zID0gdGhpcy50b2tlbml6ZXIucG9zaXRpb24gLSBwYWdlRGF0YS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNhbGN1bGF0ZUR1cmF0aW9uKGhlYWRlcikge1xuICAgICAgICBpZiAodGhpcy5tZXRhZGF0YS5mb3JtYXQuc2FtcGxlUmF0ZSAmJiBoZWFkZXIuYWJzb2x1dGVHcmFudWxlUG9zaXRpb24gPj0gMCkge1xuICAgICAgICAgICAgLy8gQ2FsY3VsYXRlIGR1cmF0aW9uXG4gICAgICAgICAgICBjb25zdCBwb3NfNDhiaXQgPSBoZWFkZXIuYWJzb2x1dGVHcmFudWxlUG9zaXRpb24gLSB0aGlzLmlkSGVhZGVyLnByZVNraXA7XG4gICAgICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnbnVtYmVyT2ZTYW1wbGVzJywgcG9zXzQ4Yml0KTtcbiAgICAgICAgICAgIHRoaXMubWV0YWRhdGEuc2V0Rm9ybWF0KCdkdXJhdGlvbicsIHBvc180OGJpdCAvIDQ4MDAwKTtcbiAgICAgICAgICAgIGlmICh0aGlzLmxhc3RQb3MgIT09IC0xICYmIHRoaXMudG9rZW5pemVyLmZpbGVJbmZvLnNpemUgJiYgdGhpcy5tZXRhZGF0YS5mb3JtYXQuZHVyYXRpb24pIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhU2l6ZSA9IHRoaXMudG9rZW5pemVyLmZpbGVJbmZvLnNpemUgLSB0aGlzLmxhc3RQb3M7XG4gICAgICAgICAgICAgICAgdGhpcy5tZXRhZGF0YS5zZXRGb3JtYXQoJ2JpdHJhdGUnLCA4ICogZGF0YVNpemUgLyB0aGlzLm1ldGFkYXRhLmZvcm1hdC5kdXJhdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1PcHVzUGFyc2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ogg/opus/OpusParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/ogg/speex/Speex.js":
/*!************************************************************!*\
  !*** ./node_modules/music-metadata/lib/ogg/speex/Speex.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Header: () => (/* binding */ Header)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n\n\n/**\n * Speex Header Packet\n * Ref: https://www.speex.org/docs/manual/speex-manual/node8.html#SECTION00830000000000000000\n */\nconst Header = {\n    len: 80,\n    get: (buf, off) => {\n        return {\n            speex: new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(8, 'ascii').get(buf, off + 0),\n            version: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.trimRightNull(new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(20, 'ascii').get(buf, off + 8)),\n            version_id: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 28),\n            header_size: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 32),\n            rate: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 36),\n            mode: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 40),\n            mode_bitstream_version: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 44),\n            nb_channels: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 48),\n            bitrate: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 52),\n            frame_size: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 56),\n            vbr: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 60),\n            frames_per_packet: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 64),\n            extra_headers: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 68),\n            reserved1: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 72),\n            reserved2: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 76)\n        };\n    }\n};\n//# sourceMappingURL=Speex.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL29nZy9zcGVleC9TcGVleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDUTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG1EQUFnQjtBQUN2QyxxQkFBcUIsMERBQWtCLEtBQUssbURBQWdCO0FBQzVELHdCQUF3QixpREFBYztBQUN0Qyx5QkFBeUIsaURBQWM7QUFDdkMsa0JBQWtCLGlEQUFjO0FBQ2hDLGtCQUFrQixpREFBYztBQUNoQyxvQ0FBb0MsaURBQWM7QUFDbEQseUJBQXlCLGlEQUFjO0FBQ3ZDLHFCQUFxQixpREFBYztBQUNuQyx3QkFBd0IsaURBQWM7QUFDdEMsaUJBQWlCLGlEQUFjO0FBQy9CLCtCQUErQixpREFBYztBQUM3QywyQkFBMkIsaURBQWM7QUFDekMsdUJBQXVCLGlEQUFjO0FBQ3JDLHVCQUF1QixpREFBYztBQUNyQztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvb2dnL3NwZWV4L1NwZWV4LmpzP2I0ZjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVG9rZW4gZnJvbSAndG9rZW4tdHlwZXMnO1xuaW1wb3J0ICogYXMgdXRpbCBmcm9tICcuLi8uLi9jb21tb24vVXRpbC5qcyc7XG4vKipcbiAqIFNwZWV4IEhlYWRlciBQYWNrZXRcbiAqIFJlZjogaHR0cHM6Ly93d3cuc3BlZXgub3JnL2RvY3MvbWFudWFsL3NwZWV4LW1hbnVhbC9ub2RlOC5odG1sI1NFQ1RJT04wMDgzMDAwMDAwMDAwMDAwMDAwMFxuICovXG5leHBvcnQgY29uc3QgSGVhZGVyID0ge1xuICAgIGxlbjogODAsXG4gICAgZ2V0OiAoYnVmLCBvZmYpID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNwZWV4OiBuZXcgVG9rZW4uU3RyaW5nVHlwZSg4LCAnYXNjaWknKS5nZXQoYnVmLCBvZmYgKyAwKSxcbiAgICAgICAgICAgIHZlcnNpb246IHV0aWwudHJpbVJpZ2h0TnVsbChuZXcgVG9rZW4uU3RyaW5nVHlwZSgyMCwgJ2FzY2lpJykuZ2V0KGJ1Ziwgb2ZmICsgOCkpLFxuICAgICAgICAgICAgdmVyc2lvbl9pZDogVG9rZW4uSU5UMzJfTEUuZ2V0KGJ1Ziwgb2ZmICsgMjgpLFxuICAgICAgICAgICAgaGVhZGVyX3NpemU6IFRva2VuLklOVDMyX0xFLmdldChidWYsIG9mZiArIDMyKSxcbiAgICAgICAgICAgIHJhdGU6IFRva2VuLklOVDMyX0xFLmdldChidWYsIG9mZiArIDM2KSxcbiAgICAgICAgICAgIG1vZGU6IFRva2VuLklOVDMyX0xFLmdldChidWYsIG9mZiArIDQwKSxcbiAgICAgICAgICAgIG1vZGVfYml0c3RyZWFtX3ZlcnNpb246IFRva2VuLklOVDMyX0xFLmdldChidWYsIG9mZiArIDQ0KSxcbiAgICAgICAgICAgIG5iX2NoYW5uZWxzOiBUb2tlbi5JTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyA0OCksXG4gICAgICAgICAgICBiaXRyYXRlOiBUb2tlbi5JTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyA1MiksXG4gICAgICAgICAgICBmcmFtZV9zaXplOiBUb2tlbi5JTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyA1NiksXG4gICAgICAgICAgICB2YnI6IFRva2VuLklOVDMyX0xFLmdldChidWYsIG9mZiArIDYwKSxcbiAgICAgICAgICAgIGZyYW1lc19wZXJfcGFja2V0OiBUb2tlbi5JTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyA2NCksXG4gICAgICAgICAgICBleHRyYV9oZWFkZXJzOiBUb2tlbi5JTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyA2OCksXG4gICAgICAgICAgICByZXNlcnZlZDE6IFRva2VuLklOVDMyX0xFLmdldChidWYsIG9mZiArIDcyKSxcbiAgICAgICAgICAgIHJlc2VydmVkMjogVG9rZW4uSU5UMzJfTEUuZ2V0KGJ1Ziwgb2ZmICsgNzYpXG4gICAgICAgIH07XG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwZWV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ogg/speex/Speex.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/ogg/speex/SpeexParser.js":
/*!******************************************************************!*\
  !*** ./node_modules/music-metadata/lib/ogg/speex/SpeexParser.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpeexParser: () => (/* binding */ SpeexParser)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _vorbis_VorbisParser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vorbis/VorbisParser.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/VorbisParser.js\");\n/* harmony import */ var _Speex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Speex.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/speex/Speex.js\");\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('music-metadata:parser:ogg:speex');\n/**\n * Speex, RFC 5574\n * Ref:\n * - https://www.speex.org/docs/manual/speex-manual/\n * - https://tools.ietf.org/html/rfc5574\n */\nclass SpeexParser extends _vorbis_VorbisParser_js__WEBPACK_IMPORTED_MODULE_1__.VorbisParser {\n    constructor(metadata, options, tokenizer) {\n        super(metadata, options);\n        this.tokenizer = tokenizer;\n    }\n    /**\n     * Parse first Speex Ogg page\n     * @param {IPageHeader} header\n     * @param {Uint8Array} pageData\n     */\n    parseFirstPage(header, pageData) {\n        debug('First Ogg/Speex page');\n        const speexHeader = _Speex_js__WEBPACK_IMPORTED_MODULE_2__.Header.get(pageData, 0);\n        this.metadata.setFormat('codec', `Speex ${speexHeader.version}`);\n        this.metadata.setFormat('numberOfChannels', speexHeader.nb_channels);\n        this.metadata.setFormat('sampleRate', speexHeader.rate);\n        if (speexHeader.bitrate !== -1) {\n            this.metadata.setFormat('bitrate', speexHeader.bitrate);\n        }\n    }\n}\n//# sourceMappingURL=SpeexParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL29nZy9zcGVleC9TcGVleFBhcnNlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThCO0FBQzJCO0FBQ3JCO0FBQ3BDLGNBQWMsa0NBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMEJBQTBCLGlFQUFZO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsYUFBYTtBQUM1QixlQUFlLFlBQVk7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDZDQUFZO0FBQ3hDLGtEQUFrRCxvQkFBb0I7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvb2dnL3NwZWV4L1NwZWV4UGFyc2VyLmpzPzZlM2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGluaXREZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5pbXBvcnQgeyBWb3JiaXNQYXJzZXIgfSBmcm9tICcuLi92b3JiaXMvVm9yYmlzUGFyc2VyLmpzJztcbmltcG9ydCAqIGFzIFNwZWV4IGZyb20gJy4vU3BlZXguanMnO1xuY29uc3QgZGVidWcgPSBpbml0RGVidWcoJ211c2ljLW1ldGFkYXRhOnBhcnNlcjpvZ2c6c3BlZXgnKTtcbi8qKlxuICogU3BlZXgsIFJGQyA1NTc0XG4gKiBSZWY6XG4gKiAtIGh0dHBzOi8vd3d3LnNwZWV4Lm9yZy9kb2NzL21hbnVhbC9zcGVleC1tYW51YWwvXG4gKiAtIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM1NTc0XG4gKi9cbmV4cG9ydCBjbGFzcyBTcGVleFBhcnNlciBleHRlbmRzIFZvcmJpc1BhcnNlciB7XG4gICAgY29uc3RydWN0b3IobWV0YWRhdGEsIG9wdGlvbnMsIHRva2VuaXplcikge1xuICAgICAgICBzdXBlcihtZXRhZGF0YSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMudG9rZW5pemVyID0gdG9rZW5pemVyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQYXJzZSBmaXJzdCBTcGVleCBPZ2cgcGFnZVxuICAgICAqIEBwYXJhbSB7SVBhZ2VIZWFkZXJ9IGhlYWRlclxuICAgICAqIEBwYXJhbSB7VWludDhBcnJheX0gcGFnZURhdGFcbiAgICAgKi9cbiAgICBwYXJzZUZpcnN0UGFnZShoZWFkZXIsIHBhZ2VEYXRhKSB7XG4gICAgICAgIGRlYnVnKCdGaXJzdCBPZ2cvU3BlZXggcGFnZScpO1xuICAgICAgICBjb25zdCBzcGVleEhlYWRlciA9IFNwZWV4LkhlYWRlci5nZXQocGFnZURhdGEsIDApO1xuICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnY29kZWMnLCBgU3BlZXggJHtzcGVleEhlYWRlci52ZXJzaW9ufWApO1xuICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnbnVtYmVyT2ZDaGFubmVscycsIHNwZWV4SGVhZGVyLm5iX2NoYW5uZWxzKTtcbiAgICAgICAgdGhpcy5tZXRhZGF0YS5zZXRGb3JtYXQoJ3NhbXBsZVJhdGUnLCBzcGVleEhlYWRlci5yYXRlKTtcbiAgICAgICAgaWYgKHNwZWV4SGVhZGVyLmJpdHJhdGUgIT09IC0xKSB7XG4gICAgICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnYml0cmF0ZScsIHNwZWV4SGVhZGVyLmJpdHJhdGUpO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3BlZXhQYXJzZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ogg/speex/SpeexParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/ogg/theora/Theora.js":
/*!**************************************************************!*\
  !*** ./node_modules/music-metadata/lib/ogg/theora/Theora.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IdentificationHeader: () => (/* binding */ IdentificationHeader)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n\n/**\n * 6.2 Identification Header\n * Ref: https://theora.org/doc/Theora.pdf: 6.2 Identification Header Decode\n */\nconst IdentificationHeader = {\n    len: 42,\n    get: (buf, off) => {\n        return {\n            id: new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(7, 'ascii').get(buf, off),\n            vmaj: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off + 7),\n            vmin: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off + 8),\n            vrev: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off + 9),\n            vmbw: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 10),\n            vmbh: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_BE.get(buf, off + 17),\n            nombr: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_BE.get(buf, off + 37),\n            nqual: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off + 40)\n        };\n    }\n};\n//# sourceMappingURL=Theora.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL29nZy90aGVvcmEvVGhlb3JhLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbURBQWdCO0FBQ3BDLGtCQUFrQiw4Q0FBVztBQUM3QixrQkFBa0IsOENBQVc7QUFDN0Isa0JBQWtCLDhDQUFXO0FBQzdCLGtCQUFrQixrREFBZTtBQUNqQyxrQkFBa0Isa0RBQWU7QUFDakMsbUJBQW1CLGtEQUFlO0FBQ2xDLG1CQUFtQiw4Q0FBVztBQUM5QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvb2dnL3RoZW9yYS9UaGVvcmEuanM/YWQ3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBUb2tlbiBmcm9tICd0b2tlbi10eXBlcyc7XG4vKipcbiAqIDYuMiBJZGVudGlmaWNhdGlvbiBIZWFkZXJcbiAqIFJlZjogaHR0cHM6Ly90aGVvcmEub3JnL2RvYy9UaGVvcmEucGRmOiA2LjIgSWRlbnRpZmljYXRpb24gSGVhZGVyIERlY29kZVxuICovXG5leHBvcnQgY29uc3QgSWRlbnRpZmljYXRpb25IZWFkZXIgPSB7XG4gICAgbGVuOiA0MixcbiAgICBnZXQ6IChidWYsIG9mZikgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaWQ6IG5ldyBUb2tlbi5TdHJpbmdUeXBlKDcsICdhc2NpaScpLmdldChidWYsIG9mZiksXG4gICAgICAgICAgICB2bWFqOiBUb2tlbi5VSU5UOC5nZXQoYnVmLCBvZmYgKyA3KSxcbiAgICAgICAgICAgIHZtaW46IFRva2VuLlVJTlQ4LmdldChidWYsIG9mZiArIDgpLFxuICAgICAgICAgICAgdnJldjogVG9rZW4uVUlOVDguZ2V0KGJ1Ziwgb2ZmICsgOSksXG4gICAgICAgICAgICB2bWJ3OiBUb2tlbi5VSU5UMTZfQkUuZ2V0KGJ1Ziwgb2ZmICsgMTApLFxuICAgICAgICAgICAgdm1iaDogVG9rZW4uVUlOVDE2X0JFLmdldChidWYsIG9mZiArIDE3KSxcbiAgICAgICAgICAgIG5vbWJyOiBUb2tlbi5VSU5UMjRfQkUuZ2V0KGJ1Ziwgb2ZmICsgMzcpLFxuICAgICAgICAgICAgbnF1YWw6IFRva2VuLlVJTlQ4LmdldChidWYsIG9mZiArIDQwKVxuICAgICAgICB9O1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UaGVvcmEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ogg/theora/Theora.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/ogg/theora/TheoraParser.js":
/*!********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/ogg/theora/TheoraParser.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TheoraParser: () => (/* binding */ TheoraParser)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _Theora_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Theora.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/theora/Theora.js\");\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('music-metadata:parser:ogg:theora');\n/**\n * Ref:\n * - https://theora.org/doc/Theora.pdf\n */\nclass TheoraParser {\n    constructor(metadata, options, tokenizer) {\n        this.metadata = metadata;\n        this.tokenizer = tokenizer;\n    }\n    /**\n     * Vorbis 1 parser\n     * @param header Ogg Page Header\n     * @param pageData Page data\n     */\n    async parsePage(header, pageData) {\n        if (header.headerType.firstPage) {\n            await this.parseFirstPage(header, pageData);\n        }\n    }\n    async flush() {\n        debug('flush');\n    }\n    calculateDuration(header) {\n        debug('duration calculation not implemented');\n    }\n    /**\n     * Parse first Theora Ogg page. the initial identification header packet\n     * @param {IPageHeader} header\n     * @param {Buffer} pageData\n     */\n    async parseFirstPage(header, pageData) {\n        debug('First Ogg/Theora page');\n        this.metadata.setFormat('codec', 'Theora');\n        const idHeader = _Theora_js__WEBPACK_IMPORTED_MODULE_1__.IdentificationHeader.get(pageData, 0);\n        this.metadata.setFormat('bitrate', idHeader.nombr);\n    }\n}\n//# sourceMappingURL=TheoraParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL29nZy90aGVvcmEvVGhlb3JhUGFyc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QjtBQUNxQjtBQUNuRCxjQUFjLGtDQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsYUFBYTtBQUM1QixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsNERBQW9CO0FBQzdDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9vZ2cvdGhlb3JhL1RoZW9yYVBhcnNlci5qcz82NmFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpbml0RGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IHsgSWRlbnRpZmljYXRpb25IZWFkZXIgfSBmcm9tICcuL1RoZW9yYS5qcyc7XG5jb25zdCBkZWJ1ZyA9IGluaXREZWJ1ZygnbXVzaWMtbWV0YWRhdGE6cGFyc2VyOm9nZzp0aGVvcmEnKTtcbi8qKlxuICogUmVmOlxuICogLSBodHRwczovL3RoZW9yYS5vcmcvZG9jL1RoZW9yYS5wZGZcbiAqL1xuZXhwb3J0IGNsYXNzIFRoZW9yYVBhcnNlciB7XG4gICAgY29uc3RydWN0b3IobWV0YWRhdGEsIG9wdGlvbnMsIHRva2VuaXplcikge1xuICAgICAgICB0aGlzLm1ldGFkYXRhID0gbWV0YWRhdGE7XG4gICAgICAgIHRoaXMudG9rZW5pemVyID0gdG9rZW5pemVyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBWb3JiaXMgMSBwYXJzZXJcbiAgICAgKiBAcGFyYW0gaGVhZGVyIE9nZyBQYWdlIEhlYWRlclxuICAgICAqIEBwYXJhbSBwYWdlRGF0YSBQYWdlIGRhdGFcbiAgICAgKi9cbiAgICBhc3luYyBwYXJzZVBhZ2UoaGVhZGVyLCBwYWdlRGF0YSkge1xuICAgICAgICBpZiAoaGVhZGVyLmhlYWRlclR5cGUuZmlyc3RQYWdlKSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLnBhcnNlRmlyc3RQYWdlKGhlYWRlciwgcGFnZURhdGEpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIGZsdXNoKCkge1xuICAgICAgICBkZWJ1ZygnZmx1c2gnKTtcbiAgICB9XG4gICAgY2FsY3VsYXRlRHVyYXRpb24oaGVhZGVyKSB7XG4gICAgICAgIGRlYnVnKCdkdXJhdGlvbiBjYWxjdWxhdGlvbiBub3QgaW1wbGVtZW50ZWQnKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2UgZmlyc3QgVGhlb3JhIE9nZyBwYWdlLiB0aGUgaW5pdGlhbCBpZGVudGlmaWNhdGlvbiBoZWFkZXIgcGFja2V0XG4gICAgICogQHBhcmFtIHtJUGFnZUhlYWRlcn0gaGVhZGVyXG4gICAgICogQHBhcmFtIHtCdWZmZXJ9IHBhZ2VEYXRhXG4gICAgICovXG4gICAgYXN5bmMgcGFyc2VGaXJzdFBhZ2UoaGVhZGVyLCBwYWdlRGF0YSkge1xuICAgICAgICBkZWJ1ZygnRmlyc3QgT2dnL1RoZW9yYSBwYWdlJyk7XG4gICAgICAgIHRoaXMubWV0YWRhdGEuc2V0Rm9ybWF0KCdjb2RlYycsICdUaGVvcmEnKTtcbiAgICAgICAgY29uc3QgaWRIZWFkZXIgPSBJZGVudGlmaWNhdGlvbkhlYWRlci5nZXQocGFnZURhdGEsIDApO1xuICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnYml0cmF0ZScsIGlkSGVhZGVyLm5vbWJyKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UaGVvcmFQYXJzZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ogg/theora/TheoraParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/Vorbis.js":
/*!**************************************************************!*\
  !*** ./node_modules/music-metadata/lib/ogg/vorbis/Vorbis.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CommonHeader: () => (/* binding */ CommonHeader),\n/* harmony export */   IdentificationHeader: () => (/* binding */ IdentificationHeader),\n/* harmony export */   VorbisPictureToken: () => (/* binding */ VorbisPictureToken)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _id3v2_ID3v2Token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../id3v2/ID3v2Token.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v2Token.js\");\n\n\n/**\n * Parse the METADATA_BLOCK_PICTURE\n * Ref: https://wiki.xiph.org/VorbisComment#METADATA_BLOCK_PICTURE\n * Ref: https://xiph.org/flac/format.html#metadata_block_picture\n * // ToDo: move to ID3 / APIC?\n */\nclass VorbisPictureToken {\n    static fromBase64(base64str) {\n        return VorbisPictureToken.fromBuffer(Uint8Array.from(atob(base64str), c => c.charCodeAt(0)));\n    }\n    static fromBuffer(buffer) {\n        const pic = new VorbisPictureToken(buffer.length);\n        return pic.get(buffer, 0);\n    }\n    constructor(len) {\n        this.len = len;\n    }\n    get(buffer, offset) {\n        const type = _id3v2_ID3v2Token_js__WEBPACK_IMPORTED_MODULE_1__.AttachedPictureType[token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buffer, offset)];\n        offset += 4;\n        const mimeLen = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const format = new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(mimeLen, 'utf-8').get(buffer, offset);\n        offset += mimeLen;\n        const descLen = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const description = new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(descLen, 'utf-8').get(buffer, offset);\n        offset += descLen;\n        const width = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const height = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const colour_depth = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const indexed_color = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const picDataLen = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const data = Uint8Array.from(buffer.slice(offset, offset + picDataLen));\n        return {\n            type,\n            format,\n            description,\n            width,\n            height,\n            colour_depth,\n            indexed_color,\n            data\n        };\n    }\n}\n/**\n * Comment header decoder\n * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-620004.2.1\n */\nconst CommonHeader = {\n    len: 7,\n    get: (buf, off) => {\n        return {\n            packetType: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(buf, off),\n            vorbis: new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(6, 'ascii').get(buf, off + 1)\n        };\n    }\n};\n/**\n * Identification header decoder\n * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-630004.2.2\n */\nconst IdentificationHeader = {\n    len: 23,\n    get: (uint8Array, off) => {\n        return {\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(uint8Array, off + 0),\n            channelMode: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(uint8Array, off + 4),\n            sampleRate: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(uint8Array, off + 5),\n            bitrateMax: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(uint8Array, off + 9),\n            bitrateNominal: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(uint8Array, off + 13),\n            bitrateMin: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(uint8Array, off + 17)\n        };\n    }\n};\n//# sourceMappingURL=Vorbis.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL29nZy92b3JiaXMvVm9yYmlzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXFDO0FBQzJCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixxRUFBbUIsQ0FBQyxrREFBZTtBQUN4RDtBQUNBLHdCQUF3QixrREFBZTtBQUN2QztBQUNBLDJCQUEyQixtREFBZ0I7QUFDM0M7QUFDQSx3QkFBd0Isa0RBQWU7QUFDdkM7QUFDQSxnQ0FBZ0MsbURBQWdCO0FBQ2hEO0FBQ0Esc0JBQXNCLGtEQUFlO0FBQ3JDO0FBQ0EsdUJBQXVCLGtEQUFlO0FBQ3RDO0FBQ0EsNkJBQTZCLGtEQUFlO0FBQzVDO0FBQ0EsOEJBQThCLGtEQUFlO0FBQzdDO0FBQ0EsMkJBQTJCLGtEQUFlO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDhDQUFXO0FBQ25DLHdCQUF3QixtREFBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixrREFBZTtBQUNwQyx5QkFBeUIsOENBQVc7QUFDcEMsd0JBQXdCLGtEQUFlO0FBQ3ZDLHdCQUF3QixrREFBZTtBQUN2Qyw0QkFBNEIsa0RBQWU7QUFDM0Msd0JBQXdCLGtEQUFlO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9vZ2cvdm9yYmlzL1ZvcmJpcy5qcz81NDkwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFRva2VuIGZyb20gJ3Rva2VuLXR5cGVzJztcbmltcG9ydCB7IEF0dGFjaGVkUGljdHVyZVR5cGUgfSBmcm9tICcuLi8uLi9pZDN2Mi9JRDN2MlRva2VuLmpzJztcbi8qKlxuICogUGFyc2UgdGhlIE1FVEFEQVRBX0JMT0NLX1BJQ1RVUkVcbiAqIFJlZjogaHR0cHM6Ly93aWtpLnhpcGgub3JnL1ZvcmJpc0NvbW1lbnQjTUVUQURBVEFfQkxPQ0tfUElDVFVSRVxuICogUmVmOiBodHRwczovL3hpcGgub3JnL2ZsYWMvZm9ybWF0Lmh0bWwjbWV0YWRhdGFfYmxvY2tfcGljdHVyZVxuICogLy8gVG9EbzogbW92ZSB0byBJRDMgLyBBUElDP1xuICovXG5leHBvcnQgY2xhc3MgVm9yYmlzUGljdHVyZVRva2VuIHtcbiAgICBzdGF0aWMgZnJvbUJhc2U2NChiYXNlNjRzdHIpIHtcbiAgICAgICAgcmV0dXJuIFZvcmJpc1BpY3R1cmVUb2tlbi5mcm9tQnVmZmVyKFVpbnQ4QXJyYXkuZnJvbShhdG9iKGJhc2U2NHN0ciksIGMgPT4gYy5jaGFyQ29kZUF0KDApKSk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tQnVmZmVyKGJ1ZmZlcikge1xuICAgICAgICBjb25zdCBwaWMgPSBuZXcgVm9yYmlzUGljdHVyZVRva2VuKGJ1ZmZlci5sZW5ndGgpO1xuICAgICAgICByZXR1cm4gcGljLmdldChidWZmZXIsIDApO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihsZW4pIHtcbiAgICAgICAgdGhpcy5sZW4gPSBsZW47XG4gICAgfVxuICAgIGdldChidWZmZXIsIG9mZnNldCkge1xuICAgICAgICBjb25zdCB0eXBlID0gQXR0YWNoZWRQaWN0dXJlVHlwZVtUb2tlbi5VSU5UMzJfQkUuZ2V0KGJ1ZmZlciwgb2Zmc2V0KV07XG4gICAgICAgIG9mZnNldCArPSA0O1xuICAgICAgICBjb25zdCBtaW1lTGVuID0gVG9rZW4uVUlOVDMyX0JFLmdldChidWZmZXIsIG9mZnNldCk7XG4gICAgICAgIG9mZnNldCArPSA0O1xuICAgICAgICBjb25zdCBmb3JtYXQgPSBuZXcgVG9rZW4uU3RyaW5nVHlwZShtaW1lTGVuLCAndXRmLTgnKS5nZXQoYnVmZmVyLCBvZmZzZXQpO1xuICAgICAgICBvZmZzZXQgKz0gbWltZUxlbjtcbiAgICAgICAgY29uc3QgZGVzY0xlbiA9IFRva2VuLlVJTlQzMl9CRS5nZXQoYnVmZmVyLCBvZmZzZXQpO1xuICAgICAgICBvZmZzZXQgKz0gNDtcbiAgICAgICAgY29uc3QgZGVzY3JpcHRpb24gPSBuZXcgVG9rZW4uU3RyaW5nVHlwZShkZXNjTGVuLCAndXRmLTgnKS5nZXQoYnVmZmVyLCBvZmZzZXQpO1xuICAgICAgICBvZmZzZXQgKz0gZGVzY0xlbjtcbiAgICAgICAgY29uc3Qgd2lkdGggPSBUb2tlbi5VSU5UMzJfQkUuZ2V0KGJ1ZmZlciwgb2Zmc2V0KTtcbiAgICAgICAgb2Zmc2V0ICs9IDQ7XG4gICAgICAgIGNvbnN0IGhlaWdodCA9IFRva2VuLlVJTlQzMl9CRS5nZXQoYnVmZmVyLCBvZmZzZXQpO1xuICAgICAgICBvZmZzZXQgKz0gNDtcbiAgICAgICAgY29uc3QgY29sb3VyX2RlcHRoID0gVG9rZW4uVUlOVDMyX0JFLmdldChidWZmZXIsIG9mZnNldCk7XG4gICAgICAgIG9mZnNldCArPSA0O1xuICAgICAgICBjb25zdCBpbmRleGVkX2NvbG9yID0gVG9rZW4uVUlOVDMyX0JFLmdldChidWZmZXIsIG9mZnNldCk7XG4gICAgICAgIG9mZnNldCArPSA0O1xuICAgICAgICBjb25zdCBwaWNEYXRhTGVuID0gVG9rZW4uVUlOVDMyX0JFLmdldChidWZmZXIsIG9mZnNldCk7XG4gICAgICAgIG9mZnNldCArPSA0O1xuICAgICAgICBjb25zdCBkYXRhID0gVWludDhBcnJheS5mcm9tKGJ1ZmZlci5zbGljZShvZmZzZXQsIG9mZnNldCArIHBpY0RhdGFMZW4pKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICBmb3JtYXQsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbixcbiAgICAgICAgICAgIHdpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0LFxuICAgICAgICAgICAgY29sb3VyX2RlcHRoLFxuICAgICAgICAgICAgaW5kZXhlZF9jb2xvcixcbiAgICAgICAgICAgIGRhdGFcbiAgICAgICAgfTtcbiAgICB9XG59XG4vKipcbiAqIENvbW1lbnQgaGVhZGVyIGRlY29kZXJcbiAqIFJlZjogaHR0cHM6Ly94aXBoLm9yZy92b3JiaXMvZG9jL1ZvcmJpc19JX3NwZWMuaHRtbCN4MS02MjAwMDQuMi4xXG4gKi9cbmV4cG9ydCBjb25zdCBDb21tb25IZWFkZXIgPSB7XG4gICAgbGVuOiA3LFxuICAgIGdldDogKGJ1Ziwgb2ZmKSA9PiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwYWNrZXRUeXBlOiBUb2tlbi5VSU5UOC5nZXQoYnVmLCBvZmYpLFxuICAgICAgICAgICAgdm9yYmlzOiBuZXcgVG9rZW4uU3RyaW5nVHlwZSg2LCAnYXNjaWknKS5nZXQoYnVmLCBvZmYgKyAxKVxuICAgICAgICB9O1xuICAgIH1cbn07XG4vKipcbiAqIElkZW50aWZpY2F0aW9uIGhlYWRlciBkZWNvZGVyXG4gKiBSZWY6IGh0dHBzOi8veGlwaC5vcmcvdm9yYmlzL2RvYy9Wb3JiaXNfSV9zcGVjLmh0bWwjeDEtNjMwMDA0LjIuMlxuICovXG5leHBvcnQgY29uc3QgSWRlbnRpZmljYXRpb25IZWFkZXIgPSB7XG4gICAgbGVuOiAyMyxcbiAgICBnZXQ6ICh1aW50OEFycmF5LCBvZmYpID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZlcnNpb246IFRva2VuLlVJTlQzMl9MRS5nZXQodWludDhBcnJheSwgb2ZmICsgMCksXG4gICAgICAgICAgICBjaGFubmVsTW9kZTogVG9rZW4uVUlOVDguZ2V0KHVpbnQ4QXJyYXksIG9mZiArIDQpLFxuICAgICAgICAgICAgc2FtcGxlUmF0ZTogVG9rZW4uVUlOVDMyX0xFLmdldCh1aW50OEFycmF5LCBvZmYgKyA1KSxcbiAgICAgICAgICAgIGJpdHJhdGVNYXg6IFRva2VuLlVJTlQzMl9MRS5nZXQodWludDhBcnJheSwgb2ZmICsgOSksXG4gICAgICAgICAgICBiaXRyYXRlTm9taW5hbDogVG9rZW4uVUlOVDMyX0xFLmdldCh1aW50OEFycmF5LCBvZmYgKyAxMyksXG4gICAgICAgICAgICBiaXRyYXRlTWluOiBUb2tlbi5VSU5UMzJfTEUuZ2V0KHVpbnQ4QXJyYXksIG9mZiArIDE3KVxuICAgICAgICB9O1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Wb3JiaXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/Vorbis.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/VorbisDecoder.js":
/*!*********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/ogg/vorbis/VorbisDecoder.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VorbisDecoder: () => (/* binding */ VorbisDecoder)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n\nclass VorbisDecoder {\n    constructor(data, offset) {\n        this.data = data;\n        this.offset = offset;\n    }\n    readInt32() {\n        const value = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(this.data, this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readStringUtf8() {\n        const len = this.readInt32();\n        const value = new TextDecoder('utf-8').decode(this.data.subarray(this.offset, this.offset + len));\n        this.offset += len;\n        return value;\n    }\n    parseUserComment() {\n        const offset0 = this.offset;\n        const v = this.readStringUtf8();\n        const idx = v.indexOf('=');\n        return {\n            key: v.slice(0, idx).toUpperCase(),\n            value: v.slice(idx + 1),\n            len: this.offset - offset0\n        };\n    }\n}\n//# sourceMappingURL=VorbisDecoder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL29nZy92b3JiaXMvVm9yYmlzRGVjb2Rlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxQztBQUM5QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isa0RBQWU7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9vZ2cvdm9yYmlzL1ZvcmJpc0RlY29kZXIuanM/MzE3MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBUb2tlbiBmcm9tICd0b2tlbi10eXBlcyc7XG5leHBvcnQgY2xhc3MgVm9yYmlzRGVjb2RlciB7XG4gICAgY29uc3RydWN0b3IoZGF0YSwgb2Zmc2V0KSB7XG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gb2Zmc2V0O1xuICAgIH1cbiAgICByZWFkSW50MzIoKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gVG9rZW4uVUlOVDMyX0xFLmdldCh0aGlzLmRhdGEsIHRoaXMub2Zmc2V0KTtcbiAgICAgICAgdGhpcy5vZmZzZXQgKz0gNDtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICByZWFkU3RyaW5nVXRmOCgpIHtcbiAgICAgICAgY29uc3QgbGVuID0gdGhpcy5yZWFkSW50MzIoKTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBuZXcgVGV4dERlY29kZXIoJ3V0Zi04JykuZGVjb2RlKHRoaXMuZGF0YS5zdWJhcnJheSh0aGlzLm9mZnNldCwgdGhpcy5vZmZzZXQgKyBsZW4pKTtcbiAgICAgICAgdGhpcy5vZmZzZXQgKz0gbGVuO1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIHBhcnNlVXNlckNvbW1lbnQoKSB7XG4gICAgICAgIGNvbnN0IG9mZnNldDAgPSB0aGlzLm9mZnNldDtcbiAgICAgICAgY29uc3QgdiA9IHRoaXMucmVhZFN0cmluZ1V0ZjgoKTtcbiAgICAgICAgY29uc3QgaWR4ID0gdi5pbmRleE9mKCc9Jyk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBrZXk6IHYuc2xpY2UoMCwgaWR4KS50b1VwcGVyQ2FzZSgpLFxuICAgICAgICAgICAgdmFsdWU6IHYuc2xpY2UoaWR4ICsgMSksXG4gICAgICAgICAgICBsZW46IHRoaXMub2Zmc2V0IC0gb2Zmc2V0MFxuICAgICAgICB9O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVZvcmJpc0RlY29kZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/VorbisDecoder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/VorbisParser.js":
/*!********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/ogg/vorbis/VorbisParser.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VorbisContentError: () => (/* binding */ VorbisContentError),\n/* harmony export */   VorbisParser: () => (/* binding */ VorbisParser)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _VorbisDecoder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./VorbisDecoder.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/VorbisDecoder.js\");\n/* harmony import */ var _Vorbis_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Vorbis.js */ \"(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/Vorbis.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_1__('music-metadata:parser:ogg:vorbis1');\nclass VorbisContentError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_4__.makeUnexpectedFileContentError)('Vorbis') {\n}\n/**\n * Vorbis 1 Parser.\n * Used by OggParser\n */\nclass VorbisParser {\n    constructor(metadata, options) {\n        this.metadata = metadata;\n        this.options = options;\n        this.pageSegments = [];\n    }\n    /**\n     * Vorbis 1 parser\n     * @param header Ogg Page Header\n     * @param pageData Page data\n     */\n    async parsePage(header, pageData) {\n        if (header.headerType.firstPage) {\n            this.parseFirstPage(header, pageData);\n        }\n        else {\n            if (header.headerType.continued) {\n                if (this.pageSegments.length === 0) {\n                    throw new VorbisContentError('Cannot continue on previous page');\n                }\n                this.pageSegments.push(pageData);\n            }\n            if (header.headerType.lastPage || !header.headerType.continued) {\n                // Flush page segments\n                if (this.pageSegments.length > 0) {\n                    const fullPage = VorbisParser.mergeUint8Arrays(this.pageSegments);\n                    await this.parseFullPage(fullPage);\n                }\n                // Reset page segments\n                this.pageSegments = header.headerType.lastPage ? [] : [pageData];\n            }\n        }\n        if (header.headerType.lastPage) {\n            this.calculateDuration(header);\n        }\n    }\n    static mergeUint8Arrays(arrays) {\n        const totalSize = arrays.reduce((acc, e) => acc + e.length, 0);\n        const merged = new Uint8Array(totalSize);\n        arrays.forEach((array, i, _arrays) => {\n            const offset = _arrays.slice(0, i).reduce((acc, e) => acc + e.length, 0);\n            merged.set(array, offset);\n        });\n        return merged;\n    }\n    async flush() {\n        await this.parseFullPage(VorbisParser.mergeUint8Arrays(this.pageSegments));\n    }\n    async parseUserComment(pageData, offset) {\n        const decoder = new _VorbisDecoder_js__WEBPACK_IMPORTED_MODULE_2__.VorbisDecoder(pageData, offset);\n        const tag = decoder.parseUserComment();\n        await this.addTag(tag.key, tag.value);\n        return tag.len;\n    }\n    async addTag(id, value) {\n        if (id === 'METADATA_BLOCK_PICTURE' && (typeof value === 'string')) {\n            if (this.options.skipCovers) {\n                debug(\"Ignore picture\");\n                return;\n            }\n            value = _Vorbis_js__WEBPACK_IMPORTED_MODULE_3__.VorbisPictureToken.fromBase64(value);\n            debug(`Push picture: id=${id}, format=${value.format}`);\n        }\n        else {\n            debug(`Push tag: id=${id}, value=${value}`);\n        }\n        await this.metadata.addTag('vorbis', id, value);\n    }\n    calculateDuration(header) {\n        if (this.metadata.format.sampleRate && header.absoluteGranulePosition >= 0) {\n            // Calculate duration\n            this.metadata.setFormat('numberOfSamples', header.absoluteGranulePosition);\n            this.metadata.setFormat('duration', header.absoluteGranulePosition / this.metadata.format.sampleRate);\n        }\n    }\n    /**\n     * Parse first Ogg/Vorbis page\n     * @param header\n     * @param pageData\n     */\n    parseFirstPage(header, pageData) {\n        this.metadata.setFormat('codec', 'Vorbis I');\n        debug('Parse first page');\n        // Parse  Vorbis common header\n        const commonHeader = _Vorbis_js__WEBPACK_IMPORTED_MODULE_3__.CommonHeader.get(pageData, 0);\n        if (commonHeader.vorbis !== 'vorbis')\n            throw new VorbisContentError('Metadata does not look like Vorbis');\n        if (commonHeader.packetType === 1) {\n            const idHeader = _Vorbis_js__WEBPACK_IMPORTED_MODULE_3__.IdentificationHeader.get(pageData, _Vorbis_js__WEBPACK_IMPORTED_MODULE_3__.CommonHeader.len);\n            this.metadata.setFormat('sampleRate', idHeader.sampleRate);\n            this.metadata.setFormat('bitrate', idHeader.bitrateNominal);\n            this.metadata.setFormat('numberOfChannels', idHeader.channelMode);\n            debug('sample-rate=%s[hz], bitrate=%s[b/s], channel-mode=%s', idHeader.sampleRate, idHeader.bitrateNominal, idHeader.channelMode);\n        }\n        else\n            throw new VorbisContentError('First Ogg page should be type 1: the identification header');\n    }\n    async parseFullPage(pageData) {\n        // New page\n        const commonHeader = _Vorbis_js__WEBPACK_IMPORTED_MODULE_3__.CommonHeader.get(pageData, 0);\n        debug('Parse full page: type=%s, byteLength=%s', commonHeader.packetType, pageData.byteLength);\n        switch (commonHeader.packetType) {\n            case 3: //  type 3: comment header\n                return this.parseUserCommentList(pageData, _Vorbis_js__WEBPACK_IMPORTED_MODULE_3__.CommonHeader.len);\n            case 1: // type 1: the identification header\n            case 5: // type 5: setup header type\n                break; // ignore\n        }\n    }\n    /**\n     * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-840005.2\n     */\n    async parseUserCommentList(pageData, offset) {\n        const strLen = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(pageData, offset);\n        offset += 4;\n        // const vendorString = new Token.StringType(strLen, 'utf-8').get(pageData, offset);\n        offset += strLen;\n        let userCommentListLength = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(pageData, offset);\n        offset += 4;\n        while (userCommentListLength-- > 0) {\n            offset += (await this.parseUserComment(pageData, offset));\n        }\n    }\n}\n//# sourceMappingURL=VorbisParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/VorbisParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/VorbisTagMapper.js":
/*!***********************************************************************!*\
  !*** ./node_modules/music-metadata/lib/ogg/vorbis/VorbisTagMapper.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VorbisTagMapper: () => (/* binding */ VorbisTagMapper)\n/* harmony export */ });\n/* harmony import */ var _common_GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/GenericTagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/common/GenericTagMapper.js\");\n\n/**\n * Vorbis tag mappings\n *\n * Mapping from native header format to one or possibly more 'common' entries\n * The common entries aim to read the same information from different media files\n * independent of the underlying format\n */\nconst vorbisTagMap = {\n    TITLE: 'title',\n    ARTIST: 'artist',\n    ARTISTS: 'artists',\n    ALBUMARTIST: 'albumartist',\n    'ALBUM ARTIST': 'albumartist',\n    ALBUM: 'album',\n    DATE: 'date',\n    ORIGINALDATE: 'originaldate',\n    ORIGINALYEAR: 'originalyear',\n    RELEASEDATE: 'releasedate',\n    COMMENT: 'comment',\n    TRACKNUMBER: 'track',\n    DISCNUMBER: 'disk',\n    GENRE: 'genre',\n    METADATA_BLOCK_PICTURE: 'picture',\n    COMPOSER: 'composer',\n    LYRICS: 'lyrics',\n    ALBUMSORT: 'albumsort',\n    TITLESORT: 'titlesort',\n    WORK: 'work',\n    ARTISTSORT: 'artistsort',\n    ALBUMARTISTSORT: 'albumartistsort',\n    COMPOSERSORT: 'composersort',\n    LYRICIST: 'lyricist',\n    WRITER: 'writer',\n    CONDUCTOR: 'conductor',\n    // 'PERFORMER=artist (instrument)': 'performer:instrument', // ToDo\n    REMIXER: 'remixer',\n    ARRANGER: 'arranger',\n    ENGINEER: 'engineer',\n    PRODUCER: 'producer',\n    DJMIXER: 'djmixer',\n    MIXER: 'mixer',\n    LABEL: 'label',\n    GROUPING: 'grouping',\n    SUBTITLE: 'subtitle',\n    DISCSUBTITLE: 'discsubtitle',\n    TRACKTOTAL: 'totaltracks',\n    DISCTOTAL: 'totaldiscs',\n    COMPILATION: 'compilation',\n    RATING: 'rating',\n    BPM: 'bpm',\n    KEY: 'key',\n    MOOD: 'mood',\n    MEDIA: 'media',\n    CATALOGNUMBER: 'catalognumber',\n    RELEASESTATUS: 'releasestatus',\n    RELEASETYPE: 'releasetype',\n    RELEASECOUNTRY: 'releasecountry',\n    SCRIPT: 'script',\n    LANGUAGE: 'language',\n    COPYRIGHT: 'copyright',\n    LICENSE: 'license',\n    ENCODEDBY: 'encodedby',\n    ENCODERSETTINGS: 'encodersettings',\n    BARCODE: 'barcode',\n    ISRC: 'isrc',\n    ASIN: 'asin',\n    MUSICBRAINZ_TRACKID: 'musicbrainz_recordingid',\n    MUSICBRAINZ_RELEASETRACKID: 'musicbrainz_trackid',\n    MUSICBRAINZ_ALBUMID: 'musicbrainz_albumid',\n    MUSICBRAINZ_ARTISTID: 'musicbrainz_artistid',\n    MUSICBRAINZ_ALBUMARTISTID: 'musicbrainz_albumartistid',\n    MUSICBRAINZ_RELEASEGROUPID: 'musicbrainz_releasegroupid',\n    MUSICBRAINZ_WORKID: 'musicbrainz_workid',\n    MUSICBRAINZ_TRMID: 'musicbrainz_trmid',\n    MUSICBRAINZ_DISCID: 'musicbrainz_discid',\n    ACOUSTID_ID: 'acoustid_id',\n    ACOUSTID_ID_FINGERPRINT: 'acoustid_fingerprint',\n    MUSICIP_PUID: 'musicip_puid',\n    // 'FINGERPRINT=MusicMagic Fingerprint {fingerprint}': 'musicip_fingerprint', // ToDo\n    WEBSITE: 'website',\n    NOTES: 'notes',\n    TOTALTRACKS: 'totaltracks',\n    TOTALDISCS: 'totaldiscs',\n    // Discogs\n    DISCOGS_ARTIST_ID: 'discogs_artist_id',\n    DISCOGS_ARTISTS: 'artists',\n    DISCOGS_ARTIST_NAME: 'artists',\n    DISCOGS_ALBUM_ARTISTS: 'albumartist',\n    DISCOGS_CATALOG: 'catalognumber',\n    DISCOGS_COUNTRY: 'releasecountry',\n    DISCOGS_DATE: 'originaldate',\n    DISCOGS_LABEL: 'label',\n    DISCOGS_LABEL_ID: 'discogs_label_id',\n    DISCOGS_MASTER_RELEASE_ID: 'discogs_master_release_id',\n    DISCOGS_RATING: 'discogs_rating',\n    DISCOGS_RELEASED: 'date',\n    DISCOGS_RELEASE_ID: 'discogs_release_id',\n    DISCOGS_VOTES: 'discogs_votes',\n    CATALOGID: 'catalognumber',\n    STYLE: 'genre',\n    //\n    REPLAYGAIN_TRACK_GAIN: 'replaygain_track_gain',\n    REPLAYGAIN_TRACK_PEAK: 'replaygain_track_peak',\n    REPLAYGAIN_ALBUM_GAIN: 'replaygain_album_gain',\n    REPLAYGAIN_ALBUM_PEAK: 'replaygain_album_peak',\n    // To Sure if these (REPLAYGAIN_MINMAX, REPLAYGAIN_ALBUM_MINMAX & REPLAYGAIN_UNDO) are used for Vorbis:\n    REPLAYGAIN_MINMAX: 'replaygain_track_minmax',\n    REPLAYGAIN_ALBUM_MINMAX: 'replaygain_album_minmax',\n    REPLAYGAIN_UNDO: 'replaygain_undo'\n};\nclass VorbisTagMapper extends _common_GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_0__.CommonTagMapper {\n    static toRating(email, rating, maxScore) {\n        return {\n            source: email ? email.toLowerCase() : undefined,\n            rating: (Number.parseFloat(rating) / maxScore) * _common_GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_0__.CommonTagMapper.maxRatingScore\n        };\n    }\n    constructor() {\n        super(['vorbis'], vorbisTagMap);\n    }\n    postMap(tag) {\n        if (tag.id === 'RATING') {\n            // The way Winamp 5.666 assigns rating\n            tag.value = VorbisTagMapper.toRating(undefined, tag.value, 100);\n        }\n        else if (tag.id.indexOf('RATING:') === 0) {\n            const keys = tag.id.split(':');\n            tag.value = VorbisTagMapper.toRating(keys[1], tag.value, 1);\n            tag.id = keys[0];\n        }\n    }\n}\n//# sourceMappingURL=VorbisTagMapper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL29nZy92b3JiaXMvVm9yYmlzVGFnTWFwcGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1FO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxZQUFZO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sOEJBQThCLHdFQUFlO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCx3RUFBZTtBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL29nZy92b3JiaXMvVm9yYmlzVGFnTWFwcGVyLmpzP2M2MDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uVGFnTWFwcGVyIH0gZnJvbSAnLi4vLi4vY29tbW9uL0dlbmVyaWNUYWdNYXBwZXIuanMnO1xuLyoqXG4gKiBWb3JiaXMgdGFnIG1hcHBpbmdzXG4gKlxuICogTWFwcGluZyBmcm9tIG5hdGl2ZSBoZWFkZXIgZm9ybWF0IHRvIG9uZSBvciBwb3NzaWJseSBtb3JlICdjb21tb24nIGVudHJpZXNcbiAqIFRoZSBjb21tb24gZW50cmllcyBhaW0gdG8gcmVhZCB0aGUgc2FtZSBpbmZvcm1hdGlvbiBmcm9tIGRpZmZlcmVudCBtZWRpYSBmaWxlc1xuICogaW5kZXBlbmRlbnQgb2YgdGhlIHVuZGVybHlpbmcgZm9ybWF0XG4gKi9cbmNvbnN0IHZvcmJpc1RhZ01hcCA9IHtcbiAgICBUSVRMRTogJ3RpdGxlJyxcbiAgICBBUlRJU1Q6ICdhcnRpc3QnLFxuICAgIEFSVElTVFM6ICdhcnRpc3RzJyxcbiAgICBBTEJVTUFSVElTVDogJ2FsYnVtYXJ0aXN0JyxcbiAgICAnQUxCVU0gQVJUSVNUJzogJ2FsYnVtYXJ0aXN0JyxcbiAgICBBTEJVTTogJ2FsYnVtJyxcbiAgICBEQVRFOiAnZGF0ZScsXG4gICAgT1JJR0lOQUxEQVRFOiAnb3JpZ2luYWxkYXRlJyxcbiAgICBPUklHSU5BTFlFQVI6ICdvcmlnaW5hbHllYXInLFxuICAgIFJFTEVBU0VEQVRFOiAncmVsZWFzZWRhdGUnLFxuICAgIENPTU1FTlQ6ICdjb21tZW50JyxcbiAgICBUUkFDS05VTUJFUjogJ3RyYWNrJyxcbiAgICBESVNDTlVNQkVSOiAnZGlzaycsXG4gICAgR0VOUkU6ICdnZW5yZScsXG4gICAgTUVUQURBVEFfQkxPQ0tfUElDVFVSRTogJ3BpY3R1cmUnLFxuICAgIENPTVBPU0VSOiAnY29tcG9zZXInLFxuICAgIExZUklDUzogJ2x5cmljcycsXG4gICAgQUxCVU1TT1JUOiAnYWxidW1zb3J0JyxcbiAgICBUSVRMRVNPUlQ6ICd0aXRsZXNvcnQnLFxuICAgIFdPUks6ICd3b3JrJyxcbiAgICBBUlRJU1RTT1JUOiAnYXJ0aXN0c29ydCcsXG4gICAgQUxCVU1BUlRJU1RTT1JUOiAnYWxidW1hcnRpc3Rzb3J0JyxcbiAgICBDT01QT1NFUlNPUlQ6ICdjb21wb3NlcnNvcnQnLFxuICAgIExZUklDSVNUOiAnbHlyaWNpc3QnLFxuICAgIFdSSVRFUjogJ3dyaXRlcicsXG4gICAgQ09ORFVDVE9SOiAnY29uZHVjdG9yJyxcbiAgICAvLyAnUEVSRk9STUVSPWFydGlzdMKgKGluc3RydW1lbnQpJzogJ3BlcmZvcm1lcjppbnN0cnVtZW50JywgLy8gVG9Eb1xuICAgIFJFTUlYRVI6ICdyZW1peGVyJyxcbiAgICBBUlJBTkdFUjogJ2FycmFuZ2VyJyxcbiAgICBFTkdJTkVFUjogJ2VuZ2luZWVyJyxcbiAgICBQUk9EVUNFUjogJ3Byb2R1Y2VyJyxcbiAgICBESk1JWEVSOiAnZGptaXhlcicsXG4gICAgTUlYRVI6ICdtaXhlcicsXG4gICAgTEFCRUw6ICdsYWJlbCcsXG4gICAgR1JPVVBJTkc6ICdncm91cGluZycsXG4gICAgU1VCVElUTEU6ICdzdWJ0aXRsZScsXG4gICAgRElTQ1NVQlRJVExFOiAnZGlzY3N1YnRpdGxlJyxcbiAgICBUUkFDS1RPVEFMOiAndG90YWx0cmFja3MnLFxuICAgIERJU0NUT1RBTDogJ3RvdGFsZGlzY3MnLFxuICAgIENPTVBJTEFUSU9OOiAnY29tcGlsYXRpb24nLFxuICAgIFJBVElORzogJ3JhdGluZycsXG4gICAgQlBNOiAnYnBtJyxcbiAgICBLRVk6ICdrZXknLFxuICAgIE1PT0Q6ICdtb29kJyxcbiAgICBNRURJQTogJ21lZGlhJyxcbiAgICBDQVRBTE9HTlVNQkVSOiAnY2F0YWxvZ251bWJlcicsXG4gICAgUkVMRUFTRVNUQVRVUzogJ3JlbGVhc2VzdGF0dXMnLFxuICAgIFJFTEVBU0VUWVBFOiAncmVsZWFzZXR5cGUnLFxuICAgIFJFTEVBU0VDT1VOVFJZOiAncmVsZWFzZWNvdW50cnknLFxuICAgIFNDUklQVDogJ3NjcmlwdCcsXG4gICAgTEFOR1VBR0U6ICdsYW5ndWFnZScsXG4gICAgQ09QWVJJR0hUOiAnY29weXJpZ2h0JyxcbiAgICBMSUNFTlNFOiAnbGljZW5zZScsXG4gICAgRU5DT0RFREJZOiAnZW5jb2RlZGJ5JyxcbiAgICBFTkNPREVSU0VUVElOR1M6ICdlbmNvZGVyc2V0dGluZ3MnLFxuICAgIEJBUkNPREU6ICdiYXJjb2RlJyxcbiAgICBJU1JDOiAnaXNyYycsXG4gICAgQVNJTjogJ2FzaW4nLFxuICAgIE1VU0lDQlJBSU5aX1RSQUNLSUQ6ICdtdXNpY2JyYWluel9yZWNvcmRpbmdpZCcsXG4gICAgTVVTSUNCUkFJTlpfUkVMRUFTRVRSQUNLSUQ6ICdtdXNpY2JyYWluel90cmFja2lkJyxcbiAgICBNVVNJQ0JSQUlOWl9BTEJVTUlEOiAnbXVzaWNicmFpbnpfYWxidW1pZCcsXG4gICAgTVVTSUNCUkFJTlpfQVJUSVNUSUQ6ICdtdXNpY2JyYWluel9hcnRpc3RpZCcsXG4gICAgTVVTSUNCUkFJTlpfQUxCVU1BUlRJU1RJRDogJ211c2ljYnJhaW56X2FsYnVtYXJ0aXN0aWQnLFxuICAgIE1VU0lDQlJBSU5aX1JFTEVBU0VHUk9VUElEOiAnbXVzaWNicmFpbnpfcmVsZWFzZWdyb3VwaWQnLFxuICAgIE1VU0lDQlJBSU5aX1dPUktJRDogJ211c2ljYnJhaW56X3dvcmtpZCcsXG4gICAgTVVTSUNCUkFJTlpfVFJNSUQ6ICdtdXNpY2JyYWluel90cm1pZCcsXG4gICAgTVVTSUNCUkFJTlpfRElTQ0lEOiAnbXVzaWNicmFpbnpfZGlzY2lkJyxcbiAgICBBQ09VU1RJRF9JRDogJ2Fjb3VzdGlkX2lkJyxcbiAgICBBQ09VU1RJRF9JRF9GSU5HRVJQUklOVDogJ2Fjb3VzdGlkX2ZpbmdlcnByaW50JyxcbiAgICBNVVNJQ0lQX1BVSUQ6ICdtdXNpY2lwX3B1aWQnLFxuICAgIC8vICdGSU5HRVJQUklOVD1NdXNpY01hZ2ljIEZpbmdlcnByaW50wqB7ZmluZ2VycHJpbnR9JzogJ211c2ljaXBfZmluZ2VycHJpbnQnLCAvLyBUb0RvXG4gICAgV0VCU0lURTogJ3dlYnNpdGUnLFxuICAgIE5PVEVTOiAnbm90ZXMnLFxuICAgIFRPVEFMVFJBQ0tTOiAndG90YWx0cmFja3MnLFxuICAgIFRPVEFMRElTQ1M6ICd0b3RhbGRpc2NzJyxcbiAgICAvLyBEaXNjb2dzXG4gICAgRElTQ09HU19BUlRJU1RfSUQ6ICdkaXNjb2dzX2FydGlzdF9pZCcsXG4gICAgRElTQ09HU19BUlRJU1RTOiAnYXJ0aXN0cycsXG4gICAgRElTQ09HU19BUlRJU1RfTkFNRTogJ2FydGlzdHMnLFxuICAgIERJU0NPR1NfQUxCVU1fQVJUSVNUUzogJ2FsYnVtYXJ0aXN0JyxcbiAgICBESVNDT0dTX0NBVEFMT0c6ICdjYXRhbG9nbnVtYmVyJyxcbiAgICBESVNDT0dTX0NPVU5UUlk6ICdyZWxlYXNlY291bnRyeScsXG4gICAgRElTQ09HU19EQVRFOiAnb3JpZ2luYWxkYXRlJyxcbiAgICBESVNDT0dTX0xBQkVMOiAnbGFiZWwnLFxuICAgIERJU0NPR1NfTEFCRUxfSUQ6ICdkaXNjb2dzX2xhYmVsX2lkJyxcbiAgICBESVNDT0dTX01BU1RFUl9SRUxFQVNFX0lEOiAnZGlzY29nc19tYXN0ZXJfcmVsZWFzZV9pZCcsXG4gICAgRElTQ09HU19SQVRJTkc6ICdkaXNjb2dzX3JhdGluZycsXG4gICAgRElTQ09HU19SRUxFQVNFRDogJ2RhdGUnLFxuICAgIERJU0NPR1NfUkVMRUFTRV9JRDogJ2Rpc2NvZ3NfcmVsZWFzZV9pZCcsXG4gICAgRElTQ09HU19WT1RFUzogJ2Rpc2NvZ3Nfdm90ZXMnLFxuICAgIENBVEFMT0dJRDogJ2NhdGFsb2dudW1iZXInLFxuICAgIFNUWUxFOiAnZ2VucmUnLFxuICAgIC8vXG4gICAgUkVQTEFZR0FJTl9UUkFDS19HQUlOOiAncmVwbGF5Z2Fpbl90cmFja19nYWluJyxcbiAgICBSRVBMQVlHQUlOX1RSQUNLX1BFQUs6ICdyZXBsYXlnYWluX3RyYWNrX3BlYWsnLFxuICAgIFJFUExBWUdBSU5fQUxCVU1fR0FJTjogJ3JlcGxheWdhaW5fYWxidW1fZ2FpbicsXG4gICAgUkVQTEFZR0FJTl9BTEJVTV9QRUFLOiAncmVwbGF5Z2Fpbl9hbGJ1bV9wZWFrJyxcbiAgICAvLyBUbyBTdXJlIGlmIHRoZXNlIChSRVBMQVlHQUlOX01JTk1BWCwgUkVQTEFZR0FJTl9BTEJVTV9NSU5NQVggJiBSRVBMQVlHQUlOX1VORE8pIGFyZSB1c2VkIGZvciBWb3JiaXM6XG4gICAgUkVQTEFZR0FJTl9NSU5NQVg6ICdyZXBsYXlnYWluX3RyYWNrX21pbm1heCcsXG4gICAgUkVQTEFZR0FJTl9BTEJVTV9NSU5NQVg6ICdyZXBsYXlnYWluX2FsYnVtX21pbm1heCcsXG4gICAgUkVQTEFZR0FJTl9VTkRPOiAncmVwbGF5Z2Fpbl91bmRvJ1xufTtcbmV4cG9ydCBjbGFzcyBWb3JiaXNUYWdNYXBwZXIgZXh0ZW5kcyBDb21tb25UYWdNYXBwZXIge1xuICAgIHN0YXRpYyB0b1JhdGluZyhlbWFpbCwgcmF0aW5nLCBtYXhTY29yZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc291cmNlOiBlbWFpbCA/IGVtYWlsLnRvTG93ZXJDYXNlKCkgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICByYXRpbmc6IChOdW1iZXIucGFyc2VGbG9hdChyYXRpbmcpIC8gbWF4U2NvcmUpICogQ29tbW9uVGFnTWFwcGVyLm1heFJhdGluZ1Njb3JlXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcihbJ3ZvcmJpcyddLCB2b3JiaXNUYWdNYXApO1xuICAgIH1cbiAgICBwb3N0TWFwKHRhZykge1xuICAgICAgICBpZiAodGFnLmlkID09PSAnUkFUSU5HJykge1xuICAgICAgICAgICAgLy8gVGhlIHdheSBXaW5hbXAgNS42NjYgYXNzaWducyByYXRpbmdcbiAgICAgICAgICAgIHRhZy52YWx1ZSA9IFZvcmJpc1RhZ01hcHBlci50b1JhdGluZyh1bmRlZmluZWQsIHRhZy52YWx1ZSwgMTAwKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0YWcuaWQuaW5kZXhPZignUkFUSU5HOicpID09PSAwKSB7XG4gICAgICAgICAgICBjb25zdCBrZXlzID0gdGFnLmlkLnNwbGl0KCc6Jyk7XG4gICAgICAgICAgICB0YWcudmFsdWUgPSBWb3JiaXNUYWdNYXBwZXIudG9SYXRpbmcoa2V5c1sxXSwgdGFnLnZhbHVlLCAxKTtcbiAgICAgICAgICAgIHRhZy5pZCA9IGtleXNbMF07XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Wb3JiaXNUYWdNYXBwZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/ogg/vorbis/VorbisTagMapper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/riff/RiffChunk.js":
/*!***********************************************************!*\
  !*** ./node_modules/music-metadata/lib/riff/RiffChunk.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Header: () => (/* binding */ Header),\n/* harmony export */   ListInfoTagValue: () => (/* binding */ ListInfoTagValue)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n\n/**\n * Common RIFF chunk header\n */\nconst Header = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            // Group-ID\n            chunkID: new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(4, 'latin1').get(buf, off),\n            // Size\n            chunkSize: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Token to parse RIFF-INFO tag value\n */\nclass ListInfoTagValue {\n    constructor(tagHeader) {\n        this.tagHeader = tagHeader;\n        this.len = tagHeader.chunkSize;\n        this.len += this.len & 1; // if it is an odd length, round up to even\n    }\n    get(buf, off) {\n        return new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(this.tagHeader.chunkSize, 'ascii').get(buf, off);\n    }\n}\n//# sourceMappingURL=RiffChunk.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL3JpZmYvUmlmZkNodW5rLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG1EQUFnQjtBQUN6QztBQUNBLHVCQUF1QixrREFBZTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0EsbUJBQW1CLG1EQUFnQjtBQUNuQztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL3JpZmYvUmlmZkNodW5rLmpzP2M4MzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVG9rZW4gZnJvbSAndG9rZW4tdHlwZXMnO1xuLyoqXG4gKiBDb21tb24gUklGRiBjaHVuayBoZWFkZXJcbiAqL1xuZXhwb3J0IGNvbnN0IEhlYWRlciA9IHtcbiAgICBsZW46IDgsXG4gICAgZ2V0OiAoYnVmLCBvZmYpID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC8vIEdyb3VwLUlEXG4gICAgICAgICAgICBjaHVua0lEOiBuZXcgVG9rZW4uU3RyaW5nVHlwZSg0LCAnbGF0aW4xJykuZ2V0KGJ1Ziwgb2ZmKSxcbiAgICAgICAgICAgIC8vIFNpemVcbiAgICAgICAgICAgIGNodW5rU2l6ZTogVG9rZW4uVUlOVDMyX0xFLmdldChidWYsIG9mZiArIDQpXG4gICAgICAgIH07XG4gICAgfVxufTtcbi8qKlxuICogVG9rZW4gdG8gcGFyc2UgUklGRi1JTkZPIHRhZyB2YWx1ZVxuICovXG5leHBvcnQgY2xhc3MgTGlzdEluZm9UYWdWYWx1ZSB7XG4gICAgY29uc3RydWN0b3IodGFnSGVhZGVyKSB7XG4gICAgICAgIHRoaXMudGFnSGVhZGVyID0gdGFnSGVhZGVyO1xuICAgICAgICB0aGlzLmxlbiA9IHRhZ0hlYWRlci5jaHVua1NpemU7XG4gICAgICAgIHRoaXMubGVuICs9IHRoaXMubGVuICYgMTsgLy8gaWYgaXQgaXMgYW4gb2RkIGxlbmd0aCwgcm91bmQgdXAgdG8gZXZlblxuICAgIH1cbiAgICBnZXQoYnVmLCBvZmYpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBUb2tlbi5TdHJpbmdUeXBlKHRoaXMudGFnSGVhZGVyLmNodW5rU2l6ZSwgJ2FzY2lpJykuZ2V0KGJ1Ziwgb2ZmKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SaWZmQ2h1bmsuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/riff/RiffChunk.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/riff/RiffInfoTagMap.js":
/*!****************************************************************!*\
  !*** ./node_modules/music-metadata/lib/riff/RiffInfoTagMap.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RiffInfoTagMapper: () => (/* binding */ RiffInfoTagMapper),\n/* harmony export */   riffInfoTagMap: () => (/* binding */ riffInfoTagMap)\n/* harmony export */ });\n/* harmony import */ var _common_GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/GenericTagMapper.js */ \"(rsc)/./node_modules/music-metadata/lib/common/GenericTagMapper.js\");\n\n/**\n * RIFF Info Tags; part of the EXIF 2.3\n * Ref: http://owl.phy.queensu.ca/~phil/exiftool/TagNames/RIFF.html#Info\n */\nconst riffInfoTagMap = {\n    IART: 'artist', // Artist\n    ICRD: 'date', // DateCreated\n    INAM: 'title', // Title\n    TITL: 'title',\n    IPRD: 'album', // Product\n    ITRK: 'track',\n    IPRT: 'track', // Additional tag for track index\n    COMM: 'comment', // Comments\n    ICMT: 'comment', // Country\n    ICNT: 'releasecountry',\n    GNRE: 'genre', // Genre\n    IWRI: 'writer', // WrittenBy\n    RATE: 'rating',\n    YEAR: 'year',\n    ISFT: 'encodedby', // Software\n    CODE: 'encodedby', // EncodedBy\n    TURL: 'website', // URL,\n    IGNR: 'genre', // Genre\n    IENG: 'engineer', // Engineer\n    ITCH: 'technician', // Technician\n    IMED: 'media', // Original Media\n    IRPD: 'album' // Product, where the file was intended for\n};\nclass RiffInfoTagMapper extends _common_GenericTagMapper_js__WEBPACK_IMPORTED_MODULE_0__.CommonTagMapper {\n    constructor() {\n        super(['exif'], riffInfoTagMap);\n    }\n}\n//# sourceMappingURL=RiffInfoTagMap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL3JpZmYvUmlmZkluZm9UYWdNYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdFO0FBQ2hFO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnQ0FBZ0Msd0VBQWU7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvcmlmZi9SaWZmSW5mb1RhZ01hcC5qcz9iNjIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vblRhZ01hcHBlciB9IGZyb20gJy4uL2NvbW1vbi9HZW5lcmljVGFnTWFwcGVyLmpzJztcbi8qKlxuICogUklGRiBJbmZvIFRhZ3M7IHBhcnQgb2YgdGhlIEVYSUYgMi4zXG4gKiBSZWY6IGh0dHA6Ly9vd2wucGh5LnF1ZWVuc3UuY2EvfnBoaWwvZXhpZnRvb2wvVGFnTmFtZXMvUklGRi5odG1sI0luZm9cbiAqL1xuZXhwb3J0IGNvbnN0IHJpZmZJbmZvVGFnTWFwID0ge1xuICAgIElBUlQ6ICdhcnRpc3QnLCAvLyBBcnRpc3RcbiAgICBJQ1JEOiAnZGF0ZScsIC8vIERhdGVDcmVhdGVkXG4gICAgSU5BTTogJ3RpdGxlJywgLy8gVGl0bGVcbiAgICBUSVRMOiAndGl0bGUnLFxuICAgIElQUkQ6ICdhbGJ1bScsIC8vIFByb2R1Y3RcbiAgICBJVFJLOiAndHJhY2snLFxuICAgIElQUlQ6ICd0cmFjaycsIC8vIEFkZGl0aW9uYWwgdGFnIGZvciB0cmFjayBpbmRleFxuICAgIENPTU06ICdjb21tZW50JywgLy8gQ29tbWVudHNcbiAgICBJQ01UOiAnY29tbWVudCcsIC8vIENvdW50cnlcbiAgICBJQ05UOiAncmVsZWFzZWNvdW50cnknLFxuICAgIEdOUkU6ICdnZW5yZScsIC8vIEdlbnJlXG4gICAgSVdSSTogJ3dyaXRlcicsIC8vIFdyaXR0ZW5CeVxuICAgIFJBVEU6ICdyYXRpbmcnLFxuICAgIFlFQVI6ICd5ZWFyJyxcbiAgICBJU0ZUOiAnZW5jb2RlZGJ5JywgLy8gU29mdHdhcmVcbiAgICBDT0RFOiAnZW5jb2RlZGJ5JywgLy8gRW5jb2RlZEJ5XG4gICAgVFVSTDogJ3dlYnNpdGUnLCAvLyBVUkwsXG4gICAgSUdOUjogJ2dlbnJlJywgLy8gR2VucmVcbiAgICBJRU5HOiAnZW5naW5lZXInLCAvLyBFbmdpbmVlclxuICAgIElUQ0g6ICd0ZWNobmljaWFuJywgLy8gVGVjaG5pY2lhblxuICAgIElNRUQ6ICdtZWRpYScsIC8vIE9yaWdpbmFsIE1lZGlhXG4gICAgSVJQRDogJ2FsYnVtJyAvLyBQcm9kdWN0LCB3aGVyZSB0aGUgZmlsZSB3YXMgaW50ZW5kZWQgZm9yXG59O1xuZXhwb3J0IGNsYXNzIFJpZmZJbmZvVGFnTWFwcGVyIGV4dGVuZHMgQ29tbW9uVGFnTWFwcGVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoWydleGlmJ10sIHJpZmZJbmZvVGFnTWFwKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SaWZmSW5mb1RhZ01hcC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/riff/RiffInfoTagMap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/type.js":
/*!*************************************************!*\
  !*** ./node_modules/music-metadata/lib/type.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LyricsContentType: () => (/* reexport safe */ _id3v2_ID3v2Token_js__WEBPACK_IMPORTED_MODULE_1__.LyricsContentType),\n/* harmony export */   TimestampFormat: () => (/* reexport safe */ _id3v2_ID3v2Token_js__WEBPACK_IMPORTED_MODULE_1__.TimestampFormat),\n/* harmony export */   TrackType: () => (/* reexport safe */ _matroska_types_js__WEBPACK_IMPORTED_MODULE_0__.TrackType)\n/* harmony export */ });\n/* harmony import */ var _matroska_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matroska/types.js */ \"(rsc)/./node_modules/music-metadata/lib/matroska/types.js\");\n/* harmony import */ var _id3v2_ID3v2Token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./id3v2/ID3v2Token.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v2Token.js\");\n\n\n//# sourceMappingURL=type.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL3R5cGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBZ0Q7QUFDMkI7QUFDM0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL3R5cGUuanM/ODNhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBUcmFja1R5cGUgfSBmcm9tICcuL21hdHJvc2thL3R5cGVzLmpzJztcbmV4cG9ydCB7IEx5cmljc0NvbnRlbnRUeXBlLCBUaW1lc3RhbXBGb3JtYXQgfSBmcm9tICcuL2lkM3YyL0lEM3YyVG9rZW4uanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/type.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/wav/BwfChunk.js":
/*!*********************************************************!*\
  !*** ./node_modules/music-metadata/lib/wav/BwfChunk.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BroadcastAudioExtensionChunk: () => (/* binding */ BroadcastAudioExtensionChunk)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n\n\n/**\n * Broadcast Audio Extension Chunk\n * Ref: https://tech.ebu.ch/docs/tech/tech3285.pdf\n */\nconst BroadcastAudioExtensionChunk = {\n    len: 420,\n    get: (uint8array, off) => {\n        return {\n            description: (0,_common_Util_js__WEBPACK_IMPORTED_MODULE_1__.stripNulls)(new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(256, 'ascii').get(uint8array, off)).trim(),\n            originator: (0,_common_Util_js__WEBPACK_IMPORTED_MODULE_1__.stripNulls)(new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(32, 'ascii').get(uint8array, off + 256)).trim(),\n            originatorReference: (0,_common_Util_js__WEBPACK_IMPORTED_MODULE_1__.stripNulls)(new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(32, 'ascii').get(uint8array, off + 288)).trim(),\n            originationDate: (0,_common_Util_js__WEBPACK_IMPORTED_MODULE_1__.stripNulls)(new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(10, 'ascii').get(uint8array, off + 320)).trim(),\n            originationTime: (0,_common_Util_js__WEBPACK_IMPORTED_MODULE_1__.stripNulls)(new token_types__WEBPACK_IMPORTED_MODULE_0__.StringType(8, 'ascii').get(uint8array, off + 330)).trim(),\n            timeReferenceLow: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(uint8array, off + 338),\n            timeReferenceHigh: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(uint8array, off + 342),\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(uint8array, off + 346),\n            umid: new token_types__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayType(64).get(uint8array, off + 348),\n            loudnessValue: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(uint8array, off + 412),\n            maxTruePeakLevel: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(uint8array, off + 414),\n            maxMomentaryLoudness: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(uint8array, off + 416),\n            maxShortTermLoudness: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(uint8array, off + 418)\n        };\n    }\n};\n//# sourceMappingURL=BwfChunk.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL3dhdi9Cd2ZDaHVuay5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDVTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDJEQUFVLEtBQUssbURBQWdCO0FBQ3hELHdCQUF3QiwyREFBVSxLQUFLLG1EQUFnQjtBQUN2RCxpQ0FBaUMsMkRBQVUsS0FBSyxtREFBZ0I7QUFDaEUsNkJBQTZCLDJEQUFVLEtBQUssbURBQWdCO0FBQzVELDZCQUE2QiwyREFBVSxLQUFLLG1EQUFnQjtBQUM1RCw4QkFBOEIsa0RBQWU7QUFDN0MsK0JBQStCLGtEQUFlO0FBQzlDLHFCQUFxQixrREFBZTtBQUNwQyxzQkFBc0IsdURBQW9CO0FBQzFDLDJCQUEyQixrREFBZTtBQUMxQyw4QkFBOEIsa0RBQWU7QUFDN0Msa0NBQWtDLGtEQUFlO0FBQ2pELGtDQUFrQyxrREFBZTtBQUNqRDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvd2F2L0J3ZkNodW5rLmpzP2M5MTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVG9rZW4gZnJvbSAndG9rZW4tdHlwZXMnO1xuaW1wb3J0IHsgc3RyaXBOdWxscyB9IGZyb20gJy4uL2NvbW1vbi9VdGlsLmpzJztcbi8qKlxuICogQnJvYWRjYXN0IEF1ZGlvIEV4dGVuc2lvbiBDaHVua1xuICogUmVmOiBodHRwczovL3RlY2guZWJ1LmNoL2RvY3MvdGVjaC90ZWNoMzI4NS5wZGZcbiAqL1xuZXhwb3J0IGNvbnN0IEJyb2FkY2FzdEF1ZGlvRXh0ZW5zaW9uQ2h1bmsgPSB7XG4gICAgbGVuOiA0MjAsXG4gICAgZ2V0OiAodWludDhhcnJheSwgb2ZmKSA9PiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogc3RyaXBOdWxscyhuZXcgVG9rZW4uU3RyaW5nVHlwZSgyNTYsICdhc2NpaScpLmdldCh1aW50OGFycmF5LCBvZmYpKS50cmltKCksXG4gICAgICAgICAgICBvcmlnaW5hdG9yOiBzdHJpcE51bGxzKG5ldyBUb2tlbi5TdHJpbmdUeXBlKDMyLCAnYXNjaWknKS5nZXQodWludDhhcnJheSwgb2ZmICsgMjU2KSkudHJpbSgpLFxuICAgICAgICAgICAgb3JpZ2luYXRvclJlZmVyZW5jZTogc3RyaXBOdWxscyhuZXcgVG9rZW4uU3RyaW5nVHlwZSgzMiwgJ2FzY2lpJykuZ2V0KHVpbnQ4YXJyYXksIG9mZiArIDI4OCkpLnRyaW0oKSxcbiAgICAgICAgICAgIG9yaWdpbmF0aW9uRGF0ZTogc3RyaXBOdWxscyhuZXcgVG9rZW4uU3RyaW5nVHlwZSgxMCwgJ2FzY2lpJykuZ2V0KHVpbnQ4YXJyYXksIG9mZiArIDMyMCkpLnRyaW0oKSxcbiAgICAgICAgICAgIG9yaWdpbmF0aW9uVGltZTogc3RyaXBOdWxscyhuZXcgVG9rZW4uU3RyaW5nVHlwZSg4LCAnYXNjaWknKS5nZXQodWludDhhcnJheSwgb2ZmICsgMzMwKSkudHJpbSgpLFxuICAgICAgICAgICAgdGltZVJlZmVyZW5jZUxvdzogVG9rZW4uVUlOVDMyX0xFLmdldCh1aW50OGFycmF5LCBvZmYgKyAzMzgpLFxuICAgICAgICAgICAgdGltZVJlZmVyZW5jZUhpZ2g6IFRva2VuLlVJTlQzMl9MRS5nZXQodWludDhhcnJheSwgb2ZmICsgMzQyKSxcbiAgICAgICAgICAgIHZlcnNpb246IFRva2VuLlVJTlQxNl9MRS5nZXQodWludDhhcnJheSwgb2ZmICsgMzQ2KSxcbiAgICAgICAgICAgIHVtaWQ6IG5ldyBUb2tlbi5VaW50OEFycmF5VHlwZSg2NCkuZ2V0KHVpbnQ4YXJyYXksIG9mZiArIDM0OCksXG4gICAgICAgICAgICBsb3VkbmVzc1ZhbHVlOiBUb2tlbi5VSU5UMTZfTEUuZ2V0KHVpbnQ4YXJyYXksIG9mZiArIDQxMiksXG4gICAgICAgICAgICBtYXhUcnVlUGVha0xldmVsOiBUb2tlbi5VSU5UMTZfTEUuZ2V0KHVpbnQ4YXJyYXksIG9mZiArIDQxNCksXG4gICAgICAgICAgICBtYXhNb21lbnRhcnlMb3VkbmVzczogVG9rZW4uVUlOVDE2X0xFLmdldCh1aW50OGFycmF5LCBvZmYgKyA0MTYpLFxuICAgICAgICAgICAgbWF4U2hvcnRUZXJtTG91ZG5lc3M6IFRva2VuLlVJTlQxNl9MRS5nZXQodWludDhhcnJheSwgb2ZmICsgNDE4KVxuICAgICAgICB9O1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Cd2ZDaHVuay5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/wav/BwfChunk.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/wav/WaveChunk.js":
/*!**********************************************************!*\
  !*** ./node_modules/music-metadata/lib/wav/WaveChunk.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FactChunk: () => (/* binding */ FactChunk),\n/* harmony export */   Format: () => (/* binding */ Format),\n/* harmony export */   WaveContentError: () => (/* binding */ WaveContentError),\n/* harmony export */   WaveFormat: () => (/* binding */ WaveFormat)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\nclass WaveContentError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_1__.makeUnexpectedFileContentError)('Wave') {\n}\n/**\n * Ref: https://msdn.microsoft.com/en-us/library/windows/desktop/dd317599(v=vs.85).aspx\n */\nvar WaveFormat;\n(function (WaveFormat) {\n    WaveFormat[WaveFormat[\"PCM\"] = 1] = \"PCM\";\n    // MPEG-4 and AAC Audio Types\n    WaveFormat[WaveFormat[\"ADPCM\"] = 2] = \"ADPCM\";\n    WaveFormat[WaveFormat[\"IEEE_FLOAT\"] = 3] = \"IEEE_FLOAT\";\n    WaveFormat[WaveFormat[\"MPEG_ADTS_AAC\"] = 5632] = \"MPEG_ADTS_AAC\";\n    WaveFormat[WaveFormat[\"MPEG_LOAS\"] = 5634] = \"MPEG_LOAS\";\n    WaveFormat[WaveFormat[\"RAW_AAC1\"] = 255] = \"RAW_AAC1\";\n    // Dolby Audio Types\n    WaveFormat[WaveFormat[\"DOLBY_AC3_SPDIF\"] = 146] = \"DOLBY_AC3_SPDIF\";\n    WaveFormat[WaveFormat[\"DVM\"] = 8192] = \"DVM\";\n    WaveFormat[WaveFormat[\"RAW_SPORT\"] = 576] = \"RAW_SPORT\";\n    WaveFormat[WaveFormat[\"ESST_AC3\"] = 577] = \"ESST_AC3\";\n    WaveFormat[WaveFormat[\"DRM\"] = 9] = \"DRM\";\n    WaveFormat[WaveFormat[\"DTS2\"] = 8193] = \"DTS2\";\n    WaveFormat[WaveFormat[\"MPEG\"] = 80] = \"MPEG\";\n})(WaveFormat || (WaveFormat = {}));\n/**\n * format chunk; chunk-id is \"fmt \"\n * http://soundfile.sapp.org/doc/WaveFormat/\n */\nclass Format {\n    constructor(header) {\n        if (header.chunkSize < 16)\n            throw new WaveContentError('Invalid chunk size');\n        this.len = header.chunkSize;\n    }\n    get(buf, off) {\n        return {\n            wFormatTag: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off),\n            nChannels: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off + 2),\n            nSamplesPerSec: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 4),\n            nAvgBytesPerSec: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 8),\n            nBlockAlign: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off + 12),\n            wBitsPerSample: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off + 14)\n        };\n    }\n}\n/**\n * Fact chunk; chunk-id is \"fact\"\n * http://www-mmsp.ece.mcgill.ca/Documents/AudioFormats/WAVE/WAVE.html\n * http://www.recordingblogs.com/wiki/fact-chunk-of-a-wave-file\n */\nclass FactChunk {\n    constructor(header) {\n        if (header.chunkSize < 4) {\n            throw new WaveContentError('Invalid fact chunk size.');\n        }\n        this.len = header.chunkSize;\n    }\n    get(buf, off) {\n        return {\n            dwSampleLength: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off)\n        };\n    }\n}\n//# sourceMappingURL=WaveChunk.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL3dhdi9XYXZlQ2h1bmsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXFDO0FBQzZCO0FBQzNELCtCQUErQiw4RUFBOEI7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnQ0FBZ0M7QUFDakM7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isa0RBQWU7QUFDdkMsdUJBQXVCLGtEQUFlO0FBQ3RDLDRCQUE0QixrREFBZTtBQUMzQyw2QkFBNkIsa0RBQWU7QUFDNUMseUJBQXlCLGtEQUFlO0FBQ3hDLDRCQUE0QixrREFBZTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsa0RBQWU7QUFDM0M7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL3dhdi9XYXZlQ2h1bmsuanM/OGFiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBUb2tlbiBmcm9tICd0b2tlbi10eXBlcyc7XG5pbXBvcnQgeyBtYWtlVW5leHBlY3RlZEZpbGVDb250ZW50RXJyb3IgfSBmcm9tICcuLi9QYXJzZUVycm9yLmpzJztcbmV4cG9ydCBjbGFzcyBXYXZlQ29udGVudEVycm9yIGV4dGVuZHMgbWFrZVVuZXhwZWN0ZWRGaWxlQ29udGVudEVycm9yKCdXYXZlJykge1xufVxuLyoqXG4gKiBSZWY6IGh0dHBzOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvd2luZG93cy9kZXNrdG9wL2RkMzE3NTk5KHY9dnMuODUpLmFzcHhcbiAqL1xuZXhwb3J0IHZhciBXYXZlRm9ybWF0O1xuKGZ1bmN0aW9uIChXYXZlRm9ybWF0KSB7XG4gICAgV2F2ZUZvcm1hdFtXYXZlRm9ybWF0W1wiUENNXCJdID0gMV0gPSBcIlBDTVwiO1xuICAgIC8vIE1QRUctNCBhbmQgQUFDIEF1ZGlvIFR5cGVzXG4gICAgV2F2ZUZvcm1hdFtXYXZlRm9ybWF0W1wiQURQQ01cIl0gPSAyXSA9IFwiQURQQ01cIjtcbiAgICBXYXZlRm9ybWF0W1dhdmVGb3JtYXRbXCJJRUVFX0ZMT0FUXCJdID0gM10gPSBcIklFRUVfRkxPQVRcIjtcbiAgICBXYXZlRm9ybWF0W1dhdmVGb3JtYXRbXCJNUEVHX0FEVFNfQUFDXCJdID0gNTYzMl0gPSBcIk1QRUdfQURUU19BQUNcIjtcbiAgICBXYXZlRm9ybWF0W1dhdmVGb3JtYXRbXCJNUEVHX0xPQVNcIl0gPSA1NjM0XSA9IFwiTVBFR19MT0FTXCI7XG4gICAgV2F2ZUZvcm1hdFtXYXZlRm9ybWF0W1wiUkFXX0FBQzFcIl0gPSAyNTVdID0gXCJSQVdfQUFDMVwiO1xuICAgIC8vIERvbGJ5IEF1ZGlvIFR5cGVzXG4gICAgV2F2ZUZvcm1hdFtXYXZlRm9ybWF0W1wiRE9MQllfQUMzX1NQRElGXCJdID0gMTQ2XSA9IFwiRE9MQllfQUMzX1NQRElGXCI7XG4gICAgV2F2ZUZvcm1hdFtXYXZlRm9ybWF0W1wiRFZNXCJdID0gODE5Ml0gPSBcIkRWTVwiO1xuICAgIFdhdmVGb3JtYXRbV2F2ZUZvcm1hdFtcIlJBV19TUE9SVFwiXSA9IDU3Nl0gPSBcIlJBV19TUE9SVFwiO1xuICAgIFdhdmVGb3JtYXRbV2F2ZUZvcm1hdFtcIkVTU1RfQUMzXCJdID0gNTc3XSA9IFwiRVNTVF9BQzNcIjtcbiAgICBXYXZlRm9ybWF0W1dhdmVGb3JtYXRbXCJEUk1cIl0gPSA5XSA9IFwiRFJNXCI7XG4gICAgV2F2ZUZvcm1hdFtXYXZlRm9ybWF0W1wiRFRTMlwiXSA9IDgxOTNdID0gXCJEVFMyXCI7XG4gICAgV2F2ZUZvcm1hdFtXYXZlRm9ybWF0W1wiTVBFR1wiXSA9IDgwXSA9IFwiTVBFR1wiO1xufSkoV2F2ZUZvcm1hdCB8fCAoV2F2ZUZvcm1hdCA9IHt9KSk7XG4vKipcbiAqIGZvcm1hdCBjaHVuazsgY2h1bmstaWQgaXMgXCJmbXQgXCJcbiAqIGh0dHA6Ly9zb3VuZGZpbGUuc2FwcC5vcmcvZG9jL1dhdmVGb3JtYXQvXG4gKi9cbmV4cG9ydCBjbGFzcyBGb3JtYXQge1xuICAgIGNvbnN0cnVjdG9yKGhlYWRlcikge1xuICAgICAgICBpZiAoaGVhZGVyLmNodW5rU2l6ZSA8IDE2KVxuICAgICAgICAgICAgdGhyb3cgbmV3IFdhdmVDb250ZW50RXJyb3IoJ0ludmFsaWQgY2h1bmsgc2l6ZScpO1xuICAgICAgICB0aGlzLmxlbiA9IGhlYWRlci5jaHVua1NpemU7XG4gICAgfVxuICAgIGdldChidWYsIG9mZikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgd0Zvcm1hdFRhZzogVG9rZW4uVUlOVDE2X0xFLmdldChidWYsIG9mZiksXG4gICAgICAgICAgICBuQ2hhbm5lbHM6IFRva2VuLlVJTlQxNl9MRS5nZXQoYnVmLCBvZmYgKyAyKSxcbiAgICAgICAgICAgIG5TYW1wbGVzUGVyU2VjOiBUb2tlbi5VSU5UMzJfTEUuZ2V0KGJ1Ziwgb2ZmICsgNCksXG4gICAgICAgICAgICBuQXZnQnl0ZXNQZXJTZWM6IFRva2VuLlVJTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyA4KSxcbiAgICAgICAgICAgIG5CbG9ja0FsaWduOiBUb2tlbi5VSU5UMTZfTEUuZ2V0KGJ1Ziwgb2ZmICsgMTIpLFxuICAgICAgICAgICAgd0JpdHNQZXJTYW1wbGU6IFRva2VuLlVJTlQxNl9MRS5nZXQoYnVmLCBvZmYgKyAxNClcbiAgICAgICAgfTtcbiAgICB9XG59XG4vKipcbiAqIEZhY3QgY2h1bms7IGNodW5rLWlkIGlzIFwiZmFjdFwiXG4gKiBodHRwOi8vd3d3LW1tc3AuZWNlLm1jZ2lsbC5jYS9Eb2N1bWVudHMvQXVkaW9Gb3JtYXRzL1dBVkUvV0FWRS5odG1sXG4gKiBodHRwOi8vd3d3LnJlY29yZGluZ2Jsb2dzLmNvbS93aWtpL2ZhY3QtY2h1bmstb2YtYS13YXZlLWZpbGVcbiAqL1xuZXhwb3J0IGNsYXNzIEZhY3RDaHVuayB7XG4gICAgY29uc3RydWN0b3IoaGVhZGVyKSB7XG4gICAgICAgIGlmIChoZWFkZXIuY2h1bmtTaXplIDwgNCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFdhdmVDb250ZW50RXJyb3IoJ0ludmFsaWQgZmFjdCBjaHVuayBzaXplLicpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubGVuID0gaGVhZGVyLmNodW5rU2l6ZTtcbiAgICB9XG4gICAgZ2V0KGJ1Ziwgb2ZmKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkd1NhbXBsZUxlbmd0aDogVG9rZW4uVUlOVDMyX0xFLmdldChidWYsIG9mZilcbiAgICAgICAgfTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1XYXZlQ2h1bmsuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/wav/WaveChunk.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/wav/WaveLoader.js":
/*!***********************************************************!*\
  !*** ./node_modules/music-metadata/lib/wav/WaveLoader.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   riffParserLoader: () => (/* binding */ riffParserLoader)\n/* harmony export */ });\nconst riffParserLoader = {\n    parserType: 'riff',\n    extensions: ['.wav', 'wave', '.bwf'],\n    async load(metadata, tokenizer, options) {\n        return new (await __webpack_require__.e(/*! import() */ \"vendor-chunks/music-metadata\").then(__webpack_require__.bind(__webpack_require__, /*! ./WaveParser.js */ \"(rsc)/./node_modules/music-metadata/lib/wav/WaveParser.js\"))).WaveParser(metadata, tokenizer, options);\n    }\n};\n//# sourceMappingURL=WaveLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL3dhdi9XYXZlTG9hZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw2TUFBeUI7QUFDbkQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi93YXYvV2F2ZUxvYWRlci5qcz85NTYwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCByaWZmUGFyc2VyTG9hZGVyID0ge1xuICAgIHBhcnNlclR5cGU6ICdyaWZmJyxcbiAgICBleHRlbnNpb25zOiBbJy53YXYnLCAnd2F2ZScsICcuYndmJ10sXG4gICAgYXN5bmMgbG9hZChtZXRhZGF0YSwgdG9rZW5pemVyLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgKGF3YWl0IGltcG9ydCgnLi9XYXZlUGFyc2VyLmpzJykpLldhdmVQYXJzZXIobWV0YWRhdGEsIHRva2VuaXplciwgb3B0aW9ucyk7XG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdhdmVMb2FkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/wav/WaveLoader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/wav/WaveParser.js":
/*!***********************************************************!*\
  !*** ./node_modules/music-metadata/lib/wav/WaveParser.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WaveParser: () => (/* binding */ WaveParser)\n/* harmony export */ });\n/* harmony import */ var strtok3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! strtok3 */ \"(rsc)/./node_modules/strtok3/lib/index.js\");\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var _riff_RiffChunk_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../riff/RiffChunk.js */ \"(rsc)/./node_modules/music-metadata/lib/riff/RiffChunk.js\");\n/* harmony import */ var _WaveChunk_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WaveChunk.js */ \"(rsc)/./node_modules/music-metadata/lib/wav/WaveChunk.js\");\n/* harmony import */ var _id3v2_ID3v2Parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../id3v2/ID3v2Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/id3v2/ID3v2Parser.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/Util.js */ \"(rsc)/./node_modules/music-metadata/lib/common/Util.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/FourCC.js */ \"(rsc)/./node_modules/music-metadata/lib/common/FourCC.js\");\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/BasicParser.js */ \"(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js\");\n/* harmony import */ var _BwfChunk_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./BwfChunk.js */ \"(rsc)/./node_modules/music-metadata/lib/wav/BwfChunk.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_2__('music-metadata:parser:RIFF');\n/**\n * Resource Interchange File Format (RIFF) Parser\n *\n * WAVE PCM soundfile format\n *\n * Ref:\n * - http://www.johnloomis.org/cpe102/asgn/asgn1/riff.html\n * - http://soundfile.sapp.org/doc/WaveFormat\n *\n * ToDo: Split WAVE part from RIFF parser\n */\nclass WaveParser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_8__.BasicParser {\n    constructor() {\n        super(...arguments);\n        this.blockAlign = 0;\n    }\n    async parse() {\n        const riffHeader = await this.tokenizer.readToken(_riff_RiffChunk_js__WEBPACK_IMPORTED_MODULE_3__.Header);\n        debug(`pos=${this.tokenizer.position}, parse: chunkID=${riffHeader.chunkID}`);\n        if (riffHeader.chunkID !== 'RIFF')\n            return; // Not RIFF format\n        return this.parseRiffChunk(riffHeader.chunkSize).catch(err => {\n            if (!(err instanceof strtok3__WEBPACK_IMPORTED_MODULE_0__.EndOfStreamError)) {\n                throw err;\n            }\n        });\n    }\n    async parseRiffChunk(chunkSize) {\n        const type = await this.tokenizer.readToken(_common_FourCC_js__WEBPACK_IMPORTED_MODULE_7__.FourCcToken);\n        this.metadata.setFormat('container', type);\n        switch (type) {\n            case 'WAVE':\n                return this.readWaveChunk(chunkSize - _common_FourCC_js__WEBPACK_IMPORTED_MODULE_7__.FourCcToken.len);\n            default:\n                throw new _WaveChunk_js__WEBPACK_IMPORTED_MODULE_4__.WaveContentError(`Unsupported RIFF format: RIFF/${type}`);\n        }\n    }\n    async readWaveChunk(remaining) {\n        while (remaining >= _riff_RiffChunk_js__WEBPACK_IMPORTED_MODULE_3__.Header.len) {\n            const header = await this.tokenizer.readToken(_riff_RiffChunk_js__WEBPACK_IMPORTED_MODULE_3__.Header);\n            remaining -= _riff_RiffChunk_js__WEBPACK_IMPORTED_MODULE_3__.Header.len + header.chunkSize;\n            if (header.chunkSize > remaining) {\n                this.metadata.addWarning('Data chunk size exceeds file size');\n            }\n            this.header = header;\n            debug(`pos=${this.tokenizer.position}, readChunk: chunkID=RIFF/WAVE/${header.chunkID}`);\n            switch (header.chunkID) {\n                case 'LIST':\n                    await this.parseListTag(header);\n                    break;\n                case 'fact': // extended Format chunk,\n                    this.metadata.setFormat('lossless', false);\n                    this.fact = await this.tokenizer.readToken(new _WaveChunk_js__WEBPACK_IMPORTED_MODULE_4__.FactChunk(header));\n                    break;\n                case 'fmt ': { // The Util Chunk, non-PCM Formats\n                    const fmt = await this.tokenizer.readToken(new _WaveChunk_js__WEBPACK_IMPORTED_MODULE_4__.Format(header));\n                    let subFormat = _WaveChunk_js__WEBPACK_IMPORTED_MODULE_4__.WaveFormat[fmt.wFormatTag];\n                    if (!subFormat) {\n                        debug(`WAVE/non-PCM format=${fmt.wFormatTag}`);\n                        subFormat = `non-PCM (${fmt.wFormatTag})`;\n                    }\n                    this.metadata.setFormat('codec', subFormat);\n                    this.metadata.setFormat('bitsPerSample', fmt.wBitsPerSample);\n                    this.metadata.setFormat('sampleRate', fmt.nSamplesPerSec);\n                    this.metadata.setFormat('numberOfChannels', fmt.nChannels);\n                    this.metadata.setFormat('bitrate', fmt.nBlockAlign * fmt.nSamplesPerSec * 8);\n                    this.blockAlign = fmt.nBlockAlign;\n                    break;\n                }\n                case 'id3 ': // The way Picard, FooBar currently stores, ID3 meta-data\n                case 'ID3 ': { // The way Mp3Tags stores ID3 meta-data\n                    const id3_data = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_1__.Uint8ArrayType(header.chunkSize));\n                    const rst = strtok3__WEBPACK_IMPORTED_MODULE_0__.fromBuffer(id3_data);\n                    await new _id3v2_ID3v2Parser_js__WEBPACK_IMPORTED_MODULE_5__.ID3v2Parser().parse(this.metadata, rst, this.options);\n                    break;\n                }\n                case 'data': { // PCM-data\n                    if (this.metadata.format.lossless !== false) {\n                        this.metadata.setFormat('lossless', true);\n                    }\n                    let chunkSize = header.chunkSize;\n                    if (this.tokenizer.fileInfo.size) {\n                        const calcRemaining = this.tokenizer.fileInfo.size - this.tokenizer.position;\n                        if (calcRemaining < chunkSize) {\n                            this.metadata.addWarning('data chunk length exceeding file length');\n                            chunkSize = calcRemaining;\n                        }\n                    }\n                    const numberOfSamples = this.fact ? this.fact.dwSampleLength : (chunkSize === 0xffffffff ? undefined : chunkSize / this.blockAlign);\n                    if (numberOfSamples) {\n                        this.metadata.setFormat('numberOfSamples', numberOfSamples);\n                        if (this.metadata.format.sampleRate) {\n                            this.metadata.setFormat('duration', numberOfSamples / this.metadata.format.sampleRate);\n                        }\n                    }\n                    if (this.metadata.format.codec === 'ADPCM') { // ADPCM is 4 bits lossy encoding resulting in 352kbps\n                        this.metadata.setFormat('bitrate', 352000);\n                    }\n                    else if (this.metadata.format.sampleRate) {\n                        this.metadata.setFormat('bitrate', this.blockAlign * this.metadata.format.sampleRate * 8);\n                    }\n                    await this.tokenizer.ignore(header.chunkSize);\n                    break;\n                }\n                case 'bext': { // Broadcast Audio Extension chunk\thttps://tech.ebu.ch/docs/tech/tech3285.pdf\n                    const bext = await this.tokenizer.readToken(_BwfChunk_js__WEBPACK_IMPORTED_MODULE_9__.BroadcastAudioExtensionChunk);\n                    Object.keys(bext).forEach(key => {\n                        this.metadata.addTag('exif', `bext.${key}`, bext[key]);\n                    });\n                    const bextRemaining = header.chunkSize - _BwfChunk_js__WEBPACK_IMPORTED_MODULE_9__.BroadcastAudioExtensionChunk.len;\n                    await this.tokenizer.ignore(bextRemaining);\n                    break;\n                }\n                case '\\x00\\x00\\x00\\x00': // padding ??\n                    debug(`Ignore padding chunk: RIFF/${header.chunkID} of ${header.chunkSize} bytes`);\n                    this.metadata.addWarning(`Ignore chunk: RIFF/${header.chunkID}`);\n                    await this.tokenizer.ignore(header.chunkSize);\n                    break;\n                default:\n                    debug(`Ignore chunk: RIFF/${header.chunkID} of ${header.chunkSize} bytes`);\n                    this.metadata.addWarning(`Ignore chunk: RIFF/${header.chunkID}`);\n                    await this.tokenizer.ignore(header.chunkSize);\n            }\n            if (this.header.chunkSize % 2 === 1) {\n                debug('Read odd padding byte'); // https://wiki.multimedia.cx/index.php/RIFF\n                await this.tokenizer.ignore(1);\n            }\n        }\n    }\n    async parseListTag(listHeader) {\n        const listType = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_1__.StringType(4, 'latin1'));\n        debug('pos=%s, parseListTag: chunkID=RIFF/WAVE/LIST/%s', this.tokenizer.position, listType);\n        switch (listType) {\n            case 'INFO':\n                return this.parseRiffInfoTags(listHeader.chunkSize - 4);\n            default:\n                this.metadata.addWarning(`Ignore chunk: RIFF/WAVE/LIST/${listType}`);\n                debug(`Ignoring chunkID=RIFF/WAVE/LIST/${listType}`);\n                return this.tokenizer.ignore(listHeader.chunkSize - 4).then();\n        }\n    }\n    async parseRiffInfoTags(chunkSize) {\n        while (chunkSize >= 8) {\n            const header = await this.tokenizer.readToken(_riff_RiffChunk_js__WEBPACK_IMPORTED_MODULE_3__.Header);\n            const valueToken = new _riff_RiffChunk_js__WEBPACK_IMPORTED_MODULE_3__.ListInfoTagValue(header);\n            const value = await this.tokenizer.readToken(valueToken);\n            this.addTag(header.chunkID, _common_Util_js__WEBPACK_IMPORTED_MODULE_6__.stripNulls(value));\n            chunkSize -= (8 + valueToken.len);\n        }\n        if (chunkSize !== 0) {\n            throw new _WaveChunk_js__WEBPACK_IMPORTED_MODULE_4__.WaveContentError(`Illegal remaining size: ${chunkSize}`);\n        }\n    }\n    addTag(id, value) {\n        this.metadata.addTag('exif', id, value);\n    }\n}\n//# sourceMappingURL=WaveParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/wav/WaveParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/wavpack/WavPackLoader.js":
/*!******************************************************************!*\
  !*** ./node_modules/music-metadata/lib/wavpack/WavPackLoader.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wavpackParserLoader: () => (/* binding */ wavpackParserLoader)\n/* harmony export */ });\nconst wavpackParserLoader = {\n    parserType: 'wavpack',\n    extensions: ['.wv', '.wvp'],\n    async load(metadata, tokenizer, options) {\n        return new (await __webpack_require__.e(/*! import() */ \"vendor-chunks/music-metadata\").then(__webpack_require__.bind(__webpack_require__, /*! ./WavPackParser.js */ \"(rsc)/./node_modules/music-metadata/lib/wavpack/WavPackParser.js\"))).WavPackParser(metadata, tokenizer, options);\n    }\n};\n//# sourceMappingURL=WavPackLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL3dhdnBhY2svV2F2UGFja0xvYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsdU5BQTRCO0FBQ3REO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvd2F2cGFjay9XYXZQYWNrTG9hZGVyLmpzPzczZjUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHdhdnBhY2tQYXJzZXJMb2FkZXIgPSB7XG4gICAgcGFyc2VyVHlwZTogJ3dhdnBhY2snLFxuICAgIGV4dGVuc2lvbnM6IFsnLnd2JywgJy53dnAnXSxcbiAgICBhc3luYyBsb2FkKG1ldGFkYXRhLCB0b2tlbml6ZXIsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyAoYXdhaXQgaW1wb3J0KCcuL1dhdlBhY2tQYXJzZXIuanMnKSkuV2F2UGFja1BhcnNlcihtZXRhZGF0YSwgdG9rZW5pemVyLCBvcHRpb25zKTtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9V2F2UGFja0xvYWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/wavpack/WavPackLoader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/wavpack/WavPackParser.js":
/*!******************************************************************!*\
  !*** ./node_modules/music-metadata/lib/wavpack/WavPackParser.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WavPackContentError: () => (/* binding */ WavPackContentError),\n/* harmony export */   WavPackParser: () => (/* binding */ WavPackParser)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _apev2_APEv2Parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../apev2/APEv2Parser.js */ \"(rsc)/./node_modules/music-metadata/lib/apev2/APEv2Parser.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/FourCC.js */ \"(rsc)/./node_modules/music-metadata/lib/common/FourCC.js\");\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/BasicParser.js */ \"(rsc)/./node_modules/music-metadata/lib/common/BasicParser.js\");\n/* harmony import */ var _WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WavPackToken.js */ \"(rsc)/./node_modules/music-metadata/lib/wavpack/WavPackToken.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! debug */ \"(rsc)/./node_modules/debug/src/index.js\");\n/* harmony import */ var uint8array_extras__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uint8array-extras */ \"(rsc)/./node_modules/uint8array-extras/index.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ParseError.js */ \"(rsc)/./node_modules/music-metadata/lib/ParseError.js\");\n\n\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_5__('music-metadata:parser:WavPack');\nclass WavPackContentError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_6__.makeUnexpectedFileContentError)('WavPack') {\n}\n/**\n * WavPack Parser\n */\nclass WavPackParser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_3__.BasicParser {\n    constructor() {\n        super(...arguments);\n        this.audioDataSize = 0;\n    }\n    async parse() {\n        this.audioDataSize = 0;\n        // First parse all WavPack blocks\n        await this.parseWavPackBlocks();\n        // try to parse APEv2 header\n        return _apev2_APEv2Parser_js__WEBPACK_IMPORTED_MODULE_1__.APEv2Parser.tryParseApeHeader(this.metadata, this.tokenizer, this.options);\n    }\n    async parseWavPackBlocks() {\n        do {\n            const blockId = await this.tokenizer.peekToken(_common_FourCC_js__WEBPACK_IMPORTED_MODULE_2__.FourCcToken);\n            if (blockId !== 'wvpk')\n                break;\n            const header = await this.tokenizer.readToken(_WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__.BlockHeaderToken);\n            if (header.BlockID !== 'wvpk')\n                throw new WavPackContentError('Invalid WavPack Block-ID');\n            debug(`WavPack header blockIndex=${header.blockIndex}, len=${_WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__.BlockHeaderToken.len}`);\n            if (header.blockIndex === 0 && !this.metadata.format.container) {\n                this.metadata.setFormat('container', 'WavPack');\n                this.metadata.setFormat('lossless', !header.flags.isHybrid);\n                // tagTypes: this.type,\n                this.metadata.setFormat('bitsPerSample', header.flags.bitsPerSample);\n                if (!header.flags.isDSD) {\n                    // In case isDSD, these values will ne set in ID_DSD_BLOCK\n                    this.metadata.setFormat('sampleRate', header.flags.samplingRate);\n                    this.metadata.setFormat('duration', header.totalSamples / header.flags.samplingRate);\n                }\n                this.metadata.setFormat('numberOfChannels', header.flags.isMono ? 1 : 2);\n                this.metadata.setFormat('numberOfSamples', header.totalSamples);\n                this.metadata.setFormat('codec', header.flags.isDSD ? 'DSD' : 'PCM');\n            }\n            const ignoreBytes = header.blockSize - (_WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__.BlockHeaderToken.len - 8);\n            await (header.blockIndex === 0 ? this.parseMetadataSubBlock(header, ignoreBytes) : this.tokenizer.ignore(ignoreBytes));\n            if (header.blockSamples > 0) {\n                this.audioDataSize += header.blockSize; // Count audio data for bit-rate calculation\n            }\n        } while (!this.tokenizer.fileInfo.size || this.tokenizer.fileInfo.size - this.tokenizer.position >= _WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__.BlockHeaderToken.len);\n        if (this.metadata.format.duration) {\n            this.metadata.setFormat('bitrate', this.audioDataSize * 8 / this.metadata.format.duration);\n        }\n    }\n    /**\n     * Ref: http://www.wavpack.com/WavPack5FileFormat.pdf, 3.0 Metadata Sub-blocks\n     * @param header Header\n     * @param remainingLength Remaining length\n     */\n    async parseMetadataSubBlock(header, remainingLength) {\n        let remaining = remainingLength;\n        while (remaining > _WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__.MetadataIdToken.len) {\n            const id = await this.tokenizer.readToken(_WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__.MetadataIdToken);\n            const dataSizeInWords = await this.tokenizer.readNumber(id.largeBlock ? token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_LE : token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8);\n            const data = new Uint8Array(dataSizeInWords * 2 - (id.isOddSize ? 1 : 0));\n            await this.tokenizer.readBuffer(data);\n            debug(`Metadata Sub-Blocks functionId=0x${id.functionId.toString(16)}, id.largeBlock=${id.largeBlock},data-size=${data.length}`);\n            switch (id.functionId) {\n                case 0x0: // ID_DUMMY: could be used to pad WavPack blocks\n                    break;\n                case 0xe: { // ID_DSD_BLOCK\n                    debug('ID_DSD_BLOCK');\n                    // https://github.com/dbry/WavPack/issues/71#issuecomment-483094813\n                    const mp = 1 << token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(data, 0);\n                    const samplingRate = header.flags.samplingRate * mp * 8; // ToDo: second factor should be read from DSD-metadata block https://github.com/dbry/WavPack/issues/71#issuecomment-483094813\n                    if (!header.flags.isDSD)\n                        throw new WavPackContentError('Only expect DSD block if DSD-flag is set');\n                    this.metadata.setFormat('sampleRate', samplingRate);\n                    this.metadata.setFormat('duration', header.totalSamples / samplingRate);\n                    break;\n                }\n                case 0x24: // ID_ALT_TRAILER: maybe used to embed original ID3 tag header\n                    debug('ID_ALT_TRAILER: trailer for non-wav files');\n                    break;\n                case 0x26: // ID_MD5_CHECKSUM\n                    this.metadata.setFormat('audioMD5', data);\n                    break;\n                case 0x2f: // ID_BLOCK_CHECKSUM\n                    debug(`ID_BLOCK_CHECKSUM: checksum=${(0,uint8array_extras__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToHex)(data)}`);\n                    break;\n                default:\n                    debug(`Ignore unsupported meta-sub-block-id functionId=0x${id.functionId.toString(16)}`);\n                    break;\n            }\n            remaining -= _WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__.MetadataIdToken.len + (id.largeBlock ? token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_LE.len : token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.len) + dataSizeInWords * 2;\n            debug(`remainingLength=${remaining}`);\n            if (id.isOddSize)\n                this.tokenizer.ignore(1);\n        }\n        if (remaining !== 0)\n            throw new WavPackContentError('metadata-sub-block should fit it remaining length');\n    }\n}\n//# sourceMappingURL=WavPackParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/wavpack/WavPackParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/music-metadata/lib/wavpack/WavPackToken.js":
/*!*****************************************************************!*\
  !*** ./node_modules/music-metadata/lib/wavpack/WavPackToken.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlockHeaderToken: () => (/* binding */ BlockHeaderToken),\n/* harmony export */   MetadataIdToken: () => (/* binding */ MetadataIdToken)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(rsc)/./node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/FourCC.js */ \"(rsc)/./node_modules/music-metadata/lib/common/FourCC.js\");\n\n\nconst SampleRates = [6000, 8000, 9600, 11025, 12000, 16000, 22050, 24000, 32000, 44100,\n    48000, 64000, 88200, 96000, 192000, -1];\n/**\n * WavPack Block Header\n *\n * 32-byte little-endian header at the front of every WavPack block\n *\n * Ref: http://www.wavpack.com/WavPack5FileFormat.pdf (page 2/6: 2.0 \"Block Header\")\n */\nconst BlockHeaderToken = {\n    len: 32,\n    get: (buf, off) => {\n        const flags = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 24);\n        const res = {\n            // should equal 'wvpk'\n            BlockID: _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__.FourCcToken.get(buf, off),\n            //  0x402 to 0x410 are valid for decode\n            blockSize: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 4),\n            //  0x402 (1026) to 0x410 are valid for decode\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off + 8),\n            //  40-bit total samples for entire file (if block_index == 0 and a value of -1 indicates an unknown length)\n            totalSamples: /* replace with bigint? (Token.UINT8.get(buf, off + 11) << 32) + */ token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 12),\n            // 40-bit block_index\n            blockIndex: /* replace with bigint? (Token.UINT8.get(buf, off + 10) << 32) + */ token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 16),\n            // 40-bit total samples for entire file (if block_index == 0 and a value of -1 indicates an unknown length)\n            blockSamples: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 20),\n            // various flags for id and decoding\n            flags: {\n                bitsPerSample: (1 + getBitAllignedNumber(flags, 0, 2)) * 8,\n                isMono: isBitSet(flags, 2),\n                isHybrid: isBitSet(flags, 3),\n                isJointStereo: isBitSet(flags, 4),\n                crossChannel: isBitSet(flags, 5),\n                hybridNoiseShaping: isBitSet(flags, 6),\n                floatingPoint: isBitSet(flags, 7),\n                samplingRate: SampleRates[getBitAllignedNumber(flags, 23, 4)],\n                isDSD: isBitSet(flags, 31)\n            },\n            // crc for actual decoded data\n            crc: new token_types__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayType(4).get(buf, off + 28)\n        };\n        if (res.flags.isDSD) {\n            res.totalSamples *= 8;\n        }\n        return res;\n    }\n};\n/**\n * 3.0 Metadata Sub-Blocks\n * Ref: http://www.wavpack.com/WavPack5FileFormat.pdf (page 4/6: 3.0 \"Metadata Sub-Block\")\n */\nconst MetadataIdToken = {\n    len: 1,\n    get: (buf, off) => {\n        return {\n            functionId: getBitAllignedNumber(buf[off], 0, 6), // functionId overlaps with isOptional flag\n            isOptional: isBitSet(buf[off], 5),\n            isOddSize: isBitSet(buf[off], 6),\n            largeBlock: isBitSet(buf[off], 7)\n        };\n    }\n};\nfunction isBitSet(flags, bitOffset) {\n    return getBitAllignedNumber(flags, bitOffset, 1) === 1;\n}\nfunction getBitAllignedNumber(flags, bitOffset, len) {\n    return (flags >>> bitOffset) & (0xffffffff >>> (32 - len));\n}\n//# sourceMappingURL=WavPackToken.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL3dhdnBhY2svV2F2UGFja1Rva2VuLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUM7QUFDYTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxzQkFBc0Isa0RBQWU7QUFDckM7QUFDQTtBQUNBLHFCQUFxQiwwREFBVztBQUNoQztBQUNBLHVCQUF1QixrREFBZTtBQUN0QztBQUNBLHFCQUFxQixrREFBZTtBQUNwQztBQUNBLDhGQUE4RixrREFBZTtBQUM3RztBQUNBLDRGQUE0RixrREFBZTtBQUMzRztBQUNBLDBCQUEwQixrREFBZTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EscUJBQXFCLHVEQUFvQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi93YXZwYWNrL1dhdlBhY2tUb2tlbi5qcz8xYTk0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFRva2VuIGZyb20gJ3Rva2VuLXR5cGVzJztcbmltcG9ydCB7IEZvdXJDY1Rva2VuIH0gZnJvbSAnLi4vY29tbW9uL0ZvdXJDQy5qcyc7XG5jb25zdCBTYW1wbGVSYXRlcyA9IFs2MDAwLCA4MDAwLCA5NjAwLCAxMTAyNSwgMTIwMDAsIDE2MDAwLCAyMjA1MCwgMjQwMDAsIDMyMDAwLCA0NDEwMCxcbiAgICA0ODAwMCwgNjQwMDAsIDg4MjAwLCA5NjAwMCwgMTkyMDAwLCAtMV07XG4vKipcbiAqIFdhdlBhY2sgQmxvY2sgSGVhZGVyXG4gKlxuICogMzItYnl0ZSBsaXR0bGUtZW5kaWFuIGhlYWRlciBhdCB0aGUgZnJvbnQgb2YgZXZlcnkgV2F2UGFjayBibG9ja1xuICpcbiAqIFJlZjogaHR0cDovL3d3dy53YXZwYWNrLmNvbS9XYXZQYWNrNUZpbGVGb3JtYXQucGRmIChwYWdlIDIvNjogMi4wIFwiQmxvY2sgSGVhZGVyXCIpXG4gKi9cbmV4cG9ydCBjb25zdCBCbG9ja0hlYWRlclRva2VuID0ge1xuICAgIGxlbjogMzIsXG4gICAgZ2V0OiAoYnVmLCBvZmYpID0+IHtcbiAgICAgICAgY29uc3QgZmxhZ3MgPSBUb2tlbi5VSU5UMzJfTEUuZ2V0KGJ1Ziwgb2ZmICsgMjQpO1xuICAgICAgICBjb25zdCByZXMgPSB7XG4gICAgICAgICAgICAvLyBzaG91bGQgZXF1YWwgJ3d2cGsnXG4gICAgICAgICAgICBCbG9ja0lEOiBGb3VyQ2NUb2tlbi5nZXQoYnVmLCBvZmYpLFxuICAgICAgICAgICAgLy8gIDB4NDAyIHRvIDB4NDEwIGFyZSB2YWxpZCBmb3IgZGVjb2RlXG4gICAgICAgICAgICBibG9ja1NpemU6IFRva2VuLlVJTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyA0KSxcbiAgICAgICAgICAgIC8vICAweDQwMiAoMTAyNikgdG8gMHg0MTAgYXJlIHZhbGlkIGZvciBkZWNvZGVcbiAgICAgICAgICAgIHZlcnNpb246IFRva2VuLlVJTlQxNl9MRS5nZXQoYnVmLCBvZmYgKyA4KSxcbiAgICAgICAgICAgIC8vICA0MC1iaXQgdG90YWwgc2FtcGxlcyBmb3IgZW50aXJlIGZpbGUgKGlmIGJsb2NrX2luZGV4ID09IDAgYW5kIGEgdmFsdWUgb2YgLTEgaW5kaWNhdGVzIGFuIHVua25vd24gbGVuZ3RoKVxuICAgICAgICAgICAgdG90YWxTYW1wbGVzOiAvKiByZXBsYWNlIHdpdGggYmlnaW50PyAoVG9rZW4uVUlOVDguZ2V0KGJ1Ziwgb2ZmICsgMTEpIDw8IDMyKSArICovIFRva2VuLlVJTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyAxMiksXG4gICAgICAgICAgICAvLyA0MC1iaXQgYmxvY2tfaW5kZXhcbiAgICAgICAgICAgIGJsb2NrSW5kZXg6IC8qIHJlcGxhY2Ugd2l0aCBiaWdpbnQ/IChUb2tlbi5VSU5UOC5nZXQoYnVmLCBvZmYgKyAxMCkgPDwgMzIpICsgKi8gVG9rZW4uVUlOVDMyX0xFLmdldChidWYsIG9mZiArIDE2KSxcbiAgICAgICAgICAgIC8vIDQwLWJpdCB0b3RhbCBzYW1wbGVzIGZvciBlbnRpcmUgZmlsZSAoaWYgYmxvY2tfaW5kZXggPT0gMCBhbmQgYSB2YWx1ZSBvZiAtMSBpbmRpY2F0ZXMgYW4gdW5rbm93biBsZW5ndGgpXG4gICAgICAgICAgICBibG9ja1NhbXBsZXM6IFRva2VuLlVJTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyAyMCksXG4gICAgICAgICAgICAvLyB2YXJpb3VzIGZsYWdzIGZvciBpZCBhbmQgZGVjb2RpbmdcbiAgICAgICAgICAgIGZsYWdzOiB7XG4gICAgICAgICAgICAgICAgYml0c1BlclNhbXBsZTogKDEgKyBnZXRCaXRBbGxpZ25lZE51bWJlcihmbGFncywgMCwgMikpICogOCxcbiAgICAgICAgICAgICAgICBpc01vbm86IGlzQml0U2V0KGZsYWdzLCAyKSxcbiAgICAgICAgICAgICAgICBpc0h5YnJpZDogaXNCaXRTZXQoZmxhZ3MsIDMpLFxuICAgICAgICAgICAgICAgIGlzSm9pbnRTdGVyZW86IGlzQml0U2V0KGZsYWdzLCA0KSxcbiAgICAgICAgICAgICAgICBjcm9zc0NoYW5uZWw6IGlzQml0U2V0KGZsYWdzLCA1KSxcbiAgICAgICAgICAgICAgICBoeWJyaWROb2lzZVNoYXBpbmc6IGlzQml0U2V0KGZsYWdzLCA2KSxcbiAgICAgICAgICAgICAgICBmbG9hdGluZ1BvaW50OiBpc0JpdFNldChmbGFncywgNyksXG4gICAgICAgICAgICAgICAgc2FtcGxpbmdSYXRlOiBTYW1wbGVSYXRlc1tnZXRCaXRBbGxpZ25lZE51bWJlcihmbGFncywgMjMsIDQpXSxcbiAgICAgICAgICAgICAgICBpc0RTRDogaXNCaXRTZXQoZmxhZ3MsIDMxKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8vIGNyYyBmb3IgYWN0dWFsIGRlY29kZWQgZGF0YVxuICAgICAgICAgICAgY3JjOiBuZXcgVG9rZW4uVWludDhBcnJheVR5cGUoNCkuZ2V0KGJ1Ziwgb2ZmICsgMjgpXG4gICAgICAgIH07XG4gICAgICAgIGlmIChyZXMuZmxhZ3MuaXNEU0QpIHtcbiAgICAgICAgICAgIHJlcy50b3RhbFNhbXBsZXMgKj0gODtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbn07XG4vKipcbiAqIDMuMCBNZXRhZGF0YSBTdWItQmxvY2tzXG4gKiBSZWY6IGh0dHA6Ly93d3cud2F2cGFjay5jb20vV2F2UGFjazVGaWxlRm9ybWF0LnBkZiAocGFnZSA0LzY6IDMuMCBcIk1ldGFkYXRhIFN1Yi1CbG9ja1wiKVxuICovXG5leHBvcnQgY29uc3QgTWV0YWRhdGFJZFRva2VuID0ge1xuICAgIGxlbjogMSxcbiAgICBnZXQ6IChidWYsIG9mZikgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZnVuY3Rpb25JZDogZ2V0Qml0QWxsaWduZWROdW1iZXIoYnVmW29mZl0sIDAsIDYpLCAvLyBmdW5jdGlvbklkIG92ZXJsYXBzIHdpdGggaXNPcHRpb25hbCBmbGFnXG4gICAgICAgICAgICBpc09wdGlvbmFsOiBpc0JpdFNldChidWZbb2ZmXSwgNSksXG4gICAgICAgICAgICBpc09kZFNpemU6IGlzQml0U2V0KGJ1ZltvZmZdLCA2KSxcbiAgICAgICAgICAgIGxhcmdlQmxvY2s6IGlzQml0U2V0KGJ1ZltvZmZdLCA3KVxuICAgICAgICB9O1xuICAgIH1cbn07XG5mdW5jdGlvbiBpc0JpdFNldChmbGFncywgYml0T2Zmc2V0KSB7XG4gICAgcmV0dXJuIGdldEJpdEFsbGlnbmVkTnVtYmVyKGZsYWdzLCBiaXRPZmZzZXQsIDEpID09PSAxO1xufVxuZnVuY3Rpb24gZ2V0Qml0QWxsaWduZWROdW1iZXIoZmxhZ3MsIGJpdE9mZnNldCwgbGVuKSB7XG4gICAgcmV0dXJuIChmbGFncyA+Pj4gYml0T2Zmc2V0KSAmICgweGZmZmZmZmZmID4+PiAoMzIgLSBsZW4pKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdhdlBhY2tUb2tlbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/music-metadata/lib/wavpack/WavPackToken.js\n");

/***/ })

};
;